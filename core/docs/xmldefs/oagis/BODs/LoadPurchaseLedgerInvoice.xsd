<?xml version="1.0" encoding="utf-8"?>
<!--
    License information for this file is provided in LICENSE.TXT
    For support, more information, or to report implementation bugs, 
    please contact the Open Applications Group at xml@openapplications.org 
     
    ** Revision: 8.0 **
    ** Date: 05 April 2002 **
    Open Applications Group XSD
    Copyright 1998-2002, All Rights Reserved
    
    Name: LoadPurchaseLedgerInvoice.xsd
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.openapplications.org/oagis" targetNamespace="http://www.openapplications.org/oagis" elementFormDefault="qualified" attributeFormDefault="unqualified">
        <xs:include schemaLocation="../Resources/Verbs/Load.xsd"/>
        <xs:include schemaLocation="../Resources/Nouns/PurchaseLedgerInvoice.xsd"/>
        <xs:element name="LoadPurchaseLedgerInvoice" type="LoadPurchaseLedgerInvoice">
                <xs:annotation>
                        <xs:documentation source="http://www.openapplications.org/oagis">In certain application suites, purchase order / invoice matching functionality exists in the purchasing application, while in other suites this functionality exists in the accounts payable application.

The invoice matching process may include several document types, including the following:
·	Two way match - Purchase Order and the Invoice
·	Three way match - Purchase Order, Invoice, and the Receipt
·	Four way match – Purchase Order, Invoice, Receipt, and Inspection results

Note:  For the four way match, it is assumed that inspection results have been updated on the Purchase Order for visibility in matching.

When matching takes place in the purchasing application, the accounts payable application may have to inform the purchasing application of the unapproved supplier invoice to which purchasing transactions (purchase orders, goods receiving notes and inspection tickets) are to be matched if the invoice is initially entered into the accounts payable application. Note that in some situations, invoices are entered directly into the purchase order application or are created by the purchase order application when using evaluated receipt settlement (ERS) and in this instance, it is not necessary to perform the separate integration described in these chapters.

The purpose of the LoadPurchaseLedgerInvoice is to transmit data to create an unapproved open item in either a payables application or a purchasing application.

The scope of the LoadPurchaseLedgerInvoice indicates that the supplier’s invoice has not yet been approved and the invoice is to be used as part of the invoice matching process.

OAGIS has already defined the scenario for invoices that are approved for payment in a separate BOD namely LoadPayable.
</xs:documentation>
                </xs:annotation>
        </xs:element>
        <xs:complexType name="LoadPurchaseLedgerInvoice">
                <xs:complexContent>
                        <xs:extension base="BusinessObjectDocument">
                                <xs:sequence>
                                        <xs:element name="DataArea" type="LoadPurchaseLedgerInvoiceDataArea">
                                                <xs:annotation>
                                                        <xs:documentation source="http://www.openapplications.org/oagis">Is where the information that the BOD message carries is provided, in this case LoadPurchaseLedgerInvoice. The information consists of a Verb and one or more Nouns. The verb (Load) indicates the action to be performed on the Noun (PurchaseLedgerInvoice).</xs:documentation>
                                                </xs:annotation>
                                        </xs:element>
                                </xs:sequence>
                        </xs:extension>
                </xs:complexContent>
        </xs:complexType>
        <xs:complexType name="LoadPurchaseLedgerInvoiceDataArea">
                <xs:complexContent>
                        <xs:extension base="DataArea">
                                <xs:sequence>
                                        <xs:element ref="Load"/>
                                        <xs:element ref="PurchaseLedgerInvoice" maxOccurs="unbounded"/>
                                </xs:sequence>
                        </xs:extension>
                </xs:complexContent>
        </xs:complexType>
</xs:schema>
