<?xml version="1.0"?>

<!--
 *  Copyright (c) 2001 The Open For Business Project and respected authors.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a
 *  copy of this software and associated documentation files (the "Software"),
 *  to deal in the Software without restriction, including without limitation
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense,
 *  and/or sell copies of the Software, and to permit persons to whom the
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *  This is the  Open for Business CORE component build script.
 *  $Id$
-->

<project name="Open For Business Core Component" default="jar" basedir=".">

    <!-- ================================================================== -->
    <!-- Initialization of all property settings                                                                                                                         -->
    <!-- ================================================================== -->

    <target name="init">
        <!-- Allow any user specific values to override the defaults -->
        <property file="${user.home}/build.properties"/>
        <!-- Allow project-level defaults for this build -->
        <property file="../build.properties"/>
        <!-- Allow module-level defaults for this build -->
        <property file="build.properties"/>
        
        <property name="ofbiz.version" value=""/>
        
        <property environment="env" />
        <property name="name" value="ofbcore" />
        <property name="src.dir" value="src" />
        <property name="etc.dir" value="etc" />
        <property name="lib.dir" value="lib" />
        <property name="doc.dir" value="docs" />
        <property name="build.dir" value="build" />
        <property name="pkg-dist.name" value="${name}-pkg" />
		
        <!-- Classpath setting -->
        <property name="extlib.dir" value="../lib" />

        <path id="local.class.path">
            <fileset dir="${extlib.dir}/compile" includes="*.jar"/>
            <fileset dir="${extlib.dir}/common" includes="*.jar"/>
            <fileset dir="${extlib.dir}/share" includes="*.jar"/>
            <fileset dir="${extlib.dir}/scripting" includes="*.jar"/>
            <fileset dir="${extlib.dir}/datavision" includes="*.jar"/>
            <fileset dir="${extlib.dir}/jasperreports" includes="*.jar"/>
            <fileset dir="${extlib.dir}/weka" includes="*.jar"/>
            <fileset dir="${extlib.dir}/wspublisher" includes="*.jar"/>
            <fileset dir="${extlib.dir}/jotm" includes="*.jar"/>
        </path>
    </target>

    <target name="ejbinit">
        <!-- Classpath setting -->
        <path id="ejb.class.path">
            <path refid="local.class.path"/>
            <fileset dir="${env.JBOSS_HOME}/lib/ext" includes="jboss-j2ee.jar,ejb.jar"/>
        </path>
    </target>

    <!-- ================================================================== -->
    <!-- Removes all created files and directories                                                                                                                 -->
    <!-- ================================================================== -->

    <target name="clean" depends="clean-lib">
        <delete dir="${build.dir}" />        
        <delete dir="${doc.dir}/api" />
    </target>

    <target name="clean-lib" depends="init">
        <delete dir="${lib.dir}" />
    </target>

    <!-- ================================================================== -->
    <!-- Makes sure the needed directory structure is in place                                                                                            -->
    <!-- ================================================================== -->

    <target name="prepare" depends="clean-lib">
        <mkdir dir="${build.dir}" />
        <mkdir dir="${build.dir}/share/META-INF" />
        <mkdir dir="${build.dir}/entity/META-INF" />
        <mkdir dir="${build.dir}/extentity/META-INF" />
        <mkdir dir="${build.dir}/service/META-INF" />
        <mkdir dir="${build.dir}/extutil/META-INF" />
        <mkdir dir="${build.dir}/webapp/META-INF" />

        <mkdir dir="${build.dir}/ejb/META-INF" />
        <mkdir dir="${build.dir}/crypto/META-INF" />

        <mkdir dir="${build.dir}/workflow/META-INF" />
        <mkdir dir="${build.dir}/rules/META-INF" />
        <mkdir dir="${build.dir}/datafile/META-INF" />
        <mkdir dir="${build.dir}/minilang/META-INF" />
        <mkdir dir="${lib.dir}" />
    </target>
	
    <target name="prepare-docs" depends="init">
        <mkdir dir="${doc.dir}" />
        <mkdir dir="${doc.dir}/api" />
    </target>

    <!-- ================================================================== -->
    <!-- Compilation of the core component                                                                                                                         -->
    <!-- ================================================================== -->
    
    <target name="tld" depends="prepare">
        <copy file="${etc.dir}/ofbiz.tld" tofile="${build.dir}/webapp/META-INF/ofbiz.tld" />
    </target>

    <target name="classes" depends="tld">
    	<javac debug="on" deprecation="on" destdir="${build.dir}/share" classpathref="local.class.path">
            <src path="${src.dir}/share"/>
        </javac>
        <!-- also put the DTDs in this jar file... -->
        <copy todir="${build.dir}/share">
            <fileset dir="${doc.dir}/xmldefs/ofbiz" includes="*.dtd" />
            <fileset dir="${doc.dir}/xmldefs/wfmc" includes="*.dtd" />
            <fileset dir="${src.dir}/share" includes="**/*.properties,**/*.xml,**/*.bsh,**/*.logic,**/*.js,**/*.jacl,**/*.py"/>
        </copy>
		
    	<javac debug="on" deprecation="on" destdir="${build.dir}/entity">
            <classpath>
                <path refid="local.class.path"/>
                <pathelement path="${build.dir}/share"/>
            </classpath>
            <src path="${src.dir}/entity" />
        </javac>
        <copy todir="${build.dir}/entity">
          <fileset dir="${src.dir}/entity" includes="**/*.properties,**/*.xml,**/*.bsh,**/*.logic,**/*.js,**/*.jacl,**/*.py"/>
        </copy>

    	<javac debug="on" deprecation="on" destdir="${build.dir}/extutil">
            <classpath>
                <path refid="local.class.path"/>
                <pathelement path="${build.dir}/share"/>
                <pathelement path="${build.dir}/entity"/>
            </classpath>
            <src path="${src.dir}/extutil" />
        </javac>
        <copy todir="${build.dir}/extutil">
          <fileset dir="${src.dir}/extutil" includes="**/*.properties,**/*.xml,**/*.bsh,**/*.logic,**/*.js,**/*.jacl,**/*.py"/>
        </copy>

    	<javac debug="on" deprecation="on" destdir="${build.dir}/service">
            <classpath>
                <path refid="local.class.path"/>
                <pathelement path="${build.dir}/share"/>
                <pathelement path="${build.dir}/entity"/>
                <pathelement path="${build.dir}/extutil"/>
            </classpath>
            <src path="${src.dir}/service" />
        </javac>
        <copy todir="${build.dir}/service">
          <fileset dir="${src.dir}/service" includes="**/*.properties,**/*.xml,**/*.bsh,**/*.logic,**/*.js,**/*.jacl,**/*.py"/>
        </copy>

    	<javac debug="on" deprecation="on" destdir="${build.dir}/extentity">
            <classpath>
                <path refid="local.class.path"/>
                <pathelement path="${build.dir}/share"/>
                <pathelement path="${build.dir}/entity"/>
                <pathelement path="${build.dir}/extutil"/>
                <pathelement path="${build.dir}/service"/>
            </classpath>
            <src path="${src.dir}/extentity" />
        </javac>
        <copy todir="${build.dir}/extentity">
          <fileset dir="${src.dir}/extentity" includes="**/*.properties,**/*.xml,**/*.bsh,**/*.logic,**/*.js,**/*.jacl,**/*.py"/>
        </copy>

    	<javac debug="on" deprecation="on" destdir="${build.dir}/minilang">
            <classpath>
                <path refid="local.class.path"/>
                <pathelement path="${build.dir}/share"/>
                <pathelement path="${build.dir}/entity"/>
                <pathelement path="${build.dir}/extutil"/>
                <pathelement path="${build.dir}/service"/>
            </classpath>
            <src path="${src.dir}/minilang" />
        </javac>
        <copy todir="${build.dir}/minilang">
          <fileset dir="${src.dir}/minilang" includes="**/*.properties,**/*.xml,**/*.bsh,**/*.logic,**/*.js,**/*.jacl,**/*.py"/>
        </copy>

    	<javac debug="on" deprecation="on" destdir="${build.dir}/webapp">
            <classpath>
                <path refid="local.class.path"/>
                <pathelement path="${build.dir}/share"/>
                <pathelement path="${build.dir}/entity"/>
                <pathelement path="${build.dir}/extutil"/>
                <pathelement path="${build.dir}/service"/>
                <pathelement path="${build.dir}/minilang"/>
            </classpath>
            <src path="${src.dir}/webapp" />
        </javac>
        <copy todir="${build.dir}/webapp">
          <fileset dir="${src.dir}/webapp" includes="**/*.properties,**/*.xml,**/*.bsh,**/*.logic,**/*.js,**/*.jacl,**/*.py"/>
        </copy>
    	
    	<javac debug="on" deprecation="on" destdir="${build.dir}/workflow">
            <classpath>
                <path refid="local.class.path"/>
                <pathelement path="${build.dir}/share"/>
                <pathelement path="${build.dir}/entity"/>
                <pathelement path="${build.dir}/extutil"/>
                <pathelement path="${build.dir}/service"/>
            </classpath>
            <src path="${src.dir}/workflow" />
        </javac>
        <copy todir="${build.dir}/workflow">
          <fileset dir="${src.dir}/workflow" includes="**/*.properties,**/*.xml,**/*.bsh,**/*.logic,**/*.js,**/*.jacl,**/*.py"/>
        </copy>

    	<javac debug="on" deprecation="on" destdir="${build.dir}/rules">
            <classpath>
                <path refid="local.class.path"/>
                <pathelement path="${build.dir}/share"/>
                <pathelement path="${build.dir}/entity"/>
            </classpath>
            <src path="${src.dir}/rules" />
        </javac>
        <copy todir="${build.dir}/rules">
          <fileset dir="${src.dir}/rules" includes="**/*.properties,**/*.xml,**/*.bsh,**/*.logic,**/*.js,**/*.jacl,**/*.py"/>
        </copy>

    	<javac debug="on" deprecation="on" destdir="${build.dir}/datafile">
            <classpath>
                <path refid="local.class.path"/>
                <pathelement path="${build.dir}/share"/>
            </classpath>
            <src path="${src.dir}/datafile" />
        </javac>
        <copy todir="${build.dir}/datafile">
          <fileset dir="${src.dir}/datafile" includes="**/*.properties,**/*.xml,**/*.bsh,**/*.logic,**/*.js,**/*.jacl,**/*.py"/>
        </copy>

        <!--
        <javac debug="on" destdir="${build.dir}/crypto">
            <classpath>
                <path refid="local.class.path"/>
                <pathelement path="${build.dir}/share"/>
            </classpath>
            <src path="${src.dir}/crypto" />
        </javac> 
        <copy todir="${build.dir}/crypto">
          <fileset dir="${src.dir}/crypto" includes="**/*.properties,**/*.xml,**/*.bsh,**/*.logic,**/*.js,**/*.jacl,**/*.py"/>
        </copy>
        -->
    </target>

    <target name="jar" depends="classes">
        <jar jarfile="${lib.dir}/${name}-share${ofbiz.version}.jar" basedir="${build.dir}/share" />
        <jar jarfile="${lib.dir}/${name}-entity${ofbiz.version}.jar" basedir="${build.dir}/entity" />
        <jar jarfile="${lib.dir}/${name}-service${ofbiz.version}.jar" basedir="${build.dir}/service" />
        <jar jarfile="${lib.dir}/${name}-extutil${ofbiz.version}.jar" basedir="${build.dir}/extutil" />
        <jar jarfile="${lib.dir}/${name}-extentity${ofbiz.version}.jar" basedir="${build.dir}/extentity" />
        <jar jarfile="${lib.dir}/${name}-webapp${ofbiz.version}.jar" basedir="${build.dir}/webapp" />
        <jar jarfile="${lib.dir}/${name}-workflow${ofbiz.version}.jar" basedir="${build.dir}/workflow" />
        <jar jarfile="${lib.dir}/${name}-rules${ofbiz.version}.jar" basedir="${build.dir}/rules" />
        <jar jarfile="${lib.dir}/${name}-datafile${ofbiz.version}.jar" basedir="${build.dir}/datafile" />
        <jar jarfile="${lib.dir}/${name}-minilang${ofbiz.version}.jar" basedir="${build.dir}/minilang" />
        <!-- <jar jarfile="${lib.dir}/${name}-crypto${ofbiz.version}.jar" basedir="${build.dir}/crypto" /> -->
    </target>

    <!-- ================================================================== -->
    <!-- Compilation of the core component ejb jar                                                                                                              -->
    <!-- ================================================================== -->

    <target name="ejbxml" depends="prepare,ejbinit">
        <copy file="${etc.dir}/ejb-jar.xml" tofile="${build.dir}/ejb/META-INF/ejb-jar.xml" />
        <copy file="${etc.dir}/jboss.xml" tofile="${build.dir}/ejb/META-INF/jboss.xml" />
    </target>
	
    <target name="ejbclasses" depends="ejbxml,jar">
        <javac srcdir="${src.dir}/ejb"
            classpath="${ejbclasspath}:${build.dir}/share"
            destdir="${build.dir}/ejb" />
    </target>

    <target name="ejbjar" depends="ejbclasses">
        <jar jarfile="${lib.dir}/${name}-ejb.jar" basedir="${build.dir}/ejb" />
    </target>
	
    <!-- ================================================================== -->
    <!-- Build JavaDoc                                                                                                                                                           -->
    <!-- ================================================================== -->

    <target name="docs" depends="prepare-docs">
        <javadoc packagenames="org.ofbiz.*" 
                classpathref="local.class.path"
                destdir="${doc.dir}/api" 
                Windowtitle="Open for Business - Core API">
            <sourcepath path="${src.dir}/share" />
            <sourcepath path="${src.dir}/entity" />
            <sourcepath path="${src.dir}/service" />
            <sourcepath path="${src.dir}/extutil" />
            <sourcepath path="${src.dir}/extentity" />
            <sourcepath path="${src.dir}/webapp" />
            <sourcepath path="${src.dir}/workflow" />
            <sourcepath path="${src.dir}/rules" />
            <sourcepath path="${src.dir}/datafile" />
            <sourcepath path="${src.dir}/minilang" />
            <!-- <sourcepath path="${src.dir}/ejb" /> -->
            <sourcepath path="${src.dir}/crypto" />
        </javadoc>
    </target>

    <!-- ================================================================== -->
    <!-- Generates a GZip'ed tar source distribution                                                                                                             -->
    <!-- ================================================================== -->

    <target name="pkg-dist" depends="prepare">
        <mkdir dir="${lib.dir}/${name}" />

        <copy todir="${lib.dir}/${name}">
            <fileset dir="." includes="${src.dir}/**" />            
            <fileset dir="." includes="build.xml" />
        </copy>

        <tar tarfile="${lib.dir}/${pkg-dist.name}.tar"
             basedir="${lib.dir}"
             includes="${name}/**" />

        <gzip src="${lib.dir}/${pkg-dist.name}.tar"
              zipfile="${lib.dir}/${pkg-dist.name}.tar.gz" />
        <delete file="${lib.dir}/${pkg-dist.name}.tar" />

        <zip zipfile="${lib.dir}/${pkg-dist.name}.zip"
             basedir="${lib.dir}"
             includes="${name}/**" />
        <delete dir="${lib.dir}/${name}" />
    </target>

    <target name="all" depends="jar,pkg-dist" />
</project>
