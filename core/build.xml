<?xml version="1.0"?>

<!--
 *  Copyright (c) 2001 The Open For Business Project and respected authors.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a
 *  copy of this software and associated documentation files (the "Software"),
 *  to deal in the Software without restriction, including without limitation
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense,
 *  and/or sell copies of the Software, and to permit persons to whom the
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *  This is the  Open for Business CORE component build script.
 *  $Id$
-->

<project name="Open For Business Core Component" default="jar" basedir=".">


    <!-- ================================================================== -->
    <!-- Initialization of all property settings                            -->
    <!-- ================================================================== -->

    <target name="init">
        <property environment="env" />
        <property name="name"           value="ofbcore" />
        <property name="src.dir"        value="src" />
        <property name="etc.dir"        value="etc" />
        <property name="lib.dir"        value="lib" />
        <property name="doc.dir"        value="docs" />
        <property name="build.dir"      value="build" />
        <property name="build.compiler" value="classic" /> 
        <property name="pkg-dist.name"  value="${name}-pkg" />
        <property name="tccored.dir"    value="${env.TOMCAT_HOME}/lib" />
		
        <!-- Classpath setting -->
        <property name="servlet1.jar"  value="${env.CATALINA_HOME}/common/lib/servlet.jar" />
        <property name="servlet2.jar"  value="${env.TOMCAT_HOME}/lib/servlet.jar" />
        <property name="servlet.jar"   value="${servlet1.jar}:${servlet2.jar}" />

        <property name="jdbc1.jar"     value="${env.CATALINA_HOME}/common/lib/jdbc2_0-stdext.jar" />
        <property name="jdbc2.jar"     value="${env.JBOSS_HOME}/lib/jboss-jdbc_ext.jar.jar" />
        <property name="jdbc3.jar"     value="${env.JBOSS_HOME}/lib/jdbc2_0-stdext.jar" />
        <property name="jdbc.jar"      value="${jdbc1.jar}:${jdbc2.jar}:${jdbc3.jar}" />

        <property name="mail1.jar"    value="${env.CATALINA_HOME}/common/lib/mail.jar" />
        <property name="mail2.jar"    value="${env.JBOSS_HOME}/lib/ext/mail.jar" />
        <property name="mail.jar"     value="${mail1.jar}:${mail2.jar}" />

        <property name="jaxp1.jar"    value="${env.CATALINA_HOME}/common/lib/jaxp.jar" />
        <property name="jaxp2.jar"    value="${env.JBOSS_HOME}/lib/jaxp.jar" />
        <property name="jaxp.jar"     value="${jaxp1.jar}:${jaxp2.jar}" />

        <property name="api-jars"      value="${servlet.jar}:${jdbc.jar}:${mail.jar}" />
        <property name="xml-jars"      value="${jaxp.jar}" />
        <property name="classpath"     value="${env.CLASSPATH}:${lib.dir}:${api-jars}:${xml-jars}" />
        <echo message="classpath: ${classpath}" />                
    </target>

    <target name="ejbinit">
        <property name="ejbsrc.dir"     value="ejbsrc" />
		
        <!-- Classpath setting -->
        <property name="ejb1.jar"    value="${env.JBOSS_HOME}/lib/ext/jboss-j2ee.jar" />
        <property name="ejb2.jar"    value="${env.JBOSS_HOME}/lib/ext/ejb.jar" />
        <property name="ejb.jar"     value="${ejb1.jar}:${ejb2.jar}" />

        <property name="ejbclasspath"   value="${classpath}:${ejb.jar}" />
        <echo message="ejbclasspath: ${ejbclasspath}" />
    </target>


    <!-- ================================================================== -->
    <!-- Removes all created files and directories                          -->
    <!-- ================================================================== -->

    <target name="clean" depends="clean-lib">
      <delete dir="${build.dir}" />        
      <delete dir="${doc.dir}/api" />
    </target>

    <target name="clean-lib" depends="init">
      <delete dir="${lib.dir}" />
    </target>


    <!-- ================================================================== -->
    <!-- Makes sure the needed directory structure is in place              -->
    <!-- ================================================================== -->

    <target name="prepare" depends="clean-lib">
      <mkdir dir="${build.dir}" />
      <mkdir dir="${build.dir}/ejb/META-INF" />
      <mkdir dir="${build.dir}/jar/webapp/META-INF" />
      <mkdir dir="${build.dir}/jar/share/META-INF" />
      <mkdir dir="${lib.dir}" />
    </target>
	
    <target name="prepare-docs" depends="init">
        <mkdir dir="${doc.dir}" />
        <mkdir dir="${doc.dir}/api" />
    </target>


    <!-- ================================================================== -->
    <!-- Compilation of the core component                                  -->
    <!-- ================================================================== -->
    <target name="tld" depends="prepare">
        <copy file="${etc.dir}/taglib.tld"
            tofile="${build.dir}/jar/webapp/META-INF/taglib.tld" />
    </target>

    <target name="classes" depends="tld">
    	<javac destdir="${build.dir}/jar/share" classpath="${classpath}">
    		<src path="${src.dir}" />
    		<exclude name="org/ofbiz/core/control/*" />
    		<exclude name="org/ofbiz/core/event/*" />
    		<exclude name="org/ofbiz/core/taglib/*" />
    		<exclude name="org/ofbiz/core/scheduler/*" />
    	</javac>
    	<javac destdir="${build.dir}/jar/webapp" classpath="${classpath}:${build.dir}/jar/share">
    		<src path="${src.dir}" />
    		<exclude name="org/ofbiz/core/entity/*" />
    		<exclude name="org/ofbiz/core/entity/model/*" />
    		<exclude name="org/ofbiz/core/util/*" />
    		<exclude name="org/ofbiz/core/security/*" />
    	</javac>
    </target>

    <target name="jar" depends="classes">
        <jar jarfile="${lib.dir}/${name}-share.jar"
            basedir="${build.dir}/jar/share" />
        <jar jarfile="${lib.dir}/${name}-webapp.jar"
        	basedir="${build.dir}/jar/webapp" />
    </target>
	
    <!-- ================================================================== -->
    <!-- Compilation of the core component ejb jar                          -->
    <!-- ================================================================== -->

    <target name="ejbxml" depends="prepare,ejbinit">
        <copy file="${etc.dir}/ejb-jar.xml"
            tofile="${build.dir}/ejb/META-INF/ejb-jar.xml" />
        <copy file="${etc.dir}/jboss.xml"
            tofile="${build.dir}/ejb/META-INF/jboss.xml" />
    </target>
	
    <target name="ejbclasses" depends="ejbxml,jar">
        <javac srcdir="${ejbsrc.dir}"
            classpath="${ejbclasspath}:${build.dir}/jar"
            destdir="${build.dir}/ejb" />
    </target>

    <target name="ejbjar" depends="ejbclasses">
        <jar jarfile="${lib.dir}/${name}-ejb.jar"
            basedir="${build.dir}/ejb" />
    </target>
	
	
    <!-- ================================================================== -->
    <!-- Build JavaDoc                                                      -->
    <!-- ================================================================== -->

    <target name="docs" depends="prepare-docs">
        <javadoc packagenames="org.ofbiz.*" classpath="${classpath}"
            sourcepath="${src.dir}" destdir="${doc.dir}/api" />
    </target> 


    <!-- ================================================================== -->
    <!-- Generates a GZip'ed tar source distribution                        -->
    <!-- ================================================================== -->

    <target name="pkg-dist" depends="prepare">

        <mkdir dir="${lib.dir}/${name}" />

        <copy todir="${lib.dir}/${name}">
            <fileset dir="." includes="${src.dir}/**" />            
            <fileset dir="." includes="build.xml" />
        </copy>

        <tar tarfile="${lib.dir}/${pkg-dist.name}.tar"
             basedir="${lib.dir}"
             includes="${name}/**" />

        <gzip src="${lib.dir}/${pkg-dist.name}.tar"
              zipfile="${lib.dir}/${pkg-dist.name}.tar.gz" />

        <delete file="${lib.dir}/${pkg-dist.name}.tar" />

        <zip zipfile="${lib.dir}/${pkg-dist.name}.zip"
             basedir="${lib.dir}"
             includes="${name}/**" />

        <delete dir="${lib.dir}/${name}" />

    </target>

    <target name="all" depends="jar,pkg-dist" />

</project>

