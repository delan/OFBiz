<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<screens xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/widget-screen.xsd">
    <screen name="main-decorator">
        <section>
            <actions>
                <!-- base/top/specific map first, then more common map added for shared labels --> 
                <property-map resource="CommonUiLabels" map-name="uiLabelMap" global="true"/>

                <set field="layoutSettings.companyName" from-field="uiLabelMap.ManufacturingCompanyName" global="true"/>
                <set field="layoutSettings.companySubtitle" from-field="uiLabelMap.ManufacturingCompanySubtitle" global="true"/>
                <set field="activeApp" value="bi" global="true"/>
                <set field="applicationMenuName" value="BiAppBar" global="true"/>
                <set field="applicationMenuLocation" value="component://bi/widget/BiMenus.xml" global="true"/>
            </actions>
            <widgets>
                <include-screen name="GlobalDecorator" location="component://common/widget/CommonScreens.xml"/>
            </widgets>
        </section>
    </screen>
    <screen name="login">
        <section>
            <widgets>
                <decorator-screen name="main-decorator" location="${parameters.mainDecoratorLocation}">
                    <decorator-section name="body">
                        <platform-specific>
                            <html><html-template location="component://common/webcommon/login.ftl"/></html>
                        </platform-specific>
                    </decorator-section>
                </decorator-screen>
            </widgets>
        </section>
    </screen>
    <screen name="requirePasswordChange">
        <section>
            <widgets>
                <decorator-screen name="main-decorator" location="${parameters.mainDecoratorLocation}">
                    <decorator-section name="body">
                        <platform-specific>
                            <html><html-template location="component://common/webcommon/changePassword.ftl"/></html>
                        </platform-specific>
                    </decorator-section>
                </decorator-screen>
            </widgets>
        </section>
    </screen>
    <screen name="ReportBuilderSelectStarSchema">
        <section>
            <widgets>
                <decorator-screen name="main-decorator" location="${parameters.mainDecoratorLocation}">
                    <decorator-section name="body">
                        <include-form name="selectStarSchema" location="component://bi/widget/BiForms.xml"/>
                    </decorator-section>
                </decorator-screen>
            </widgets>
        </section>
    </screen>
    <screen name="ReportBuilderSelectStarSchemaFields">
        <section>
            <actions>
                <script location="component://bi/webapp/bi/WEB-INF/actions/reportbuilder/getStarSchemaFields.bsh"/>
            </actions>
            <widgets>
                <decorator-screen name="main-decorator" location="${parameters.mainDecoratorLocation}">
                    <decorator-section name="body">
                        <platform-specific>
                            <html><html-template location="component://bi/webapp/bi/reportbuilder/SelectStarSchemaFields.ftl"/></html>
                        </platform-specific>
                    </decorator-section>
                </decorator-screen>
            </widgets>
        </section>
    </screen>
    <screen name="ReportBuilderRenderStarSchemaReport">
        <section>
            <actions>
                <script location="component://bi/webapp/bi/WEB-INF/actions/reportbuilder/runStarSchemaQuery.bsh"/>
            </actions>
            <widgets>
                <decorator-screen name="main-decorator" location="${parameters.mainDecoratorLocation}">
                    <decorator-section name="body">
                        <platform-specific>
                            <html><html-template location="component://bi/webapp/bi/reportbuilder/RenderStarSchemaReport.ftl"/></html>
                        </platform-specific>
                    </decorator-section>
                </decorator-screen>
            </widgets>
        </section>
    </screen>

    <screen name="main">
        <section>
            <actions>
                <set field="fromDate" value="2007-01-01 00:00:00.0" type="Timestamp"/>
                <set field="thruDate" value="2008-01-01 00:00:00.0" type="Timestamp"/>
            </actions>
            <widgets>
                <decorator-screen name="main-decorator" location="${parameters.mainDecoratorLocation}">
                    <decorator-section name="body">
                        <container>
                            <label style="head1">Business Intelligence integrated framework</label>
                        </container>
                        <container>
                            <label>
                                This is a proof of concept for an OFBiz integrated framework for business intelligence analysis.
                            </label>
                        </container>
                        <container>
                            <label>
                                The idea is to define a set entities for business intelligence analysis in a separate (olap) database,
                                accessible, in the same way as the main one (oltp), via the delegator.
                            </label>
                        </container>
                        <container>
                            <label>
                                The new olap database, will contain all the entities necessary to datawarehouse analysis:
                                dimensions, facts and star schemas (that are view-entities).
                            </label>
                        </container>
                        <container>
                            <label>
                                The dimensions, facts and star schemas are defined according to best practices for datawarehouses
                                and best practices for OFBiz: they are defined as standard entities using the xml entity defs;
                                clear and consistent naming conventions are used and they are documented
                                by meta data descriptions (in the entity def).
                            </label>
                        </container>
                        <container>
                            <label>
                                The best practices for datawarehouses are mainly taken from the great book "The Data Warehouse Toolkit - Second Edition" by Ralph Kimball.
                            </label>
                        </container>
                        <container>
                            <label>
                                The data for dimensions and facts are maintained and kept up to date using standard OFBiz services
                                (most of them written in minilang to facilitate customizations) and eca rules (easily customizable).
                            </label>
                        </container>
                        <container>
                            <label style="head3">
                                Current Status
                            </label>
                        </container>
                        <container>
                            <label>
                                The main low level services to post data to the datawarehouse, 
                                to map the operational keys with the datawarehouse ones, and to manage
                                history of data changes are already implemented; they will be improved as the datawarehouse will grow (e.g. performance enhancements).
                            </label>
                        </container>
                        <container>
                            <label>
                                The following dimensions (and data services) are defined: CurrencyDimension, DateDimension, ProductDimension;
                                we will have to complete them and design the other ones (the total number of dimension will be probably around 20).
                            </label>
                        </container>
                        <container>
                            <label>
                                Just one fact and one star schema are defined: SalesInvoiceItemFact and SalesInvoiceItemStarSchema.
                            </label>
                        </container>
                        <container>
                            <label style="head3">
                                Quick Start Guide
                            </label>
                        </container>
                        <container>
                            <label>
                                You can quickly initialize the datawarehouse by clicking on the link below:
                                The CurrencyDimension, DateDimension, ProductDimension and the SalesInvoiceItemFact entities will be automatically populated.
                            </label>
                        </container>
                        <container>
                            <label>
                                Then you can run the analysis using the report builder menu.
                                The report builder is a very simple tool that allows you to run
                                the analysis on all the star schemas defined in the system.
                                However, right now there is just one star schema defined:
                                SalesInvoiceItemStarSchema that is a simple "profit and loss" (P&amp;L) analysis.
                            </label>
                        </container>
                        <container>
                            <label>
                                Just select using the checkboxes the fields (columns) you want to see in the report
                                and a simple report will be shown: according to the columns selected the data will be aggregated (drill up/down);
                                all the descriptions you see in the report screens are pulled from the entity definitions.
                            </label>
                        </container>
                        <container>
                            <link target="quickInitDataWarehouse?fromDate=${fromDate}&amp;thruDate=${thruDate}" text="Quick Init DataWarehouse" style="buttontext"/>
                            <label> (from date ${fromDate} thru date ${thruDate})</label>
                        </container>
                        <container>
                            <label>
                                The initialization is needed only once, because the product data and sales invoice data
                                are kept updated by ecas: if you create/update a product or create a new invoice,
                                the new information will be immediately included in the datawarehouse analysis.
                            </label>
                        </container>
                    </decorator-section>
                </decorator-screen>
            </widgets>
        </section>
    </screen>
</screens>

