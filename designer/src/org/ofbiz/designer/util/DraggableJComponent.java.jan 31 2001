package util;

import javax.swing.*;
import java.awt.event.*;
import java.awt.*;


//Adds the functionality of a draggable gui component to JComponent
public class DraggableJComponent extends JComponent { 
	
	//setting this to false will disable the drag functionality
	protected boolean dragEnabled;
	
	//will perform the function usually performed by "this" when "this" is unavailable becuase
	//we are inside an anonymous inner class
	protected DraggableJComponent enclosingObject = this;
	
	//these keep the previous positions of the mouse so we can calculate how far it has moved.
	protected int oldMouseX;
	protected int oldMouseY;
	
	public DraggableJComponent() {
		
		//the default state is drag-enabled
		dragEnabled = true;
		
		addMouseMotionListener(new MouseMotionAdapter() {
			public void mouseDragged(MouseEvent e) {
				
				if(enclosingObject.getDragEnabled()) {
					
					//retrieve the location of the DraggableJComponent
					int currTaskX = enclosingObject.getX();
					int currTaskY = enclosingObject.getY();
				
					//calculated how far the mouse has moved
					int xDiff = e.getX() - oldMouseX;
					int yDiff = e.getY() - oldMouseY;
				
					//adjust the location of the component by the same distance the mouse has moved
					enclosingObject.setLocation(currTaskX+xDiff,currTaskY+yDiff);
				
				}
			}});
		
		addMouseListener(new MouseAdapter() {
			public void mousePressed(MouseEvent e) {
				
				//initializes the old location of the mouse when the mouse is pressed
				oldMouseX = e.getX();
				oldMouseY = e.getY();
			
			}
		});
		
	}
	
	//simple access method
	public void setDragEnabled(boolean val) {
		dragEnabled = val;
	}
	
	//simple access method
	public boolean getDragEnabled() {
		return dragEnabled;
	}
}

