/*
 *  Copyright (c) 2003 The Open For Business Project - www.ofbiz.org
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a 
 *  copy of this software and associated documentation files (the "Software"), 
 *  to deal in the Software without restriction, including without limitation 
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense, 
 *  and/or sell copies of the Software, and to permit persons to whom the 
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included 
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS 
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF 
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY 
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT 
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR 
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *@author     Andy Zeneski (jaz@ofbiz.org)
 *@version    $Revision$
 *@since      2.2
 */

import java.util.*;
import org.ofbiz.core.entity.*;
import org.ofbiz.core.util.*;
import org.ofbiz.commonapp.security.login.*;
import org.ofbiz.commonapp.common.*;

userLogin = session.getAttribute(SiteDefs.USER_LOGIN);
if (userLogin != null) request.setAttribute("userLogin", userLogin);

person = session.getAttribute(SiteDefs.PERSON);
partyGroup = session.getAttribute(SiteDefs.PARTY_GROUP);
if (person == null) {
    person = userLogin == null ? null : userLogin.getRelatedOne("Person");
    if (person != null) session.setAttribute(SiteDefs.PERSON, person);
}
if (person != null) {
    request.setAttribute("person", person);
} else if (partyGroup == null) {
    person = userLogin == null ? null : userLogin.getRelatedOne("PartyGroup");
    if (partyGroup != null) session.setAttribute(SiteDefs.PARTY_GROUP, partyGroup);
}
if (partyGroup != null) request.setAttribute("partyGroup", partyGroup);

controlPath = request.getAttribute(SiteDefs.CONTROL_PATH);
contextRoot = request.getAttribute(SiteDefs.CONTEXT_ROOT);
serverRoot = request.getAttribute(SiteDefs.SERVER_ROOT_URL);

layoutSettings = new HashMap();
request.setAttribute("layoutSettings", layoutSettings);
    
layoutSettings.put("companyName", "OFBiz: Catalog Manager");
layoutSettings.put("companySubtitle", "Part of the Open For Business Family of Open Source Software");
layoutSettings.put("headerImageUrl", "/images/ofbiz_logo.jpg");
layoutSettings.put("headerMiddleBackgroundUrl", null);
layoutSettings.put("headerRightBackgroundUrl", null);

request.setAttribute("checkLoginUrl", CommonWorkers.makeLoginUrl(request, "checkLogin"));

externalLoginKey = LoginEvents.getExternalLoginKey(request);
externalKeyParam = externalLoginKey == null ? "" : "&externalLoginKey=" + externalLoginKey;
request.setAttribute("externalKeyParam", externalKeyParam);
request.setAttribute("activeApp", "catalogmgr");

eventMsgReq = request.getAttribute(SiteDefs.EVENT_MESSAGE);
errorMsgReq = request.getAttribute(SiteDefs.ERROR_MESSAGE);
errorMsgSes = session.getAttribute(SiteDefs.ERROR_MESSAGE);

if (eventMsgReq != null) {
    request.setAttribute("eventMsgReq", UtilFormatOut.replaceString(eventMsgReq, "\n", "<br>"));
    request.removeAttribute(SiteDefs.EVENT_MESSAGE);
}
if (errorMsgReq != null) {
    request.setAttribute("errorMsgReq", UtilFormatOut.replaceString(errorMsgReq, "\n", "<br>"));
    request.removeAttribute(SiteDefs.ERROR_MESSAGE);
}
if (errorMsgSes != null) {
    request.setAttribute("errorMsgSes", UtilFormatOut.replaceString(errorMsgSes, "\n", "<br>"));
    session.removeAttribute(SiteDefs.ERROR_MESSAGE);
}
