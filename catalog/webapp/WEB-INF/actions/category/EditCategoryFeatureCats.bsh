import java.util.*;
import java.sql.*;
import java.io.*;
import org.ofbiz.core.entity.*;
import org.ofbiz.core.util.*;
import org.ofbiz.core.widgetimpl.*;

security = request.getAttribute("security");
delegator = request.getAttribute("delegator");

if(security.hasEntityPermission("CATALOG", "_VIEW", session)) {
    context.put("hasPermission", Boolean.TRUE);
} else {
    context.put("hasPermission", Boolean.FALSE);
}    
nowTimestamp = UtilDateTime.nowTimestamp();
context.put("nowTimestamp", nowTimestamp);

String nowTimestampString = nowTimestamp.toString();
context.put("nowTimestampString", nowTimestampString);

boolean tryEntity = true;
if (request.getAttribute(SiteDefs.ERROR_MESSAGE) != null) tryEntity = false;

String productCategoryId = request.getParameter("productCategoryId");
if (productCategoryId != null) context.put("productCategoryId", productCategoryId);

GenericValue productCategory = delegator.findByPrimaryKey("ProductCategory", UtilMisc.toMap("productCategoryId", productCategoryId));
if (productCategory == null) tryEntity = false; else context.put("productCategory", productCategory);

Collection productFeatureCategoryAppls = productCategory.getRelated("ProductFeatureCategoryAppl", null, UtilMisc.toList("productFeatureCategoryId"));
if (productFeatureCategoryAppls != null) context.put("productFeatureCategoryAppls", productFeatureCategoryAppls);

Collection productFeatureCategories = delegator.findAll("ProductFeatureCategory", UtilMisc.toList("description"));
if (productFeatureCategories != null) context.put("productFeatureCategories", productFeatureCategories);

if ("true".equalsIgnoreCase((String)request.getParameter("tryEntity"))) tryEntity = true;
context.put("tryEntity", tryEntity);