import java.util.*;
import java.io.*;
import org.ofbiz.core.entity.*;
import org.ofbiz.core.util.*;
import org.ofbiz.core.widgetimpl.*;

security = request.getAttribute("security");
delegator = request.getAttribute("delegator");

if(security.hasEntityPermission("CATALOG", "_VIEW", session)) {
    context.put("hasPermission", Boolean.TRUE);
} else {
    context.put("hasPermission", Boolean.FALSE);
}
nowTimestampString = UtilDateTime.nowTimestamp().toString();
context.put("nowTimestampString", nowTimestampString);

defaultCurrencyUomId = UtilProperties.getPropertyValue("general", "currency.uom.id.default");
if (UtilValidate.isEmpty(defaultCurrencyUomId)) defaultCurrencyUomId = "USD";
context.put("defaultCurrencyUomId", defaultCurrencyUomId);

boolean useValues = true;
if (request.getAttribute(SiteDefs.ERROR_MESSAGE) != null) useValues = false;

productId = request.getParameter("productId");
context.put("productId", productId);

GenericValue product = delegator.findByPrimaryKey("Product", UtilMisc.toMap("productId", productId));

if (product == null) 
    useValues = false; 
else 
    context.put("product", product);
    
productPrices = product.getRelated("ProductPrice", null, UtilMisc.toList("facilityGroupId", "productPriceTypeId", "currencyUomId", "fromDate"));
if (productPrices != null) context.put("productPrices", productPrices);

productPriceTypes = delegator.findAllCache("ProductPriceType", UtilMisc.toList("description"));
if (productPriceTypes != null) context.put("productPriceTypes", productPriceTypes);

currencyUoms = delegator.findByAndCache("Uom", UtilMisc.toMap("uomTypeId", "CURRENCY_MEASURE"), UtilMisc.toList("description"));
if (currencyUoms != null) context.put("currencyUoms", currencyUoms);

facilityGroups = delegator.findByAndCache("FacilityGroup", null, UtilMisc.toList("facilityGroupName"));
if (facilityGroups != null) context.put("facilityGroups", facilityGroups);

if ("true".equalsIgnoreCase((String)request.getParameter("useValues"))) useValues = true;
