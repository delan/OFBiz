import java.util.*;
import java.io.*;
import org.ofbiz.core.entity.*;
import org.ofbiz.core.util.*;
import org.ofbiz.core.widgetimpl.*;

security = request.getAttribute("security");
delegator = request.getAttribute("delegator");

if(security.hasEntityPermission("CATALOG", "_VIEW", session)) {
    context.put("hasPermission", Boolean.TRUE);
} else {
    context.put("hasPermission", Boolean.FALSE);
}

String nowTimestampString = UtilDateTime.nowTimestamp().toString();
context.put("nowTimestampString", nowTimestampString);

String productId = request.getParameter("productId");
context.put("productId", productId);

GenericValue product = delegator.findByPrimaryKey("Product", UtilMisc.toMap("productId", productId));
context.put("product", product);

Collection productFeatureAndAppls = delegator.findByAnd("ProductFeatureAndAppl", 
        UtilMisc.toMap("productId", productId), 
        UtilMisc.toList("sequenceNum", "productFeatureApplTypeId", "productFeatureTypeId", "description"));
if (productFeatureAndAppls != null) context.put("productFeatureAndAppls", productFeatureAndAppls);

Collection productFeatureCategories = delegator.findAll("ProductFeatureCategory", UtilMisc.toList("description"));
if (productFeatureCategories != null) context.put("productFeatureCategories", productFeatureCategories);
Collection productFeatureApplTypes = delegator.findAll("ProductFeatureApplType", UtilMisc.toList("description"));
if (productFeatureApplTypes != null) context.put("productFeatureApplTypes", productFeatureApplTypes);

Collection productFeatureTypes = delegator.findAll("ProductFeatureType", UtilMisc.toList("description"));
if (productFeatureTypes != null) context.put("productFeatureTypes", productFeatureTypes);
