import java.util.*;
import java.io.*;
import java.sql.Timestamp;
import java.lang.Integer;
import org.ofbiz.core.entity.*;
import org.ofbiz.core.util.*;
import org.ofbiz.core.widgetimpl.*;

security = request.getAttribute("security");
delegator = request.getAttribute("delegator");

if(security.hasEntityPermission("CATALOG", "_VIEW", session)) {
    context.put("hasPermission", Boolean.TRUE);
} else {
    context.put("hasPermission", Boolean.FALSE);
}

Timestamp nowTimestamp = UtilDateTime.nowTimestamp();
context.put("nowTimestamp", nowTimestamp);

String productPromoId = request.getParameter("productPromoId");
if (productPromoId != null) context.put("productPromoId", productPromoId);

GenericValue productPromo = delegator.findByPrimaryKey("ProductPromo", UtilMisc.toMap("productPromoId", productPromoId));    
Collection prodCatalogPromoAppls = null;
boolean tryEntity = true;

if (productPromo == null) {
    tryEntity = false;
} else {
    context.put("productPromo", productPromo);    
    prodCatalogPromoAppls = productPromo.getRelated("ProdCatalogPromoAppl", null, UtilMisc.toList("sequenceNum", "productPromoId"));
    if (prodCatalogPromoAppls != null) context.put("prodCatalogPromoAppls", prodCatalogPromoAppls);
}

Collection prodCatalogs = delegator.findAll("ProdCatalog", UtilMisc.toList("catalogName"));
if (prodCatalogs != null) context.put("prodCatalogs", prodCatalogs);

if ("true".equalsIgnoreCase((String)request.getParameter("tryEntity"))) tryEntity = true;

context.put("tryEntity", tryEntity);