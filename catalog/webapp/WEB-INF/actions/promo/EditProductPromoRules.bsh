import java.util.*;
import java.io.*;
import java.lang.Integer;
import org.ofbiz.core.entity.*;
import org.ofbiz.core.util.*;
import org.ofbiz.core.widgetimpl.*;

security = request.getAttribute("security");
delegator = request.getAttribute("delegator");

if(security.hasEntityPermission("CATALOG", "_VIEW", session)) {
    context.put("hasPermission", Boolean.TRUE);
} else {
    context.put("hasPermission", Boolean.FALSE);
}

String productPromoId = request.getParameter("productPromoId");
if (productPromoId != null) context.put("productPromoId", productPromoId);

GenericValue productPromo = delegator.findByPrimaryKey("ProductPromo", UtilMisc.toMap("productPromoId", productPromoId));
Collection productPromoRules = null;
if (productPromo != null) {
    context.put("productPromo", productPromo);
    productPromoRules = productPromo.getRelated("ProductPromoRule", null, UtilMisc.toList("ruleName"));
    if (productPromoRules != null)     
        context.put("productPromoRules", productPromoRules);
}

Collection inputParamEnums = delegator.findByAndCache("Enumeration", UtilMisc.toMap("enumTypeId", "PROD_PROMO_IN_PARAM"), UtilMisc.toList("sequenceId"));
if (inputParamEnums != null) context.put("inputParamEnums", inputParamEnums);

Collection condOperEnums = delegator.findByAndCache("Enumeration", UtilMisc.toMap("enumTypeId", "PROD_PROMO_COND"), UtilMisc.toList("sequenceId"));
if (condOperEnums != null) context.put("condOperEnums", condOperEnums);

Collection productPromoActionTypes = delegator.findAllCache("ProductPromoActionType", UtilMisc.toList("description"));
if (productPromoActionTypes != null) context.put("productPromoActionTypes", productPromoActionTypes);

Collection orderAdjustmentTypes = delegator.findAllCache("OrderAdjustmentType", UtilMisc.toList("description"));
if (orderAdjustmentTypes != null) context.put("orderAdjustmentTypes", orderAdjustmentTypes);