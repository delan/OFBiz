/*
 *  Copyright (c) 2003 The Open For Business Project - www.ofbiz.org
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a 
 *  copy of this software and associated documentation files (the "Software"), 
 *  to deal in the Software without restriction, including without limitation 
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense, 
 *  and/or sell copies of the Software, and to permit persons to whom the 
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included 
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS 
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF 
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY 
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT 
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR 
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *@author     David E. Jones
 *@author     Brad Steiner
 *@version    $Revision$
 *@since      2.2
 */

import java.util.*;
import java.io.*;
import org.ofbiz.core.entity.*;
import org.ofbiz.core.util.*;
import org.ofbiz.core.widgetimpl.*;

security = request.getAttribute("security");
delegator = request.getAttribute("delegator");

if(security.hasEntityPermission("CATALOG", "_VIEW", session)) {
    context.put("hasPermission", Boolean.TRUE);
} else {
    context.put("hasPermission", Boolean.FALSE);
}
String nowTimestampString = UtilDateTime.nowTimestamp().toString();
context.put("nowTimestampString", nowTimestampString);

String productId = request.getParameter("productId");
context.put("productId", productId);

String productFeatureCategoryId = request.getParameter("productFeatureCategoryId");
context.put("productFeatureCategoryId", productFeatureCategoryId);

GenericValue curProductFeatureCategory = delegator.findByPrimaryKey("ProductFeatureCategory", UtilMisc.toMap("productFeatureCategoryId", productFeatureCategoryId));
if (curProductFeatureCategory != null) context.put("curProductFeatureCategory", curProductFeatureCategory);

Collection productFeatures = delegator.findByAnd("ProductFeature",
        UtilMisc.toMap("productFeatureCategoryId", productFeatureCategoryId),
        UtilMisc.toList("productFeatureTypeId", "description"));
if (productFeatures != null) context.put("productFeatures", productFeatures);

Collection productFeatureTypes = delegator.findAll("ProductFeatureType", UtilMisc.toList("description"));
if (productFeatureTypes != null) context.put("productFeatureTypes", productFeatureTypes);

Map productFeatureApplMap = new HashMap();
List productFeatureAppls = null;
Iterator productFeatureIter = productFeatures.iterator();
Iterator productFeatureApplIter = null;
while (productFeatureIter.hasNext()) {
    productFeatureAppls = delegator.findByAnd("ProductFeatureAppl", UtilMisc.toMap("productId", productId, "productFeatureId", productFeatureIter.next().getString("productFeatureId")), null);
    
    productFeatureApplIter = productFeatureAppls.iterator();
    while (productFeatureApplIter.hasNext()) {
        productFeatureApplMap.put(productFeatureApplIter.next().getString("productFeatureId"), productFeatureApplIter.next().getString("productFeatureApplTypeId"));
    }
}
if (productFeatureApplMap.size() > 0) context.put("productFeatureApplMap", productFeatureApplMap);

Collection productFeatureCategories = delegator.findAll("ProductFeatureCategory", UtilMisc.toList("description"));
if (productFeatureCategories != null) context.put("productFeatureCategories", productFeatureCategories);

//we only need these if we will be showing the apply feature to category forms
if (productId != null && productId.length() > 0) {
    Collection productFeatureApplTypes = delegator.findAll("ProductFeatureApplType", UtilMisc.toList("description"));
    if (productFeatureApplTypes != null) context.put("productFeatureApplTypes", productFeatureApplTypes);
}
