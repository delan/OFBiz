/*
 *  Copyright (c) 2003 The Open For Business Project - www.ofbiz.org
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a 
 *  copy of this software and associated documentation files (the "Software"), 
 *  to deal in the Software without restriction, including without limitation 
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense, 
 *  and/or sell copies of the Software, and to permit persons to whom the 
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included 
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS 
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF 
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY 
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT 
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR 
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *@author     Tristan Austin (tristana@twibble.org)
 *@version    $Rev$
 */

import org.ofbiz.base.util.*;
import org.ofbiz.entity.*;
import org.ofbiz.widget.html.*;

security = request.getAttribute("security");
delegator = request.getAttribute("delegator");
dispatcher = request.getAttribute("dispatcher");

String orderId = request.getParameter("orderId");
String orderTypeId = null;
GenericValue orderHeader = delegator.findByPrimaryKey("OrderHeader", UtilMisc.toMap("orderId", orderId));
if (orderHeader != null) {
    orderTypeId = orderHeader.getString("orderTypeId");
}

//Determine whether a schedule has already been defined for this PO
GenericValue schedule = delegator.findByPrimaryKey("OrderDeliverySchedule", UtilMisc.toMap("orderId", orderId, "orderItemSeqId", "_NA_"));

// Determine whether the current user can VIEW the order
Map checkMap = UtilMisc.toMap("orderId", orderId, "userLogin", session.getAttribute("userLogin"), "checkAction", "VIEW");
Map checkResult = dispatcher.runSync("checkSupplierRelatedOrderPermission", checkMap);
String hasSupplierRelatedPermissionStr = (String) checkResult.get("hasSupplierRelatedPermission");

// Determine what the reuslt is, no result is FALSE
hasSupplierRelatedPermission = "true".equals(hasSupplierRelatedPermissionStr);

// Initialize the PO Delivery Schedule form
HtmlFormWrapper updatePODeliveryInfoWrapper = new HtmlFormWrapper("/order/OrderDeliveryScheduleForms.xml", "UpdateDeliveryScheduleInformation", request, response);
updatePODeliveryInfoWrapper.putInContext("orderId", orderId);
updatePODeliveryInfoWrapper.putInContext("orderItemSeqId", "_NA_");
updatePODeliveryInfoWrapper.putInContext("schedule", schedule);
updatePODeliveryInfoWrapper.putInContext("hasSupplierRelatedPermission", hasSupplierRelatedPermission);

context.put("orderId", orderId);
context.put("orderTypeId", orderTypeId);
context.put("orderHeader", orderHeader);
context.put("hasPermission", hasSupplierRelatedPermission);
context.put("updatePODeliveryInfoWrapper", updatePODeliveryInfoWrapper);
