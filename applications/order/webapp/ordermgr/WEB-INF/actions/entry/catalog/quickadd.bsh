/*
 *  Copyright (c) 2003 The Open For Business Project - www.ofbiz.org
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a 
 *  copy of this software and associated documentation files (the "Software"), 
 *  to deal in the Software without restriction, including without limitation 
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense, 
 *  and/or sell copies of the Software, and to permit persons to whom the 
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included 
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS 
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF 
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY 
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT 
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR 
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *@author     Andy Zeneski
 *@version    $Rev$
 *@since      2.1
 */
 
/*
 * This script is also referenced by the ecommerce's screens and
 * should not contain order component's specific code.
 */

import java.lang.*;
import java.util.*;
import org.ofbiz.base.util.*;
import org.ofbiz.entity.*;
import org.ofbiz.service.*;
import org.ofbiz.product.catalog.*;

dispatcher = request.getAttribute("dispatcher");
requestParameters = UtilHttp.getParameterMap(request); 
currentCatalogId = CatalogWorker.getCurrentCatalogId(request);
categoryId = requestParameters.get("category_id");
if (categoryId == null || categoryId.length() <= 0) 
    categoryId = CatalogWorker.getCatalogQuickaddCategoryPrimary(request);
    
Collection quickAddCategories = CatalogWorker.getCatalogQuickaddCategories(request);
context.put("quickAddCats", quickAddCategories);
context.put("categoryId", categoryId);

if (categoryId != null) {
    fields = UtilMisc.toMap("productCategoryId", categoryId, "defaultViewSize", new Integer(10), 
            "limitView", new Boolean(false), "prodCatalogId", currentCatalogId, "checkViewAllow", Boolean.TRUE);
    result = dispatcher.runSync("getProductCategoryAndLimitedMembers", fields);
    if (result != null) {
        resultIter = result.keySet().iterator();
        while (resultIter.hasNext()) {
            String name = (String) resultIter.next();
            context.put(name, result.get(name));
        }
    }
}

