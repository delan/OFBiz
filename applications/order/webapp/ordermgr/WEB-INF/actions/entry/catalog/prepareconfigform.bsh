/*
 *  Copyright (c) 2004 The Open For Business Project - www.ofbiz.org
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a
 *  copy of this software and associated documentation files (the "Software"),
 *  to deal in the Software without restriction, including without limitation
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense,
 *  and/or sell copies of the Software, and to permit persons to whom the
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *@author     Jacopo Cappellato
 *@version    $Rev$
 *@since      2.1
 */

/*
 * This script is also referenced by the ecommerce's screens and
 * should not contain order component's specific code.
 */

import org.ofbiz.order.shoppingcart.ShoppingCartEvents;
import org.ofbiz.product.config.ProductConfigWorker;
import org.ofbiz.product.store.ProductStoreWorker;

currencyUomId = ShoppingCartEvents.getCartObject(request).getCurrency();
product = context.get("product");

if (product != null) {
    configWrapper = ProductConfigWorker.getProductConfigWrapper(product.getString("productId"), currencyUomId, request);
    ProductConfigWorker.fillProductConfigWrapper(configWrapper, request);

    if (!configWrapper.isCompleted()) {
        configWrapper.setDefaultConfig();
    }
    if (!ProductStoreWorker.isStoreInventoryAvailable(request, configWrapper, 1.0)) {
        context.put("productNotAvailable", "Y");
    }
    context.put("configwrapper", configWrapper);
    context.put("totalPrice", configWrapper.getTotalPrice());
    context.put("renderSingleChoiceWithRadioButtons", "Y");
    context.put("showOffsetPrice", "Y");
}
