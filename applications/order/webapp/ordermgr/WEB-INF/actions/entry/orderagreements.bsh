/*
 *  Copyright (c) 2003 The Open For Business Project - www.ofbiz.org
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a 
 *  copy of this software and associated documentation files (the "Software"), 
 *  to deal in the Software without restriction, including without limitation 
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense, 
 *  and/or sell copies of the Software, and to permit persons to whom the 
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included 
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS 
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF 
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY 
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT 
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR 
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *@author     David E. Jones
 *@version    1.0
 */

import org.ofbiz.service.*;
import org.ofbiz.entity.*;
import org.ofbiz.entity.condition.*;
import org.ofbiz.entity.util.*;
import org.ofbiz.base.util.*;
import org.ofbiz.order.shoppingcart.*;
import org.ofbiz.party.party.PartyWorker;
import org.ofbiz.product.catalog.CatalogWorker;
import org.ofbiz.product.store.ProductStoreWorker;
import org.ofbiz.order.shoppingcart.product.ProductDisplayWorker;
import org.ofbiz.order.shoppingcart.product.ProductPromoWorker;

delegator = request.getAttribute("delegator");
security = request.getAttribute("security");
dispatcher= (LocalDispatcher)request.getAttribute("dispatcher");
userLogin = session.getAttribute("userLogin");

context.put("dispatcher",dispatcher);

// Get the Cart and Prepare Size
shoppingCart = ShoppingCartEvents.getCartObject(request);

// check the selected product store
productStoreId = shoppingCart.getProductStoreId();
productStore = null;
if (UtilValidate.isNotEmpty(productStoreId)) {
    productStore = ProductStoreWorker.getProductStore(productStoreId, delegator);
    if (productStore != null) {
        // put in the default currency, to help selecting a currency for a purchase order
        context.put("defaultCurrencyUomId", productStore.getString("defaultCurrencyUomId"));
        payToPartyId = productStore.getString("payToPartyId");
        partyId = shoppingCart.getOrderPartyId();
        
        // get applicable agreements for order entry
        if (shoppingCart.getOrderType().equals("PURCHASE_ORDER")) {
            // the agreement for a PO is from customer to payToParty (ie, us)
            agreements = delegator.findByAndCache("Agreement", UtilMisc.toMap("partyIdTo", partyId, "partyIdFrom", payToPartyId));
        } else {
            // the agreement for a sales order is from us to the customer
            agreements = delegator.findByAndCache("Agreement", UtilMisc.toMap("partyIdTo", payToPartyId, "partyIdFrom", partyId));
        }
        if (agreements != null && agreements.size() > 0) {
            context.put("agreements", agreements);
        }
    }
}

partyId = shoppingCart.getPartyId();
if (partyId != null && partyId.equals("_NA_")) partyId = null;
context.put("partyId", partyId);  

// currencies and shopping cart currency
currencies = delegator.findByAndCache("Uom", UtilMisc.toMap("uomTypeId","CURRENCY_MEASURE"));
context.put("currencies", currencies);
context.put("currencyUomId", shoppingCart.getCurrency());

