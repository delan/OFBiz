<?xml version="1.0" encoding="UTF-8" ?>
<!--

Copyright 2001-2006 The Apache Software Foundation

Licensed under the Apache License, Version 2.0 (the "License"); you may not
use this file except in compliance with the License. You may obtain a copy of
the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.
-->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xsi:noNamespaceSchemaLocation="http://www.ofbiz.org/dtds/simple-methods.xsd">
    <simple-method method-name="createRequirement" short-description="Create a new requirement">
        <make-value value-name="newEntity" entity-name="Requirement"/>
        <sequenced-id-to-env sequence-name="Requirement" env-name="requirementId"/>
        <to-string field-name="requirementId"/>
        <env-to-field env-name="requirementId" map-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <if-empty field-name="statusId" map-name="parameters">
            <string-to-field string="REQ_CREATED" field-name="statusId" map-name="newEntity"/>
        </if-empty>
        <now-timestamp-to-env env-name="nowTimestamp"/>
        <env-to-field env-name="nowTimestamp" field-name="createdDate" map-name="newEntity"/>
        <create-value value-name="newEntity"/>
        <field-to-result field-name="requirementId" result-name="requirementId"/>
    </simple-method>

    <simple-method method-name="updateRequirement" short-description="Update a requirement">
        <make-value value-name="lookupPKMap" entity-name="Requirement"/>
        <set-pk-fields map-name="parameters" value-name="lookupPKMap"/>
        <find-by-primary-key entity-name="Requirement" map-name="lookupPKMap" value-name="lookedUpValue"/>
        <clone-value value-name="lookedUpValue" new-value-name="savedValue"/>
        <field-to-result field-name="lookedUpValue.statusId" result-name="oldStatusId"/>
        <set-nonpk-fields map-name="parameters" value-name="lookedUpValue"/> 
        <store-value value-name="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="deleteRequirement" short-description="Delete a requirement">
        <entity-one entity-name="Requirement" value-name="requirement" auto-field-map="true"/>
        <check-errors/>
        <remove-related value-name="requirement" relation-name="RequirementCustRequest"/>
        <remove-value value-name="requirement"/>
    </simple-method>

    <simple-method method-name="associateRequirementWithRequestItem" short-description="Associate a requirement and CustRequestItem">
        <make-value value-name="newEntity" entity-name="RequirementCustRequest"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
    </simple-method>
	
    <simple-method method-name="addTaskToRequirement" short-description="Add a task to a requirement">
        <make-value value-name="newEntity" entity-name="WorkRequirementFulfillment"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
    </simple-method>
    
    <simple-method method-name="getRequirementsForSupplier" short-description="Get the requirements applicable to a given supplier">
        <make-value value-name="newEntity" entity-name="Requirement"/>
        <entity-condition entity-name="Requirement" list-name="requirementsForSupplier">
            <condition-list>
                <condition-object field-name="parameters.requirementConditions"/>
                <condition-expr field-name="statusId" value="REQ_APPROVED"/>
                <condition-expr field-name="requirementTypeId" value="PRODUCT_REQUIREMENT"/>
            </condition-list>
        </entity-condition>
        <field-to-result field-name="requirementsForSupplier" result-name="requirementsForSupplier"/>
    </simple-method>

    <simple-method method-name="autoAssignRequirementToSupplier" short-description="If the requirement is a product requirement (purchasing) try to assign it to the primary supplier">
        <entity-one entity-name="Requirement" value-name="requirement" auto-field-map="true"/>
        <check-errors/>
        <if-compare field-name="requirement.requirementTypeId" operator="equals" value="PRODUCT_REQUIREMENT">
            <if-not-empty field-name="requirement.productId">
                <entity-condition entity-name="SupplierProduct" list-name="supplierProducts">
                    <condition-list>
                        <condition-expr field-name="productId" env-name="requirement.productId"/>
                        <!-- TODO: compare quantity in requirement to the quantity in the SupplierProduct entity -->
                        <!--<condition-expr field-name="supplierPrefOrderId" value="PRODUCT_REQUIREMENT"/>-->
                    </condition-list>
                    <order-by field-name="supplierPrefOrderId"/>
                </entity-condition>
                <filter-list-by-date list-name="supplierProducts" from-field-name="availableFromDate" thru-field-name="availableThruDate"/>
                <first-from-list list-name="supplierProducts" entry-name="supplierProduct"/>
                <if-not-empty field-name="supplierProduct.partyId">
                    <make-value value-name="requirementSupplier" entity-name="RequirementRole"/>
                    <set field="requirementSupplier.requirementId" from-field="requirement.requirementId"/>
                    <set field="requirementSupplier.partyId" from-field="supplierProduct.partyId"/>
                    <set field="requirementSupplier.roleTypeId" value="SUPPLIER"/>
                    <now-timestamp-to-env env-name="requirementSupplier.fromDate"/>
                    <create-value value-name="requirementSupplier"/>
                </if-not-empty>
            </if-not-empty>
        </if-compare>

    </simple-method>
</simple-methods>
