<?xml version="1.0" encoding="UTF-8" ?>
<!--
 *  Copyright (c) 2002-2004 The Open For Business Project - www.ofbiz.org
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a
 *  copy of this software and associated documentation files (the "Software"),
 *  to deal in the Software without restriction, including without limitation
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense,
 *  and/or sell copies of the Software, and to permit persons to whom the
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @author     Andy Zeneski (jaz@ofbiz.org)
 * @version    1.0
 * @created    July 31, 2002
-->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xsi:noNamespaceSchemaLocation="http://www.ofbiz.org/dtds/simple-methods.xsd">
    <simple-method method-name="createRequirement" short-description="Create a new requirement">
        <make-value value-name="newEntity" entity-name="Requirement"/>
        <sequenced-id-to-env sequence-name="Requirement" env-name="requirementId"/>
        <to-string field-name="requirementId"/>
        <env-to-field env-name="requirementId" map-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <if-empty field-name="statusId" map-name="parameters">
            <string-to-field string="REQ_CREATED" field-name="statusId" map-name="newEntity"/>
        </if-empty>
        <now-timestamp-to-env env-name="nowTimestamp"/>
        <env-to-field env-name="nowTimestamp" field-name="createdDate" map-name="newEntity"/>
        <create-value value-name="newEntity"/>
        <field-to-result field-name="requirementId" result-name="requirementId"/>
    </simple-method>

    <simple-method method-name="updateRequirement" short-description="Update a requirement">
        <make-value value-name="lookupPKMap" entity-name="Requirement"/>
        <set-pk-fields map-name="parameters" value-name="lookupPKMap"/>
        <find-by-primary-key entity-name="Requirement" map-name="lookupPKMap" value-name="lookedUpValue"/>
        <clone-value value-name="lookedUpValue" new-value-name="savedValue"/>
        <field-to-result field-name="lookedUpValue.statusId" result-name="oldStatusId"/>
        <set-nonpk-fields map-name="parameters" value-name="lookedUpValue"/> 
        <store-value value-name="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="deleteRequirement" short-description="Delete a requirement">
        <entity-one entity-name="Requirement" value-name="requirement" auto-field-map="true"/>
        <check-errors/>
        <remove-related value-name="requirement" relation-name="RequirementCustRequest"/>
        <remove-value value-name="requirement"/>
    </simple-method>

    <simple-method method-name="associateRequirementWithRequestItem" short-description="Associate a requirement and CustRequestItem">
        <make-value value-name="newEntity" entity-name="RequirementCustRequest"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
    </simple-method>
	
    <simple-method method-name="addTaskToRequirement" short-description="Add a task to a requirement">
        <make-value value-name="newEntity" entity-name="WorkRequirementFulfillment"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
    </simple-method>
    
    <simple-method method-name="getRequirementsForSupplier" short-description="Get the requirements applicable to a given supplier">
        <make-value value-name="newEntity" entity-name="Requirement"/>
        <entity-condition entity-name="Requirement" list-name="requirementsForSupplier">
            <condition-list>
                <condition-object field-name="parameters.requirementConditions"/>
                <condition-expr field-name="statusId" value="REQ_APPROVED"/>
                <condition-list combine="or">
                    <condition-expr field-name="requirementTypeId" value="MRP_PRO_PURCH_ORDER"/>
                    <condition-expr field-name="requirementTypeId" value="PRODUCT_REQUIREMENT"/>
                </condition-list>
            </condition-list>
        </entity-condition>
        <field-to-result field-name="requirementsForSupplier" result-name="requirementsForSupplier"/>
    </simple-method>

</simple-methods>
