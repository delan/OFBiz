<?xml version="1.0" encoding="UTF-8" ?>
<!--
 * Copyright (c) 2001-2005 The Open For Business Project and repective authors.
 * Permission is hereby granted, free of charge, to any person obtaining a
 *  copy of this software and associated documentation files (the "Software"),
 *  to deal in the Software without restriction, including without limitation
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense,
 *  and/or sell copies of the Software, and to permit persons to whom the
 *  Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 *  in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @author <a href="mailto:tiz@sastau.it">Jacopo Cappellato</a>
 * @version 1.0
 -->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xsi:noNamespaceSchemaLocation="http://www.ofbiz.org/dtds/simple-methods.xsd">

    <!-- ================================================================ -->
    <!-- Quote Services -->
    <!-- ================================================================ -->
    
    <!-- create a new Quote -->
    <simple-method method-name="createQuote" short-description="Create a Quote">
        <check-permission permission="ORDERMGR" action="_CREATE">
            <fail-property resource="OrderErrorUiLabels" property="OrderSecurityErrorToRunCreateQuote"/>
        </check-permission>
		<check-errors/>
        <!-- create new entity and create all the fields -->
        <make-value value-name="newEntity" entity-name="Quote"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <if-empty field-name="newEntity.statusId">
            <string-to-field string="QUO_CREATED" field-name="newEntity.statusId"/>
        </if-empty>

        <!-- create a non existing ID -->
        <sequenced-id-to-env sequence-name="Quote" env-name="quoteId"/>
        <env-to-field env-name="quoteId" map-name="newEntity"/>
        <field-to-result field-name="quoteId" result-name="quoteId"/>

        <!-- finally create the record (should not exist already)-->
        <create-value value-name="newEntity"/>
        <check-errors/>
    </simple-method>

    <!-- update an existing Quote -->
    <simple-method method-name="updateQuote" short-description="Update an existing Quote">
        <check-permission permission="ORDERMGR" action="_CREATE">
            <fail-property resource="OrderErrorUiLabels" property="OrderSecurityErrorToRunUpdateQuote"/>
        </check-permission>
        <check-errors/>
        <entity-one entity-name="Quote" value-name="quote" auto-field-map="true"/>
        <check-errors/>
        <set-nonpk-fields map-name="parameters" value-name="quote"/>
        <store-value value-name="quote"/>
        <check-errors/>
    </simple-method>

    <!-- create a new QuoteRole -->
    <simple-method method-name="createQuoteRole" short-description="Create a QuoteRole">
        <check-permission permission="ORDERMGR" action="_CREATE">
            <fail-message message="Security Error: to run createQuoteRole you must have the ORDERMGR_CREATE or ORDERMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <field-to-field field-name="partyId" map-name="parameters" to-map-name="lookupPKMap"/>
        <field-to-field field-name="roleTypeId" map-name="parameters" to-map-name="lookupPKMap"/>
        <find-by-primary-key entity-name="PartyRole" map-name="lookupPKMap" value-name="partyRole"/>
        <if-empty map-name="partyRole" field-name="partyId">
            <make-value value-name="partyRole" entity-name="PartyRole"/>
            <set-pk-fields map-name="lookupPKMap" value-name="partyRole"/>
            <create-value value-name="partyRole"/>
        </if-empty>
        <!-- create new entity and create all the fields -->
        <make-value value-name="newEntity" entity-name="QuoteRole"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
        <check-errors/>
    </simple-method>

    <!-- remove an existing QuoteRole -->
    <simple-method method-name="removeQuoteRole" short-description="Remove an existing QuoteRole">
        <check-permission permission="ORDERMGR" action="_CREATE">
            <fail-message message="Security Error: to run removeQuoteRole you must have the ORDERMGR_CREATE or ORDERMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <entity-one entity-name="QuoteRole" value-name="quoteRole" auto-field-map="true"/>
        <check-errors/>
        <remove-value value-name="quoteRole"/>
        <check-errors/>
    </simple-method>

    <!-- create a new QuoteItem -->
    <simple-method method-name="createQuoteItem" short-description="Create a QuoteItem">
        <check-permission permission="ORDERMGR" action="_CREATE">
            <fail-property resource="OrderErrorUiLabels" property="OrderSecurityErrorToRunCreateQuoteItem"/>
        </check-permission>
        <check-errors/>
        <!-- create new entity and create all the fields -->
        <make-value value-name="newEntity" entity-name="QuoteItem"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>

        <!-- create a non existing ID -->
        <make-next-seq-id value-name="newEntity" seq-field-name="quoteItemSeqId"/>
        <field-to-field field-name="parameters.quoteId" to-field-name="newEntity.quoteId"/>
        <env-to-field env-name="quoteItemSeqId" map-name="newEntity"/>
        <field-to-result field-name="quoteId" result-name="quoteId"/>
        <field-to-result field-name="newEntity.quoteItemSeqId" result-name="quoteItemSeqId"/>

        <!-- finally create the record (should not exist already)-->
        <create-value value-name="newEntity"/>
        <check-errors/>
    </simple-method>

    <!-- update an existing QuoteItem -->
    <simple-method method-name="updateQuoteItem" short-description="Update an existing QuoteItem">
        <check-permission permission="ORDERMGR" action="_CREATE">
            <fail-property resource="OrderErrorUiLabels" property="OrderSecurityErrorToRunUpdateQuoteItem"/>
        </check-permission>
        <check-errors/>
        <entity-one entity-name="QuoteItem" value-name="quoteItem" auto-field-map="true"/>
        <check-errors/>
        <set-nonpk-fields map-name="parameters" value-name="quoteItem"/>
        <store-value value-name="quoteItem"/>
        <check-errors/>
    </simple-method>

    <!-- remove an quoteItem -->
    <simple-method method-name="removeQuoteItem" short-description="Remove a QuoteItem">
        <check-permission permission="ORDERMGR" action="_CREATE">
            <fail-property resource="OrderErrorUiLabels" property="OrderSecurityErrorToRunRemoveQuoteItem"/>
        </check-permission>
        <check-errors/>
        <entity-one entity-name="QuoteItem" value-name="quoteItem" auto-field-map="true"/>
        <remove-related value-name="quoteItem" relation-name="QuoteAdjustment"/>
        <check-errors/>
        <remove-value value-name="quoteItem"/>
    </simple-method>

    <!-- create a new QuoteAttribute -->
    <simple-method method-name="createQuoteAttribute" short-description="Create a QuoteAttribute">
        <check-permission permission="ORDERMGR" action="_CREATE">
            <fail-property resource="OrderErrorUiLabels" property="OrderSecurityErrorToRunCreateQuoteAttribute"/>
        </check-permission>
        <check-errors/>
        <!-- create new entity and create all the fields -->
        <make-value value-name="newEntity" entity-name="QuoteAttribute"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
        <check-errors/>
    </simple-method>

    <!-- update an existing QuoteAttribute -->
    <simple-method method-name="updateQuoteAttribute" short-description="Update an existing QuoteAttribute">
        <check-permission permission="ORDERMGR" action="_CREATE">
            <fail-property resource="OrderErrorUiLabels" property="OrderSecurityErrorToRunUpdateQuoteAttribute"/>
        </check-permission>
        <check-errors/>
        <entity-one entity-name="QuoteAttribute" value-name="quoteAttribute" auto-field-map="true"/>
        <check-errors/>
        <set-nonpk-fields map-name="parameters" value-name="quoteAttribute"/>
        <store-value value-name="quoteAttribute"/>
        <check-errors/>
    </simple-method>

    <!-- remove an existing QuoteAttribute -->
    <simple-method method-name="removeQuoteAttribute" short-description="Remove an existing QuoteAttribute">
        <check-permission permission="ORDERMGR" action="_CREATE">
            <fail-property resource="OrderErrorUiLabels" property="OrderSecurityErrorToRunRemoveQuoteAttribute"/>
        </check-permission>
        <check-errors/>
        <entity-one entity-name="QuoteAttribute" value-name="quoteAttribute" auto-field-map="true"/>
        <check-errors/>
        <remove-value value-name="quoteAttribute"/>
        <check-errors/>
    </simple-method>
    
    <!-- create a new QuoteCoefficient -->
    <simple-method method-name="createQuoteCoefficient" short-description="Create a QuoteCoefficient">
        <check-permission permission="ORDERMGR" action="_CREATE">
            <fail-property resource="OrderErrorUiLabels" property="OrderSecurityErrorToRunCreateQuoteCoefficient"/>
        </check-permission>
        <check-errors/>
        <!-- create new entity and create all the fields -->
        <make-value value-name="newEntity" entity-name="QuoteCoefficient"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
        <check-errors/>
    </simple-method>

    <!-- update an existing QuoteCoefficient -->
    <simple-method method-name="updateQuoteCoefficient" short-description="Update an existing QuoteCoefficient">
        <check-permission permission="ORDERMGR" action="_CREATE">
            <fail-property resource="OrderErrorUiLabels" property="OrderSecurityErrorToRunUpdateQuoteCoefficient"/>
        </check-permission>
        <check-errors/>
        <entity-one entity-name="QuoteCoefficient" value-name="quoteCoefficient" auto-field-map="true"/>
        <check-errors/>
        <set-nonpk-fields map-name="parameters" value-name="quoteCoefficient"/>
        <store-value value-name="quoteCoefficient"/>
        <check-errors/>
    </simple-method>

    <!-- remove an existing QuoteCoefficient -->
    <simple-method method-name="removeQuoteCoefficient" short-description="Remove an existing QuoteCoefficient">
        <check-permission permission="ORDERMGR" action="_CREATE">
            <fail-property resource="OrderErrorUiLabels" property="OrderSecurityErrorToRunRemoveQuoteCoefficient"/>
        </check-permission>
        <check-errors/>
        <entity-one entity-name="QuoteCoefficient" value-name="quoteCoefficient" auto-field-map="true"/>
        <check-errors/>
        <remove-value value-name="quoteCoefficient"/>
        <check-errors/>
    </simple-method>

    <!-- create a new Quote and QuoteItem for a given CustRequest -->
    <simple-method method-name="createQuoteAndQuoteItemForRequest" short-description="Create a Quote">
        <check-permission permission="ORDERMGR" action="_CREATE">
            <fail-property resource="OrderErrorUiLabels" property="OrderSecurityErrorToRunCreateQuoteAndQuoteItemForRequest"/>        
		</check-permission>
        <check-errors/>
        <entity-one entity-name="CustRequest" value-name="custRequest" auto-field-map="true"/>
        <entity-one entity-name="CustRequestItem" value-name="custRequestItem" auto-field-map="true"/>
        <make-value value-name="lookupRequestRole" entity-name="CustRequestRole"/>
        <field-to-field field-name="parameters.custRequestId" to-field-name="lookupRequestRole.custRequestId"/>
        <string-to-field string="REQ_REQUESTER" field-name="lookupRequestRole.roleTypeId"/>
        <find-by-and entity-name="CustRequestRole" map-name="lookupRequestRole" list-name="roles"/>
        <first-from-list entry-name="requester" list-name="roles"/>
        
        <if-empty field-name="custRequest">
            <add-error>
                <fail-property resource="OrderErrorUiLabels" property="OrderErrorCustRequestWithIdDoesntExist"/>
            </add-error>
        </if-empty>
        <check-errors/>
        <!-- create new entity and create all the fields -->
        <make-value value-name="newQuote" entity-name="Quote"/>
        <make-value value-name="newQuoteItem" entity-name="QuoteItem"/>
        <set-nonpk-fields map-name="parameters" value-name="newQuote"/>
        <set-nonpk-fields map-name="parameters" value-name="newQuoteItem"/>
        <if-empty field-name="newQuote.statusId">
            <string-to-field string="QUO_CREATED" field-name="newQuote.statusId"/>
        </if-empty>
        
        <!-- create a non existing ID -->
        <sequenced-id-to-env sequence-name="Quote" env-name="quoteId"/>
        <make-next-seq-id value-name="newQuoteItem" seq-field-name="quoteItemSeqId"/>
        <env-to-field env-name="quoteId" map-name="newQuote"/>
        <env-to-field env-name="quoteId" map-name="newQuoteItem"/>
        <field-to-result field-name="quoteId" result-name="quoteId"/>
        <field-to-result field-name="newQuoteItem.quoteItemSeqId" result-name="quoteItemSeqId"/>
        
        <field-to-field field-name="requester.partyId" to-field-name="newQuote.partyId"/>
        <field-to-field field-name="custRequest.custRequestName" to-field-name="newQuote.quoteName"/>
        <field-to-field field-name="custRequest.description" to-field-name="newQuote.description"/>
        <field-to-field field-name="custRequest.maximumAmountUomId" to-field-name="newQuote.currencyUomId"/>
        <field-to-field field-name="custRequestItem.story" to-field-name="newQuoteItem.comments"/>
        <create-value value-name="newQuote"/>
        <create-value value-name="newQuoteItem"/>
        <!-- copy the roles from the request to the quote-->
        <clear-field field-name="lookupRequestRole"/>
        <clear-field field-name="roles"/>
        <field-to-field field-name="parameters.custRequestId" to-field-name="lookupRequestRole.custRequestId"/>
        <find-by-and entity-name="CustRequestRole" map-name="lookupRequestRole" list-name="roles"/>
        <iterate entry-name="role" list-name="roles">
            <clear-field field-name="cqrContext"/>
            <field-to-field field-name="quoteId" to-field-name="cqrContext.quoteId"/>
            <field-to-field field-name="role.partyId" to-field-name="cqrContext.partyId"/>
            <field-to-field field-name="role.roleTypeId" to-field-name="cqrContext.roleTypeId"/>
            <call-service service-name="createQuoteRole" in-map-name="cqrContext"></call-service>
        </iterate>
        <!-- set the attribute -->
        <if-not-empty field-name="parameters.attrName">
            <make-value value-name="newQuoteAttribute" entity-name="QuoteAttribute"/>
            <env-to-field env-name="quoteId" map-name="newQuoteAttribute"/>
            <field-to-field field-name="parameters.attrName" to-field-name="newQuoteAttribute.attrName"/>
            <field-to-field field-name="parameters.attrValue" to-field-name="newQuoteAttribute.attrValue"/>
            <create-value value-name="newQuoteAttribute"/>
        </if-not-empty>
        <check-errors/>
    </simple-method>
    <simple-method method-name="autoUpdateQuotePrice" short-description="Auto update a QuoteItem price">
        <check-permission permission="ORDERMGR" action="_CREATE">
            <fail-property resource="OrderErrorUiLabels" property="OrderSecurityErrorToRunAutoUpdateQuotePrice"/>
        </check-permission>
        <check-errors/>
        <entity-one entity-name="QuoteItem" value-name="quoteItem" auto-field-map="true"/>
        <check-errors/>
        <if-not-empty field-name="parameters.manualQuoteUnitPrice">
            <field-to-field field-name="parameters.manualQuoteUnitPrice" to-field-name="quoteItem.quoteUnitPrice"/>
        </if-not-empty>
        <if-empty field-name="parameters.manualQuoteUnitPrice">
            <if-not-empty field-name="parameters.defaultQuoteUnitPrice">
                <field-to-field field-name="parameters.defaultQuoteUnitPrice" to-field-name="quoteItem.quoteUnitPrice"/>
            </if-not-empty>
            <!--
            <calculate field-name="quoteItem.quoteUnitPrice" type="Double">
                <calcop operator="multiply">
                    <calcop operator="get" field-name="parameters.averageCost"/>
                    <calcop operator="get" field-name="parameters.costToPriceMult"/>
                </calcop>
            </calculate>
            -->
        </if-empty>
        <store-value value-name="quoteItem"/>
        <check-errors/>
        <field-to-request field-name="quoteItem.quoteId" request-name="quoteId"/>
    </simple-method>
    <simple-method method-name="autoCreateQuoteAdjustments" short-description="Auto create QuoteAdjustments">
        <check-permission permission="ORDERMGR" action="_CREATE">
            <fail-property resource="OrderErrorUiLabels" property="OrderSecurityErrorToRunAutoUpdateQuotePrice"/>
        </check-permission>
        <check-errors/>
        <entity-one entity-name="Quote" value-name="quote" auto-field-map="true"/>
        <!-- all existing promo quote items are removed -->
        <get-related value-name="quote" relation-name="QuoteItem" list-name="quoteItems"/>
        <iterate list-name="quoteItems" entry-name="quoteItem">
            <if-compare field-name="quoteItem.isPromo" value="Y" operator="equals">
                <clear-field field-name="removeQuoteItemInMap"/>
                <set-service-fields service-name="removeQuoteItem" to-map-name="removeQuoteItemInMap" map-name="parameters"/>
                <field-to-field field-name="quoteItem.quoteItemSeqId" to-field-name="removeQuoteItemInMap.quoteItemSeqId"/>
                <call-service service-name="removeQuoteItem" in-map-name="removeQuoteItemInMap"/>
            </if-compare>
        </iterate>
        <!-- all existing auto quote adjustments are removed -->
        <get-related value-name="quote" relation-name="QuoteAdjustment" list-name="quoteAdjustments"/>
        <iterate list-name="quoteAdjustments" entry-name="quoteAdjustment">
            <!-- make sure this is not a manual adjustments -->
            <if-not-empty field-name="quoteAdjustment.productPromoId">
                <clear-field field-name="removeQuoteAdjustmentInMap"/>
                <set-service-fields service-name="removeQuoteAdjustment" to-map-name="removeQuoteAdjustmentInMap" map-name="parameters"/>
                <field-to-field field-name="quoteAdjustment.quoteAdjustmentId" to-field-name="removeQuoteAdjustmentInMap.quoteAdjustmentId"/>
                <call-service service-name="removeQuoteAdjustment" in-map-name="removeQuoteAdjustmentInMap"/>
            </if-not-empty>
        </iterate>
        <set-service-fields service-name="loadCartFromQuote" to-map-name="loadCartFromQuoteInMap" map-name="parameters"/>
        <string-to-field string="false" field-name="loadCartFromQuoteInMap.applyQuoteAdjustments"/>
        <call-service service-name="loadCartFromQuote" in-map-name="loadCartFromQuoteInMap">
            <result-to-field result-name="shoppingCart" field-name="cart"/>
        </call-service>

        <call-object-method obj-field-name="cart" method-name="items" ret-field-name="items"/>
        <iterate list-name="items" entry-name="item">
            <call-object-method obj-field-name="item" method-name="getOrderItemSeqId" ret-field-name="orderItemSeqId"/>
            <if-empty field-name="orderItemSeqId">
                <!-- this is a new (promo) item -->
                <!-- a new quote item is created -->
                <clear-field field-name="createQuoteItemInMap"/>
                <set-service-fields service-name="createQuoteItem" to-map-name="createQuoteItemInMap" map-name="parameters"/>
                <call-object-method obj-field-name="item" method-name="getProductId" ret-field-name="createQuoteItemInMap.productId"/>
                <call-object-method obj-field-name="item" method-name="getQuantity" ret-field-name="createQuoteItemInMap.quantity"/>
                <string-to-field string="Y" field-name="createQuoteItemInMap.isPromo"/>
                <call-service service-name="createQuoteItem" in-map-name="createQuoteItemInMap">
                    <result-to-field result-name="quoteItemSeqId" field-name="quoteItemSeqId"/>
                </call-service>
                <!-- and the quoteItemSeqId is assigned to the shopping cart item (as orderItemSeqId) -->
                <call-object-method obj-field-name="item" method-name="setOrderItemSeqId">
                    <field field-name="quoteItemSeqId" type="String"/>
                </call-object-method>
            <call-object-method obj-field-name="item" method-name="getOrderItemSeqId" ret-field-name="newOrderItemSeqId"/>
            </if-empty>
        </iterate>
        <call-object-method obj-field-name="cart" method-name="makeAllQuoteAdjustments" ret-field-name="adjustments"/>

        <iterate list-name="adjustments" entry-name="adjustment">
            <field-to-field field-name="parameters.quoteId" to-field-name="adjustment.quoteId"/>
            <sequenced-id-to-env sequence-name="QuoteAdjustment" env-name="quoteAdjustmentId"/>
            <field-to-field field-name="quoteAdjustmentId" to-field-name="adjustment.quoteAdjustmentId"/>
            <create-value value-name="adjustment"/>
        </iterate>
    </simple-method>
    <simple-method method-name="createQuoteAdjustment" short-description="Create a QuoteAdjustment">
        <check-permission permission="ORDERMGR" action="_CREATE">
            <fail-property resource="OrderErrorUiLabels" property="OrderSecurityErrorToRunCreateQuoteAdjustement"/>
        </check-permission>
        <check-errors/>

        <make-value value-name="newEntity" entity-name="QuoteAdjustment"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>

        <sequenced-id-to-env sequence-name="QuoteAdjustment" env-name="quoteAdjustmentId"/>
        <now-timestamp-to-env env-name="nowTimestamp"/>
        <env-to-field env-name="quoteAdjustmentId" map-name="newEntity"/>
        <env-to-field env-name="nowTimestamp" field-name="createdDate" map-name="newEntity"/>                
        <field-to-field field-name="userLogin.userLoginId" to-field-name="newEntity.createdByUserLogin"/>
        <field-to-result field-name="quoteAdjustmentId" result-name="quoteAdjustmentId"/>

        <create-value value-name="newEntity"/>
    </simple-method>
    <simple-method method-name="removeQuoteAdjustment" short-description="Remove an existing QuoteAdjustment">
        <check-permission permission="ORDERMGR" action="_CREATE">
            <fail-property resource="OrderErrorUiLabels" property="OrderSecurityErrorToRunRemoveQuoteAdjustment"/>
        </check-permission>
        <check-errors/>
        <entity-one entity-name="QuoteAdjustment" value-name="quoteAdjustment" auto-field-map="true"/>
        <check-errors/>
        <remove-value value-name="quoteAdjustment"/>
        <check-errors/>
    </simple-method>
    <simple-method method-name="updateQuoteAdjustment" short-description="Update an existing QuoteAdjustment">
        <check-permission permission="ORDERMGR" action="_CREATE">
            <fail-property resource="OrderErrorUiLabels" property="OrderSecurityErrorToRunUpdateQuoteAdjustment"/>
        </check-permission>
        <check-errors/>
        <entity-one entity-name="QuoteAdjustment" value-name="quoteAdjustment" auto-field-map="true"/>
        <check-errors/>
        <set-nonpk-fields map-name="parameters" value-name="quoteAdjustment"/>
        <store-value value-name="quoteAdjustment"/>
        <check-errors/>
    </simple-method>
</simple-methods>