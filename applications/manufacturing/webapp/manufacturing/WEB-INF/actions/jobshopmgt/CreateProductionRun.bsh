/*
 *
 * Copyright 2001-2006 The Apache Software Foundation
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

import java.util.*;
import org.ofbiz.entity.*;
import org.ofbiz.base.util.*;


// Loads the newly created production run (for the tab bar)
delegator = request.getAttribute("delegator");

productionRunId = request.getAttribute("productionRunId");
if (!UtilValidate.isEmpty(productionRunId)) {
    GenericValue productionRun = delegator.findByPrimaryKey("WorkEffort", UtilMisc.toMap("workEffortId", productionRunId));
    if (productionRun != null) {
        context.put("productionRunId", productionRunId);
        context.put("productionRun", productionRun);
    }
}


// requestParams = UtilHttp.getParameterMap(request);
HashMap productionRunData= new HashMap();
productId = request.getParameter("productId");
if (productId != null) productionRunData.put("productId",productId);
pRQuantity = request.getParameter("pRQuantity");
if (pRQuantity != null) productionRunData.put("pRQuantity",pRQuantity);
startDate = request.getParameter("startDate");
if (startDate != null) productionRunData.put("startDate",startDate);
facilityId = request.getParameter("facilityId");
if (facilityId != null) productionRunData.put("facilityId", facilityId);
routingId = request.getParameter("routingId");
if (routingId != null) productionRunData.put("routingId",routingId);
workEffortName = request.getParameter("workEffortName");
if (workEffortName != null) productionRunData.put("workEffortName",workEffortName);
description = request.getParameter("description");
if (description != null) productionRunData.put("description",description);
List msgResult = new LinkedList();
msgResult = request.getParameter("msgResult");
if (msgResult == null) msgResult = request.getAttribute("msgResult");
// if (msgResult == null) { msgResult.add("truc"); }

tryEntity = true;
errorMessage = request.getAttribute("_ERROR_MESSAGE_");
if (errorMessage != null && errorMessage.length() > 0) {
    tryEntity = false;    
}

// get all the warehouses
delegator = request.getAttribute("delegator");
warehouses = delegator.findByAnd("Facility", UtilMisc.toMap("facilityTypeId", "WAREHOUSE"));
context.put("warehouses", warehouses);
if (facilityId != null && facilityId.length() > 0) {
    currentFacilityId = delegator.findByPrimaryKeyCache("Facility", UtilMisc.toMap("facilityId", facilityId));
    context.put("currentFacilityId", currentFacilityId);
}


context.put("msgResult", msgResult);
context.put("productionRunData", productionRunData);


