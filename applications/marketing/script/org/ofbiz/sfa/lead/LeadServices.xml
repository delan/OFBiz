<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at
    
    http://www.apache.org/licenses/LICENSE-2.0
    
    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
-->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/simple-methods.xsd">

    <simple-method method-name="createLead"  short-description="create Lead Person or Lead Group">
    
        <set field="parameters.roleTypeId" value="LEAD"/>
        <call-simple-method method-name="createPersonRoleAndContactMechs" xml-resource="org/ofbiz/party/party/PartySimpleMethods.xml"/>
        <if-not-empty field-name="userLogin.partyId">
            
            <set field="createPartyRoleCtx.partyId" from-field="userLogin.partyId"/>
            <set field="createPartyRoleCtx.roleTypeId" value="OWNER"/>
            <call-service service-name="createPartyRole" in-map-name="createPartyRoleCtx"/>
                        
            <set field="partyRelationshipContext.partyIdFrom" from-field="userLogin.partyId"/>
            <set field="partyRelationshipContext.partyIdTo" from-field="partyId"/>
            <set field="partyRelationshipContext.roleTypeIdFrom" value="OWNER"/>
            <set field="partyRelationshipContext.roleTypeIdTo" value="LEAD"/>
            <set field="partyRelationshipContext.partyRelationshipTypeId" value="LEAD_OWNER"/>
            <call-service service-name="createPartyRelationship" in-map-name="partyRelationshipContext"/>
            
            <set field="updatePartyCtx.partyId" from-field="partyId"/>
            <set field="updatePartyCtx.statusId" value="LEAD_ASSIGNED"/>
            <call-service service-name="setPartyStatus" in-map-name="updatePartyCtx"/>
        </if-not-empty>
        <!-- Now create PartyGroup corresponding to the companyName, if its not null and then set up relationship of Person and PartyGroup as Employee and title -->
        <if-not-empty field-name="parameters.groupName">
            <set field="parameters.partyTypeId" value="PARTY_GROUP"/>    
            <call-map-processor processor-name="partyGroup" in-map-name="parameters" out-map-name="partyGroupContext"
                xml-resource="org/ofbiz/party/party/PartyMapProcs.xml"/>
            <call-service service-name="createPartyGroup" in-map-name="partyGroupContext">
                <result-to-field result-name="partyId" field-name="partyGroupPartyId"/>        
            </call-service>
            <set field="createPartyRoleCtx.partyId" from-field="partyGroupPartyId"/>
            <set field="createPartyRoleCtx.roleTypeId" value="LEAD"/>
            <call-service service-name="createPartyRole" in-map-name="createPartyRoleCtx"/>

            <set field="createPartyRoleCtx.partyId" from-field="partyId"/>
            <set field="createPartyRoleCtx.roleTypeId" value="EMPLOYEE"/>
            <call-service service-name="createPartyRole" in-map-name="createPartyRoleCtx"/>
          
            <set field="partyRelationshipContext.partyIdFrom" from-field="partyGroupPartyId"/>
            <set field="partyRelationshipContext.partyIdTo" from-field="partyId"/>
            <set field="partyRelationshipContext.roleTypeIdFrom" value="LEAD"/>
            <set field="partyRelationshipContext.roleTypeIdTo" value="EMPLOYEE"/>
            <set field="partyRelationshipContext.positionTitle" from-field="parameters.title"/>
            <set field="partyRelationshipContext.partyRelationshipTypeId" value="EMPLOYMENT"/>
            <call-service service-name="createPartyRelationship" in-map-name="partyRelationshipContext"/>
        </if-not-empty>
        
        <log level="verbose" message=" ${partyGroupPartyId}"></log>
        <if-not-empty field-name="parameters.leadSource">
            <make-value entity-name="DataSource" value-name="dataSource"/>
            <sequenced-id-to-env sequence-name="DataSource" env-name="dataSourceId"/>
            <set field="dataSource.dataSourceId" from-field="dataSourceId"/>
            <set field="dataSource.dataSourceTypeId" value="LEAD_SOURCE"/>
            <set field="dataSource.description" from-field="parameters.leadSource"/>
            <create-value value-name="dataSource"/>
         
            <make-value entity-name="PartyDataSource" value-name="partyDataSource"/>
            <set field="partyDataSource.partyId" from-field="partyId"/>
            <set field="partyDataSource.dataSourceId" from-field="dataSourceId"/>
            <now-timestamp-to-env env-name="nowTimestamp"/>
            <set field="partyDataSource.fromDate" from-field="nowTimestamp"/>
            <set field="partyDataSource.isCreate" value="Y"/>
            <create-value value-name="partyDataSource"/>
        </if-not-empty>
        <field-to-result field-name="partyId"/>
        <field-to-result field-name="parameters.roleTypeId" result-name="roleTypeId"/>
    </simple-method>
  
    <simple-method method-name="convertLeadToContact" short-description="Convert a lead person into a contact and associated lead group to an account">
        <set field="leadPartyId" from-field="parameters.leadPartyId"/>
        <set field="createPartyRoleCtx.partyId" from-field="leadPartyId"/>
        <set field="createPartyRoleCtx.roleTypeId" value="CONTACT"/>
        <call-service service-name="createPartyRole" in-map-name="createPartyRoleCtx"/>
        <clear-field field-name="createPartyRoleCtx"/>
        
        <entity-and entity-name="PartyRelationship" list-name="partyRelationships">
            <field-map field-name="partyIdTo" env-name="leadPartyId"/>
            <field-map field-name="roleTypeIdFrom" value="LEAD"/>
            <field-map field-name="roleTypeIdTo" value="EMPLOYEE"/>
            <order-by field-name="-fromDate"/>
        </entity-and>
        <filter-list-by-date list-name="partyRelationships" to-list-name="partyRelationships"/>
        <first-from-list list-name="partyRelationships" entry-name="partyRelationship"/>
        
        <set field="accountId" from-field="partyRelationship.partyIdFrom"/>
        <if-not-empty field-name="partyRelationship">
            <if-empty field-name="accountId">
                <set field="accountId" from-field="partyRelationship.partyIdFrom"/>
                <set field="createPartyRoleCtx.roleTypeId" value="ACCOUNT"/>
                <call-service service-name="createPartyRole" in-map-name="createPartyRoleCtx"/>
            <else>
                <now-timestamp-to-env env-name="thruDate"/>
                <set field="partyRelationshipCtx.partyIdFrom" from-field="partyRelationship.partyIdFrom"/>
                <set field="partyRelationshipCtx.roleTypeIdFrom" from-field="partyRelationship.roleTypeIdFrom"/>
                <set field="partyRelationshipCtx.partyIdTo" from-field="partyRelationship.partyIdTo"/>
                <set field="partyRelationshipCtx.roleTypeIdTo" from-field="partyRelationship.roleTypeIdTo"/>
                <set field="partyRelationshipCtx.fromDate" from-field="partyRelationship.fromDate"/>
                <set field="partyRelationshipCtx.thruDate" from-field="thruDate"/>
                <call-service service-name="updatePartyRelationship" in-map-name="partyRelationshipCtx"/>
            </else>    
            </if-empty>
        </if-not-empty>
        <clear-field field-name="partyRelationshipCtx"/>
        <if-empty field-name="accountId">
            <set field="partyRelationshipCtx.partyIdFrom" from-field="accountId"/>
            <set field="partyRelationshipCtx.partyIdTo" from-field="leadPartyId"/>
            <set field="partyRelationshipCtx.roleTypeIdFrom" value="ACCOUNT"/>
            <set field="partyRelationshipCtx.roleTypeIdTo" value="CONTACT"/>
            <set field="partyRelationshipCtx.partyRelationshipTypeId" value="CONTACT_REL"/>
            <call-service service-name="createPartyRelationship" in-map-name="partyRelationshipCtx"/>
        </if-empty>
        <set field="updatePartyCtx.partyId" from-field="leadPartyId"/>
        <set field="updatePartyCtx.statusId" value="LEAD_CONVERTED"/>
        <call-service service-name="setPartyStatus" in-map-name="updatePartyCtx"/>        
    </simple-method>
</simple-methods>
