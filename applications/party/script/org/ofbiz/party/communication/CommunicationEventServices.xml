<?xml version="1.0" encoding="UTF-8" ?>
<!--
 *  Copyright (c) 2003-2005 The Open For Business Project - www.ofbiz.org
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a
 *  copy of this software and associated documentation files (the "Software"),
 *  to deal in the Software without restriction, including without limitation
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense,
 *  and/or sell copies of the Software, and to permit persons to whom the
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @author     Andy Zeneski (jaz@ofbiz.org)
 * @author     Olivier.Heintz@nereide.biz 
 * @version    $Rev$
 * @since      2.2
-->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xsi:noNamespaceSchemaLocation="http://www.ofbiz.org/dtds/simple-methods.xsd">
    <simple-method method-name="createCommunicationEvent" short-description="Create a CommunicationEvent">
        <if>
            <condition>
                <and>
                    <if-compare-field field-name="parameters.partyIdFrom" operator="not-equals" to-field-name="userLogin.partyId"/>
                    <if-compare-field field-name="parameters.partyIdTo" operator="not-equals" to-field-name="userLogin.partyId"/>
                </and>
            </condition>
            <then>
                <check-permission permission="PARTYMGR" action="_CME_CREATE">
                    <fail-property resource="PartyUiLabels" property="PartyCreateCommunicationEventPermissionError"/>
                </check-permission>
            </then>
        </if>

        <if-empty field-name="parameters.statusId">
            <set value="COM_ENTERED" field="parameters.statusId"/>     
        </if-empty>

        <make-value value-name="newEntity" entity-name="CommunicationEvent"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        
        <if-empty field-name="parameters.communicationEventId">
            <sequenced-id-to-env sequence-name="CommunicationEvent" env-name="newEntity.communicationEventId"/>
            <else>
                <set field="newEntity.communicationEventId" from-field="parameters.communicationEventId"/>
            </else>
        </if-empty>
        <field-to-result field-name="newEntity.communicationEventId" result-name="communicationEventId"/>
        
        <now-timestamp-to-env env-name="newEntity.entryDate"/>
        
        <create-value value-name="newEntity"/>

        <if-not-empty field-name="parameters.productId">
            <make-value value-name="eventProduct" entity-name="CommunicationEventProduct"/>
            <set from-field="parameters.productId" field="eventProduct.productId"/>
            <set from-field="newEntity.communicationEventId" field="eventProduct.communicationEventId"/>
            <create-value value-name="eventProduct"/>
        </if-not-empty>
        <if-not-empty field-name="parameters.orderId">
            <make-value value-name="eventOrder" entity-name="CommunicationEventOrder"/>
            <set from-field="parameters.orderId" field="eventOrder.orderId"/>
            <set from-field="newEntity.communicationEventId" field="eventOrder.communicationEventId"/>
            <create-value value-name="eventOrder"/>
        </if-not-empty>
    </simple-method>
    <simple-method method-name="updateCommunicationEvent" short-description="Update a CommunicationEvent">
        <check-permission permission="PARTYMGR" action="_CME_UPDATE">
            <fail-property resource="PartyUiLabels" property="PartyUpdateCommunicationEventPermissionError"/>
        </check-permission>
        <check-errors/>
        
        <entity-one entity-name="CommunicationEvent" value-name="event"/>
        <set-nonpk-fields map-name="parameters" value-name="event"/>
        <store-value value-name="event"/>
    </simple-method>
    <simple-method method-name="deleteCommunicationEvent" short-description="Delete a CommunicationEvent">
        <check-permission permission="PARTYMGR" action="_CME_DELETE">
            <fail-property resource="PartyUiLabels" property="PartyUpdateCommunicationEventPermissionError"/>
        </check-permission>
        <check-errors/>
        
        <entity-one entity-name="CommunicationEvent" value-name="event"/>
        <remove-value value-name="event"/>
    </simple-method>
    <!-- since these ancillary operations on communication event cause them to be updated,
        they will all use the CME_UPDATE permission -->
    <simple-method method-name="createCommunicationEventPurpose" short-description="Create a CommunicationEventPurpose">
        <check-permission permission="PARTYMGR" action="_CME_UPDATE">
            <fail-property resource="PartyUiLabels" property="PartyCreateCommunicationEventPurposePermissionError"/>
        </check-permission>
        <check-errors/>
        
        <make-value value-name="newEntity" entity-name="CommunicationEventPurpose"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>        
        <create-value value-name="newEntity"/>    
    </simple-method>
    <simple-method method-name="removeCommunicationEventPurpose" short-description="Remove a CommunicationEventPurpose">
        <check-permission permission="PARTYMGR" action="_CME_UPDATE">
            <fail-property resource="PartyUiLabels" property="PartyRemoveCommunicationEventPurposePermissionError"/>
        </check-permission>
        <check-errors/>
        
        <entity-one entity-name="CommunicationEventPurpose" value-name="eventPurpose"/>        
        <remove-value value-name="eventPurpose"/>
    </simple-method>
    <simple-method method-name="createCommunicationEventRole" short-description="Create a CommunicationEventRole">
        <check-permission permission="PARTYMGR" action="_CME_UPDATE">
            <fail-property resource="PartyUiLabels" property="PartyCreateCommunicationEventRolePermissionError"/>
        </check-permission>
        <check-errors/>
        
        <make-value value-name="newEntity" entity-name="CommunicationEventRole"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>        
        <create-value value-name="newEntity"/>    
    </simple-method>
    <simple-method method-name="removeCommunicationEventRole" short-description="Remove a CommunicationEventRole">
        <check-permission permission="PARTYMGR" action="_CME_UPDATE">
            <fail-property resource="PartyUiLabels" property="PartyRemoveCommunicationEventRolePermissionError"/>
        </check-permission>
        <check-errors/>
                
        <entity-one entity-name="CommunicationEventRole" value-name="eventRole"/>        
        <remove-value value-name="eventRole"/>
    </simple-method>

    <simple-method method-name="markEventRead" short-description="Marks a Communication Event as Read">
        <if-empty field-name="parameters.communicationEventId">
            <set from-field="parameters.messageId" field="parameters.communicationEventId"/>   
        </if-empty>
        <entity-one entity-name="CommunicationEvent" value-name="event"/>
        
        <if>
            <condition>
                <or>
                    <if-compare-field field-name="partyIdTo" map-name="event" to-map-name="userLogin" to-field-name="partyId" operator="equals"/>
                    <if-has-permission permission="PARTYMGR" action="_CME_UPDATE"/>
                </or>
            </condition>
            <then>
                <if>
                    <condition>
                        <or>
                            <if-compare field-name="statusId" map-name="event" operator="equals" value="COM_ENTERED"/>
                            <if-compare field-name="statusId" map-name="event" operator="equals" value="COM_PENDING"/>
                        </or>
                    </condition>
                    <then>
                        <set value="COM_READ" field="event.statusId"/>
                        <store-value value-name="event"/>
                    </then>
                </if>
            </then>
        </if>        
    </simple-method>
</simple-methods>
