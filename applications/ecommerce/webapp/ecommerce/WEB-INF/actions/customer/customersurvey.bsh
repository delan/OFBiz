/*
 *  Copyright (c) 2003 The Open For Business Project - www.ofbiz.org
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a
 *  copy of this software and associated documentation files (the "Software"),
 *  to deal in the Software without restriction, including without limitation
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense,
 *  and/or sell copies of the Software, and to permit persons to whom the
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *@author     Andy Zeneski (jaz@ofbiz.org)
 *@version    $Rev$
 *@since      3.0
 */

import org.ofbiz.base.util.*;
import org.ofbiz.entity.GenericDelegator;
import org.ofbiz.entity.GenericValue;
import org.ofbiz.product.store.ProductStoreSurveyWrapper;

delegator = request.getAttribute("delegator");
userLogin = session.getAttribute("userLogin");
partyId = userLogin.getString("partyId");
paramMap = UtilHttp.getParameterMap(request);
Debug.log("ParamMap - " + paramMap);

productStoreSurveyId = paramMap.get("productStoreSurveyId");
if (productStoreSurveyId == null) {
    productStoreSurveyId = request.getAttribute("productStoreSurveyId");
}

surveyAppl = delegator.findByPrimaryKey("ProductStoreSurveyAppl", UtilMisc.toMap("productStoreSurveyId", productStoreSurveyId));
if (surveyAppl != null) {
    survey = surveyAppl.getRelatedOne("Survey");
    context.put("survey", survey);

    if (request.getAttribute("_ERROR_MESSAGE") == null) {
        paramMap = UtilMisc.toMap("productStoreSurveyId", productStoreSurveyId);
    }
    wrapper = new ProductStoreSurveyWrapper(surveyAppl, partyId, paramMap);
    context.put("surveyWrapper", wrapper);

    surveyResp = request.getAttribute("surveyResponseId");
    if (!UtilValidate.isEmpty(surveyResp)) {
        wrapper.setThisResponseId(surveyResp);
        wrapper.callResult(true);
    }
}
