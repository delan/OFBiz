/*
 * $Id: viewprep.bsh 5462 2005-08-05 18:35:48Z jonesde $
 *
 * Copyright (c) 2001-2005 The Open For Business Project - www.ofbiz.org
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 * OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 * THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @author     <a href="mailto:byersa@automationgroups.com">Al Byers</a>
 * @version    $Rev$
 * @since      3.0
 */

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;

import org.ofbiz.base.util.*;
import org.ofbiz.entity.*;
import org.ofbiz.security.*;
import org.ofbiz.service.*;
import org.ofbiz.entity.model.*;
import org.ofbiz.widget.html.*;
import org.ofbiz.widget.form.*;
import org.ofbiz.securityext.login.*;
import org.ofbiz.common.*;
import org.ofbiz.content.content.ContentWorker;
import org.ofbiz.content.ContentManagementWorker;

import javax.servlet.*;
import javax.servlet.http.*;

delegator = (GenericDelegator) request.getAttribute("delegator");
paramMap = UtilHttp.getParameterMap(request);

// Strip old VIEW_INDEX from query string if present
//since we are adding them again.
String temp = request.getQueryString();
String queryString = UtilHttp.stripViewParamsFromQueryString(temp);
//Debug.logInfo("in viewprep, queryString(1):" + queryString,"");
context.put("queryString", queryString);
//Debug.logInfo("in viewprep, queryString(2):" + queryString,"");

requestURL = request.getRequestURL();
//Debug.logInfo("in viewprep, requestURL(3):" + requestURL,"");
context.put("requestURL", requestURL);
viewSize = paramMap.get("VIEW_SIZE");
context.put("viewSize", viewSize);
//Debug.logInfo("in viewprep, viewSize(3):" + viewSize,"");
viewIndex = paramMap.get("VIEW_INDEX");
context.put("viewIndex", viewIndex);
//Debug.logInfo("in viewprep, viewIndex(3):" + viewIndex,"");

nodeTrailCsv=ContentManagementWorker.getFromSomewhere("nodeTrailCsv", paramMap, request, context);
context.put("nodeTrailCsv", nodeTrailCsv);
contentId = ContentManagementWorker.getFromSomewhere("contentId", paramMap, request, context);
//Debug.logInfo("in viewprep, contentId(3):" + contentId,"");
context.put("subContentId", contentId);
context.put("contentIdTo", contentId);
forumId = ContentManagementWorker.getFromSomewhere("forumId", paramMap, request, context);
//forumContent = delegator.findByPrimaryKeyCache("Content", UtilMisc.toMap("contentId", forumId));
//context.put("forumContent", forumContent);
