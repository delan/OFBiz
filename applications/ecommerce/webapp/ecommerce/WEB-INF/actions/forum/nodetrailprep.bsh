/*
 * $Id: nodetrailprep.bsh 5462 2005-08-05 18:35:48Z jonesde $
 *
 * Copyright (c) 2001-2005 The Open For Business Project - www.ofbiz.org
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 * OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 * THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @author     <a href="mailto:byersa@automationgroups.com">Al Byers</a>
 * @version    $Rev$
 * @since      3.0
 */

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;

import org.ofbiz.base.util.*;
import org.ofbiz.entity.*;
import org.ofbiz.security.*;
import org.ofbiz.service.*;
import org.ofbiz.entity.model.*;
import org.ofbiz.widget.html.*;
import org.ofbiz.widget.form.*;
import org.ofbiz.securityext.login.*;
import org.ofbiz.common.*;
import org.ofbiz.entity.model.*;
import org.ofbiz.content.content.ContentWorker;
import org.ofbiz.content.ContentManagementWorker;

import javax.servlet.*;
import javax.servlet.http.*;

delegator = (GenericDelegator) request.getAttribute("delegator");

paramMap = UtilHttp.getParameterMap(request);
nodeTrailCsv = ContentManagementWorker.getFromSomewhere("nodeTrailCsv", paramMap, request, context);
Map passedParams = null;

if (UtilValidate.isEmpty(nodeTrailCsv)) {
    // this only happens in UploadContentAndImage
    passedParams = (Map)request.getAttribute("passedParams");
    if (passedParams != null) {
        nodeTrailCsv = passedParams.get("nodeTrailCsv");
    }
}
    
if (UtilValidate.isNotEmpty(nodeTrailCsv)) {
    nodeTrail = ContentWorker.csvToTrail(nodeTrailCsv, delegator);
    context.put("globalNodeTrail", nodeTrail);
    singleWrapper = context.get("singleWrapper");
    if (singleWrapper != null) {
        singleWrapper.putInContext("nodeTrailCsv",nodeTrailCsv);
        // there might be another way to do this, but if the widget form def already has a default-map
        // (such as "currentValue"), then I don't know how to reference another map (defined in the
        //  field def via "map-name", except to do this. 
        // What I want to do is specify 'map-name=""' and have it use the context main
        Map dummy = singleWrapper.getFromContext("dummy");
        if (dummy == null) {
           dummy = new HashMap();
        }
        dummy.put("nodeTrailCsv", nodeTrailCsv);
        //Debug.logInfo("in nodetrailprep, dummy:" + dummy,"");
        singleWrapper.putInContext("dummy",dummy);
    }
    context.put("nodeTrailCsv",nodeTrailCsv);
    
    //Debug.logInfo("in nodetrailprep, nodeTrailCsv:" + nodeTrailCsv,"");
    trailContentList = ContentWorker.csvToContentList(nodeTrailCsv, delegator);
    //Debug.logInfo("in nodetrailprep, trailContentList:" + trailContentList,"");
    context.put("ancestorList", trailContentList);
    //Debug.logInfo("in vewprep, siteAncestorList:" + siteAncestorList,"");
}
