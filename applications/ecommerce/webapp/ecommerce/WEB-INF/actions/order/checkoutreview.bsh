/*
 *
 * Copyright 2001-2006 The Apache Software Foundation
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

import java.lang.*;
import org.ofbiz.base.util.*;
import org.ofbiz.entity.*;
import org.ofbiz.accounting.payment.*;
import org.ofbiz.order.order.*;
import org.ofbiz.party.contact.*;
import org.ofbiz.product.catalog.*;
import org.ofbiz.product.store.*;

cart = session.getAttribute("shoppingCart");
context.put("cart", cart);

orderAdjustments = cart.makeAllAdjustments();
context.put("orderAdjustments", orderAdjustments);

orderItems = cart.makeOrderItems();
context.put("orderItems", orderItems);

workEfforts = cart.makeWorkEfforts();   // if required make workefforts for rental fixed assets too.
context.put("workEfforts", workEfforts);

orderHeaderAdjustments = OrderReadHelper.getOrderHeaderAdjustments(orderAdjustments, null);
context.put("orderHeaderAdjustments", orderHeaderAdjustments);
context.put("orderItemShipGroups", cart.getShipGroups());
context.put("headerAdjustmentsToShow", OrderReadHelper.filterOrderAdjustments(orderHeaderAdjustments, true, false, false, false, false));

orderSubTotal = OrderReadHelper.getOrderItemsSubTotal(orderItems, orderAdjustments,workEfforts);
context.put("orderSubTotal", orderSubTotal);
context.put("placingCustomerPerson", userLogin == null ? null : userLogin.getRelatedOne("Person"));
context.put("paymentMethods", cart.getPaymentMethods());

paymentMethodTypeIds = cart.getPaymentMethodTypeIds();
paymentMethodType = null;
paymentMethodTypeId = null;
if (paymentMethodTypeIds != null && paymentMethodTypeIds.size() > 0) {
    paymentMethodTypeId = paymentMethodTypeIds.get(0);
    paymentMethodType = delegator.findByPrimaryKey("PaymentMethodType", UtilMisc.toMap("paymentMethodTypeId", paymentMethodTypeId));
    context.put("paymentMethodType", paymentMethodType);
}

webSiteId = CatalogWorker.getWebSiteId(request);

productStore = ProductStoreWorker.getProductStore(request);
context.put("productStore", productStore);

isDemoStore = !"N".equals(productStore.getString("isDemoStore"));
context.put("isDemoStore", isDemoStore);

payToPartyId = productStore.getString("payToPartyId");
paymentAddress = PaymentWorker.getPaymentAddress(delegator, payToPartyId);
if (paymentAddress != null) context.put("paymentAddress", paymentAddress);


// TODO: FIXME!
/*
billingAccount = cart.getBillingAccountId() != null ? delegator.findByPrimaryKey("BillingAccount", UtilMisc.toMap("billingAccountId", cart.getBillingAccountId())) : null;
if (billingAccount != null)
    context.put("billingAccount", billingAccount);
*/

context.put("customerPoNumber", cart.getPoNumber());
context.put("carrierPartyId", cart.getCarrierPartyId());
context.put("shipmentMethodTypeId", cart.getShipmentMethodTypeId());
context.put("shippingInstructions", cart.getShippingInstructions());
context.put("maySplit", cart.getMaySplit());
context.put("giftMessage", cart.getGiftMessage());
context.put("isGift", cart.getIsGift());
context.put("currencyUomId", cart.getCurrency());

shipmentMethodType = delegator.findByPrimaryKey("ShipmentMethodType", UtilMisc.toMap("shipmentMethodTypeId", cart.getShipmentMethodTypeId()));
if (shipmentMethodType != null) context.put("shipMethDescription", shipmentMethodType.getString("description"));

OrderReadHelper orh = new OrderReadHelper(orderAdjustments, orderItems);
context.put("localOrderReadHelper", orh);
context.put("orderShippingTotal", cart.getTotalShipping());
context.put("orderTaxTotal", cart.getTotalSalesTax());
context.put("orderGrandTotal", new Double(cart.getGrandTotal()));

// nuke the event messages
request.removeAttribute("_EVENT_MESSAGE_");
