/*
 *
 * Copyright 2001-2006 The Apache Software Foundation
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

import org.ofbiz.entity.*;
import org.ofbiz.entity.util.*;
import org.ofbiz.base.util.*;
import org.ofbiz.order.shoppingcart.*;
import org.ofbiz.party.contact.*;
import org.ofbiz.product.catalog.*;

delegator = request.getAttribute("delegator");
cart = session.getAttribute("shoppingCart");
partyId = cart.getPartyId();

context.put("cart", cart);

Debug.log("party ID : " + partyId);
Debug.log("ul: " + session.getAttribute("userLogin"));

// nuke the event messages
request.removeAttribute("_EVENT_MESSAGE_");

if (partyId != null && !partyId.equals("_NA_")) {
    party = delegator.findByPrimaryKey("Party", UtilMisc.toMap("partyId", partyId));
    person = party.getRelatedOne("Person");
    context.put("party", party);
    context.put("person", person);
}

if (cart != null && cart.getShippingContactMechId() != null) {
    shippingContactMech = cart.getShippingContactMechId();
    postalAddress = delegator.findByPrimaryKey("PostalAddress", UtilMisc.toMap("contactMechId", shippingContactMech));
    context.put("useEntityFields", "Y");
    context.put("postalFields", postalAddress);

    if (postalAddress != null && partyId != null) {
        partyContactMechs = delegator.findByAnd("PartyContactMech", UtilMisc.toMap("partyId", partyId, "contactMechId", postalAddress.get("contactMechId")), UtilMisc.toList("-fromDate"));
        partyContactMechs = EntityUtil.filterByDate(partyContactMechs);
        partyContactMech = EntityUtil.getFirst(partyContactMechs);
        context.put("partyContactMech", partyContactMech);
    }
} else {
    context.put("postalFields", UtilHttp.getParameterMap(request));
}


