/*
 *  Copyright (c) 2003 The Open For Business Project - www.ofbiz.org
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a
 *  copy of this software and associated documentation files (the "Software"),
 *  to deal in the Software without restriction, including without limitation
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense,
 *  and/or sell copies of the Software, and to permit persons to whom the
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *@author     David E. Jones
 *@version    1.0
 */

import org.ofbiz.base.util.UtilMisc;
import org.ofbiz.product.catalog.CatalogWorker;
import org.ofbiz.order.shoppingcart.product.ProductDisplayWorker;
import org.ofbiz.entity.condition.*;

delegator = request.getAttribute("delegator");
userLogin = session.getAttribute("userLogin");

// Get the Cart and Prepare Size
shoppingCart = session.getAttribute("shoppingCart");
if (shoppingCart != null) {
    context.put("shoppingCartSize", shoppingCart.size());
} else {
    context.put("shoppingCartSize", 0);
}
context.put("shoppingCart", shoppingCart);

if (request.getAttribute("add_product_id") != "") { // check if a parameter is apssed
	add_product_id = request.getParameter("add_product_id");
	product = delegator.findByPrimaryKeyCache("Product",UtilMisc.toMap("productId",add_product_id));
	context.put("product",product);
}

// get all the possible gift wrap options
allgiftWraps = delegator.findByAnd("ProductFeature", UtilMisc.toMap("productFeatureTypeId", "GIFT_WRAP"), UtilMisc.toList("defaultSequenceNum"));
context.put("allgiftWraps", allgiftWraps);

// get the shopping lists for the logged in user
if (userLogin != null) {
    exprList = UtilMisc.toList(new EntityExpr("partyId", EntityOperator.EQUALS, userLogin.getString("partyId")),
        new EntityExpr("listName", EntityOperator.NOT_EQUAL, "auto-save"));
    condition = new EntityConditionList(exprList, EntityOperator.AND);
    allShoppingLists = delegator.findByCondition("ShoppingList", condition, null, UtilMisc.toList("listName"));
    context.put("shoppingLists", allShoppingLists);
}

// Get Cart Associated Products Data
associatedProducts = ProductDisplayWorker.getRandomCartProductAssoc(request, true);
context.put("associatedProducts", associatedProducts);

context.put("contentPathPrefix", CatalogWorker.getContentPathPrefix(request));
