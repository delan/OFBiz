/*
 * $Id: mostrecentprep.bsh 5462 2005-08-05 18:35:48Z jonesde $
 *
 * Copyright (c) 2001-2005 The Open For Business Project - www.ofbiz.org
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 * OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 * THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;
import org.ofbiz.base.util.*;
import org.ofbiz.entity.*;
import org.ofbiz.security.*;
import org.ofbiz.service.*;
import org.ofbiz.entity.model.*;
import org.ofbiz.widget.html.*;
import org.ofbiz.widget.form.*;
import org.ofbiz.securityext.login.*;
import org.ofbiz.common.*;
import org.ofbiz.entity.model.*;
import org.ofbiz.content.ContentManagementWorker;
import org.ofbiz.content.content.ContentWorker;
import org.ofbiz.widget.html.HtmlMenuWrapper;
import org.ofbiz.widget.WidgetWorker;
import org.ofbiz.entity.condition.EntityConditionList;
import org.ofbiz.entity.condition.EntityExpr;
import org.ofbiz.entity.condition.EntityOperator;

import freemarker.template.SimpleHash;
import freemarker.template.SimpleSequence;

import javax.servlet.*;
import javax.servlet.http.*;
/**
 *
 * @author     <a href="mailto:byersa@automationgroups.com">Al Byers</a>
 * @version    $Rev$
 * @since      3.0

 */


Debug.logInfo("in mostrecentprep(1):","");
delegator = request.getAttribute("delegator");
paramMap = UtilHttp.getParameterMap(request);
forumId = ContentManagementWorker.getFromSomewhere("moderatedSiteId", paramMap, request, context);

if (UtilValidate.isNotEmpty(forumId)) {
    exprList = new ArrayList();
    fromDate = UtilDateTime.nowTimestamp();
    //thruList = new ArrayList();
    //thruExpr = new EntityExpr("caThruDate", EntityOperator.GREATER_THAN, fromDate);
    //thruList.add(thruExpr);
    thruExpr2 = new EntityExpr("caThruDate", EntityOperator.EQUALS, null);
    //thruList.add(thruExpr2);
    //thruExprList = new EntityConditionList(thruList, EntityOperator.OR);
    exprList.add(thruExpr2);
    //contentAssocTypeExpr = new EntityExpr("caContentAssocTypeId", EntityOperator.EQUALS, "RESPONSE");
    //exprList.add(contentAssocTypeExpr);
    statusIdExpr = new EntityExpr("statusId", EntityOperator.EQUALS, "BLOG_SUBMITTED");
    exprList.add(statusIdExpr);
    contentIdToExpr = new EntityExpr("caContentIdTo", EntityOperator.EQUALS, forumId);
    exprList.add(contentIdToExpr);
    expr = new EntityConditionList(exprList, EntityOperator.AND);
    entityList = delegator.findByCondition("ContentAssocViewFrom", expr, null, UtilMisc.toList("-caFromDate"));
    
    Debug.logInfo("in mostrecentprep(1), entityList.size():" + entityList.size(),"");
    Debug.logInfo("in mostrecentprep(1), entityList:" + entityList,"");
    context.put("mostRecentList", entityList);
}

