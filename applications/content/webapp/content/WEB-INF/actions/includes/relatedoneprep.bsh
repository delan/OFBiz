/*
 * $Id: relatedoneprep.bsh 5462 2005-08-05 18:35:48Z jonesde $
 *
 * Copyright (c) 2003 The Open For Business Project - www.ofbiz.org
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 * OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 * THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */
/**
 *
 * @author     <a href="mailto:byersa@automationgroups.com">Al Byers</a>
 * @version    $Rev$
 * @since      2.2
 * Finds the one-to-one related entity (such as ElectronicText or ImageDataResource)
 * that is associated with the current entity (such as Content or DataResource).
 * If it exists, an editFormWrapper is created and populated, else an addFromWrapper.
 */


import org.ofbiz.base.util.*;
import org.ofbiz.entity.*;
import org.ofbiz.security.*;
import org.ofbiz.service.*;
import org.ofbiz.entity.model.*;
import org.ofbiz.widget.html.*;
import org.ofbiz.widget.form.*;


import javax.servlet.*;
import javax.servlet.http.*;

import java.sql.Timestamp;

delegator = (GenericDelegator)request.getAttribute("delegator");

// Get permission from pagedef config file
permission		= page.getProperty("permission");
entityName		= page.getProperty("entityName");
formDefFile	= page.getProperty("formDefFile");
singleFormName	= page.getProperty("singleFormName");
addFormName	= page.getProperty("addFormName");
editFormName	= page.getProperty("editFormName");
currentEntityPropertyName = page.getProperty("currentEntityPropertyName");
if (currentEntityPropertyName == null) {
    currentEntityName = entityName;
} else {
    currentEntityName = page.getProperty(currentEntityPropertyName);
}

    org.ofbiz.base.util.Debug.logInfo("in relatedoneprep, currentEntityName:" + currentEntityName, null);
    org.ofbiz.base.util.Debug.logInfo("in relatedoneprep, entityName:" + entityName, null);

HtmlFormWrapper editWrapper	= null;
HtmlFormWrapper addWrapper	= null;
GenericValue relatedOne = null;

    currentValue = (GenericValue)request.getAttribute("currentValue");
    org.ofbiz.base.util.Debug.logInfo("in relatedoneprep, currentValue:" + currentValue, null);


if(currentValue != null) {
    relatedOne = currentValue.getRelatedOneCache(entityName);
    org.ofbiz.base.util.Debug.logInfo("in relatedoneprep, relatedOne:" + relatedOne, null);
    HtmlFormWrapper singleWrapper = null;
    defaultMapName		= page.getProperty("defaultMapName");
    if( defaultMapName == null) defaultMapName	= "currentValue";
    // Add or edit mode?
    if(relatedOne != null) {
        singleWrapper = new HtmlFormWrapper(formDefFile, 
					editFormName, request, response);
        ModelForm modelForm	= singleWrapper.getModelForm();
        // don't want to activate this -amb. modelForm.setDefaultMapName(defaultMapName);
        singleWrapper.putInContext(defaultMapName, relatedOne);
        context.put("singleTitle", "Edit");
        context.put("singleWrapper", singleWrapper);
    } else {

        singleWrapper = new HtmlFormWrapper(formDefFile, 
					addFormName, request, response);
        context.put("singleTitle", "Create New");
        keyColl = currentValue.getPrimaryKey().getAllKeys();
        keyIt = keyColl.iterator();
        while(keyIt.hasNext()) {
            String ky = (String)keyIt.next();
            singleWrapper.putInContext(ky, currentValue.get(ky));
        }
        singleWrapper.putInContext(defaultMapName, currentValue);
        context.put("singleWrapper", singleWrapper);

    }
} else {

        errMsg = "No parent record found.";
        request.setAttribute("_ERROR_MESSAGE_", errMsg);

}

