/*
 * Copyright 2001-2006 The Apache Software Foundation
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */
/**
 * Finds the one-to-one related entity (such as ElectronicText or ImageDataResource)
 * that is associated with the current entity (such as Content or DataResource).
 * If it exists, an editFormWrapper is created and populated, else an addFromWrapper.
 */


import org.ofbiz.base.util.*;
import org.ofbiz.entity.*;
import org.ofbiz.security.*;
import org.ofbiz.service.*;
import org.ofbiz.entity.model.*;
import org.ofbiz.widget.html.*;
import org.ofbiz.widget.form.*;


import javax.servlet.*;
import javax.servlet.http.*;

import java.sql.Timestamp;

delegator = (GenericDelegator)request.getAttribute("delegator");

// Get permission from pagedef config file
permission		= page.getProperty("permission");
entityName		= page.getProperty("entityName");
formDefFile	= page.getProperty("formDefFile");
singleFormName	= page.getProperty("singleFormName");
addFormName	= page.getProperty("addFormName");
editFormName	= page.getProperty("editFormName");
currentEntityPropertyName = page.getProperty("currentEntityPropertyName");
if (currentEntityPropertyName == null) {
    currentEntityName = entityName;
} else {
    currentEntityName = page.getProperty(currentEntityPropertyName);
}

    org.ofbiz.base.util.Debug.logInfo("in relatedoneprep, currentEntityName:" + currentEntityName, null);
    org.ofbiz.base.util.Debug.logInfo("in relatedoneprep, entityName:" + entityName, null);

HtmlFormWrapper editWrapper	= null;
HtmlFormWrapper addWrapper	= null;
GenericValue relatedOne = null;

    currentValue = (GenericValue)request.getAttribute("currentValue");
    org.ofbiz.base.util.Debug.logInfo("in relatedoneprep, currentValue:" + currentValue, null);


if(currentValue != null) {
    relatedOne = currentValue.getRelatedOneCache(entityName);
    org.ofbiz.base.util.Debug.logInfo("in relatedoneprep, relatedOne:" + relatedOne, null);
    HtmlFormWrapper singleWrapper = null;
    defaultMapName		= page.getProperty("defaultMapName");
    if( defaultMapName == null) defaultMapName	= "currentValue";
    // Add or edit mode?
    if(relatedOne != null) {
        singleWrapper = new HtmlFormWrapper(formDefFile, 
					editFormName, request, response);
        ModelForm modelForm	= singleWrapper.getModelForm();
        // don't want to activate this -amb. modelForm.setDefaultMapName(defaultMapName);
        singleWrapper.putInContext(defaultMapName, relatedOne);
        context.put("singleTitle", "Edit");
        context.put("singleWrapper", singleWrapper);
    } else {

        singleWrapper = new HtmlFormWrapper(formDefFile, 
					addFormName, request, response);
        context.put("singleTitle", "Create New");
        keyColl = currentValue.getPrimaryKey().getAllKeys();
        keyIt = keyColl.iterator();
        while(keyIt.hasNext()) {
            String ky = (String)keyIt.next();
            singleWrapper.putInContext(ky, currentValue.get(ky));
        }
        singleWrapper.putInContext(defaultMapName, currentValue);
        context.put("singleWrapper", singleWrapper);

    }
} else {

        errMsg = "No parent record found.";
        request.setAttribute("_ERROR_MESSAGE_", errMsg);

}

