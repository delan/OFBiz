/*
 * $Id: lruprepDataResource.bsh 5462 2005-08-05 18:35:48Z jonesde $
 *
 * Copyright (c) 2003 The Open For Business Project - www.ofbiz.org
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 * OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 * THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;

import org.ofbiz.widget.html.*;
import org.ofbiz.widget.form.*;

import org.ofbiz.base.util.*;
import org.ofbiz.entity.*;
import org.ofbiz.security.*;
import org.ofbiz.service.*;
import org.ofbiz.entity.model.*;

import javax.servlet.*;
import javax.servlet.http.*;
/**
 *
 * @author     <a href="mailto:byersa@automationgroups.com">Al Byers</a>
 * @version    $Rev$
 * @since      2.2
 */

LocalDispatcher dispatcher	= (LocalDispatcher)request.getAttribute("dispatcher");
GenericDelegator delegator = (GenericDelegator) request.getAttribute("delegator");
UtilCache dataResourceLookupCache = (UtilCache)session.getAttribute("dataResourceLookupCache");
if(dataResourceLookupCache == null){
    dataResourceLookupCache	= new UtilCache("dataResourceLookupCache", 10, 0);
    session.setAttribute("dataResourceLookupCache", dataResourceLookupCache);
}    

LinkedList lruList = new LinkedList();
int sz = dataResourceLookupCache.keyLRUList.size();
GenericValue gv	= null;
Object dataResourceKey = null;

for(int i=(sz-1); i >= 0; i--){
Object o = dataResourceLookupCache.keyLRUList.get(i);
    contentIdKey = dataResourceLookupCache.keyLRUList.get(i);
    pk = (GenericPK)dataResourceLookupCache.get(contentIdKey);
    gv = delegator.findByPrimaryKey(pk);
    lruList.add(gv);
}
String formDefFile		= page.getProperty("formDefFile");
String lruFormName		= page.getProperty("lruFormName");
HtmlFormWrapper lruWrapper = new HtmlFormWrapper(formDefFile, lruFormName, request, response);
lruWrapper.putInContext("lruList", lruList);

context.put("lruWrapper", lruWrapper);
return "success";

