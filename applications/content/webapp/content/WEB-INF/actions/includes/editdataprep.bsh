/*
 * Copyright 2001-2006 The Apache Software Foundation
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;


import org.ofbiz.base.util.*;
import org.ofbiz.entity.*;
import org.ofbiz.security.*;
import org.ofbiz.service.*;
import org.ofbiz.entity.model.*;
import org.ofbiz.widget.html.*;
import org.ofbiz.widget.form.*;
import org.ofbiz.content.data.DataResourceWorker;



import javax.servlet.*;
import javax.servlet.http.*;
/**
 * This is a crude general script to find entity data based on the primary key.
 * It only works on entities with one primary key field and it relies on that being
 * in the pagedef config file.
 * It could get and interrogate a GenericEntity object
 */

    
security			= request.getAttribute("security");
// Get permission from pagedef config file
String permission		= page.getProperty("permission");
String formDefFile		= page.getProperty("formDefFile");
String singleFormName		= page.getProperty("singleFormName");
String entityName		= page.getProperty("entityName");
String priKeyName		= page.getProperty("priKeyName");
String defaultMapName		= page.getProperty("defaultMapName");
if( defaultMapName == null) defaultMapName	= "currentValue";
String entityOperation		= page.getProperty("entityOperation");
if( entityOperation == null) entityOperation	= "_ADMIN";

dispatcher	= (LocalDispatcher)request.getAttribute("dispatcher");
delegator = (GenericDelegator) request.getAttribute("delegator");


mapIn = new HashMap();
userLogin = session.getAttribute("userLogin");
mapIn.put("userLogin", userLogin);
mapIn.put("entityOperation", entityOperation);


HashMap currentEntityMap = (HashMap)session.getAttribute("currentEntityMap");
if(currentEntityMap == null){
    currentEntityMap     = new HashMap();
    session.setAttribute("currentEntityMap", currentEntityMap);
}

currentPK = currentEntityMap.get(entityName);
    org.ofbiz.base.util.Debug.logInfo("in editdataprep, entityName:" + entityName, null);
    org.ofbiz.base.util.Debug.logInfo("in editdataprep, currentPK:" + currentPK, null);
// currentPK could be GenericValue
GenericValue currentValue = null;
if (currentPK != null) {
    currentValue = delegator.findByPrimaryKey(currentPK.getPrimaryKey()); 
    org.ofbiz.base.util.Debug.logInfo("in editdataprep, currentValue:" + currentValue, null);

}
if (currentValue == null) {
        primaryKeyVal = (String)request.getAttribute("dataResourceId");
    org.ofbiz.base.util.Debug.logInfo("in editdataprep, primaryKeyVal(2):" + primaryKeyVal, null);
        currentValue = delegator.findByPrimaryKey(entityName, UtilMisc.toMap("dataResourceId",primaryKeyVal));
}

if (currentValue == null) {
        primaryKeyVal = (String)request.getParameter("dataResourceId");
    org.ofbiz.base.util.Debug.logInfo("in editdataprep, primaryKeyVal(3):" + primaryKeyVal, null);
        currentValue = delegator.findByPrimaryKey(entityName, UtilMisc.toMap("dataResourceId",primaryKeyVal));
    org.ofbiz.base.util.Debug.logInfo("in editdataprep, currentValue(3):" + currentValue, null);
}

    context.put("hasPermission", Boolean.TRUE);
if (currentValue == null ) {
  request.setAttribute("errorReqMsg", "No current content PK found.");
} else {

        
    HtmlFormWrapper editWrapper = new HtmlFormWrapper(formDefFile, 
    				singleFormName, request, response);
    
    org.ofbiz.base.util.Debug.logInfo("in editdataprep, editWrapper(3):" + editWrapper, null);
    editWrapper.putInContext(defaultMapName, currentValue);
    // The idea here is that by setting the map name here, dependency on the 
            // widget-form config file could be eliminated.
    ModelForm modelForm	= editWrapper.getModelForm();
    modelForm.setDefaultMapName(defaultMapName);
    context.put("editWrapper", editWrapper);
    //context.put(priKeyName, priKeyValue);

    org.ofbiz.base.util.Debug.logInfo("in editdataprep, entityName:" + entityName, null);
    if (entityName != null && entityName.equals("DataResource") ) {
        List dataCategoryTrail = new ArrayList();
        rootNode = new HashMap();
        rootNode.put("id", "ROOT");
        DataResourceWorker.getDataCategoryMap(delegator, 0, rootNode, dataCategoryTrail, true);
        Debug.logInfo(" typelist, rootNode: " + rootNode, "FINDPREP");
        List dataCategoryList = new ArrayList();
        DataResourceWorker.buildList(rootNode, dataCategoryList, 0);
        context.put("dataCategoryList", dataCategoryList);
    }
}
