/*
 * $Id: browseprep.bsh 5462 2005-08-05 18:35:48Z jonesde $
 *
 * Copyright (c) 2003 The Open For Business Project - www.ofbiz.org
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 * OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 * THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;

import org.ofbiz.base.util.*;
import org.ofbiz.entity.*;
import org.ofbiz.entity.util.*;
import org.ofbiz.security.*;
import org.ofbiz.service.*;
import org.ofbiz.entity.model.*;
import org.ofbiz.widget.html.*;
import org.ofbiz.widget.form.*;
import org.ofbiz.content.data.DataResourceWorker;


import java.util.ListIterator;
import javax.servlet.*;
import javax.servlet.http.*;
/**
 *
 * @author     <a href="mailto:byersa@automationgroups.com">Al Byers</a>
 * @version    $Rev$
 * @since      3.0

 * Builds DataCategory structure so the pick list can be built.
 */

delegator = (GenericDelegator) request.getAttribute("delegator");
    
inputFields    	= UtilHttp.getParameterMap(request);
entityName    	= page.getProperty("entityName");

// dataCategoryId is typically a leaf on which the user has clicked the "+" to expand.
dataCategoryId = (String)inputFields.get("dataCategoryId");
List dataCategoryTrail = new ArrayList();

// DataCategory entities are linked by the "parentCategoryId" fields,
// which is what getDataCategoryAncestry(... follows.
DataResourceWorker.getDataCategoryAncestry(delegator, dataCategoryId, dataCategoryTrail);
Debug.logInfo(" browseprep, dataCategoryTrail: " + dataCategoryTrail, "FINDPREP");
rootNode = new HashMap();
// Set the node map to the top of the tree, then follow the dataCategoryTrail.
rootNode.put("id", "ROOT");
DataResourceWorker.getDataCategoryMap(delegator, 0, rootNode, dataCategoryTrail, false);
Debug.logInfo(" browseprep, rootNode: " + rootNode, "FINDPREP");
context.put("masterNode", rootNode);
