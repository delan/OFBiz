/*
 * Copyright 2001-2006 The Apache Software Foundation
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;

import org.ofbiz.widget.html.*;
import org.ofbiz.widget.form.*;

import org.ofbiz.base.util.*;
import org.ofbiz.entity.*;
import org.ofbiz.security.*;
import org.ofbiz.service.*;
import org.ofbiz.entity.model.*;

import javax.servlet.*;
import javax.servlet.http.*;
/**
 * This is a crude general script to find entity data based on the primary key.
 * It only works on entities with one primary key field and it relies on that being
 * in the pagedef config file.
 * It could get and interrogate a GenericEntity object
 */

    
security			= request.getAttribute("security");
// Get permission from pagedef config file
String permission		= page.getProperty("permission");
String formDefFile		= page.getProperty("formDefFile");
String singleFormName		= page.getProperty("singleFormName");
String entityName		= page.getProperty("entityName");
String priKeyName		= page.getProperty("priKeyName");
String defaultMapName		= page.getProperty("defaultMapName");
if( defaultMapName == null) defaultMapName	= "valueObject";
if(security.hasEntityPermission(permission, "_VIEW", session)) {
    	context.put("hasPermission", Boolean.TRUE);
} else {
    	context.put("hasPermission", Boolean.FALSE);
}

LocalDispatcher dispatcher	= (LocalDispatcher)request.getAttribute("dispatcher");
GenericDelegator delegator = (GenericDelegator) request.getAttribute("delegator");


HashMap currentEntityMap = (HashMap)session.getAttribute("currentEntityMap");
if(currentEntityMap == null){
    currentEntityMap     = new HashMap();
    session.setAttribute("currentEntityMap", currentEntityMap);
}

GenericPK currentPK = currentEntityMap.get(entityName);
genericValue = delegator.findByPrimaryKey(currentPK);

HtmlFormWrapper editWrapper = new HtmlFormWrapper(formDefFile, 
				singleFormName, request, response);

editWrapper.putInContext(defaultMapName, genericValue);
// The idea here is that by setting the map name here, dependency on the 
        // widget-form config file could be eliminated.
ModelForm modelForm	= editWrapper.getModelForm();
modelForm.setDefaultMapName(defaultMapName);
context.put("editWrapper", editWrapper);
//context.put(priKeyName, priKeyValue);

return "success";

