/*
 * Copyright 2001-2006 The Apache Software Foundation
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

import org.ofbiz.base.util.*;
import org.ofbiz.entity.*;
import org.ofbiz.security.*;
import org.ofbiz.service.*;
import org.ofbiz.entity.model.*;
import org.ofbiz.widget.html.*;
import org.ofbiz.widget.form.*;

import javax.servlet.*;
import javax.servlet.http.*;

// load edit or create Content form

dispatcher    = (LocalDispatcher)request.getAttribute("dispatcher");
delegator = (GenericDelegator) request.getAttribute("delegator");



formDefFile		= page.getProperty("formDefFile");
singleFormName	= page.getProperty("singleFormName");
addFormName	= page.getProperty("addFormName");
editFormName	= page.getProperty("editFormName");
entityName		= page.getProperty("entityName");
//String defaultMapName		= page.getProperty("defaultMapName");
//if( defaultMapName == null) defaultMapName	= "currentValue";
defaultMapName	= "currentValue";
GenericValue currentValue = (GenericValue)request.getAttribute("currentValue");
Debug.logInfo("in editimageprep, currentValue:" + currentValue, "");
mode = (String)request.getParameter("mode");
if (mode == null || mode.length() == 0) {
    mode = (String)request.getAttribute("mode");
}
Debug.logInfo("in editsubcontentprep, mode:" + mode, "");
if (currentValue == null || (mode != null && mode.equalsIgnoreCase("add"))) {
        singleWrapper = new HtmlFormWrapper(formDefFile, addFormName, request, response);
} else {

    singleWrapper = new HtmlFormWrapper(formDefFile, editFormName, request, response);
    dataResourceId = (String)currentValue.get("drDataResourceId");
    contentId = (String)currentValue.get("contentId");
    objectInfo = (String)currentValue.get("drObjectInfo");
    singleWrapper.putInContext("objectInfo", objectInfo);
    singleWrapper.putInContext("dataResourceId", dataResourceId);
    singleWrapper.putInContext("currentValue", currentValue);
    context.put("drDataResourceId", dataResourceId);
    context.put("subContentId", contentId);
}
paramMap = UtilHttp.getParameterMap(request);
contentIdTo = (String)paramMap.get("contentIdTo");
Debug.logInfo("in editsubcontentprep, contentIdTo:" + contentIdTo, "");
singleWrapper.putInContext("contentIdTo", contentIdTo);
mapKey = (String)paramMap.get("mapKey");
Debug.logInfo("in editsubcontentprep, mapKey:" + mapKey, "");
singleWrapper.putInContext("mapKey", mapKey);
context.put("singleWrapper", singleWrapper);
