/*
 * $Id: editimageprep.bsh 5462 2005-08-05 18:35:48Z jonesde $
 *
 * Copyright (c) 2003 The Open For Business Project - www.ofbiz.org
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 * OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 * THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */

/**
 *
 * @author     <a href="mailto:byersa@automationgroups.com">Al Byers</a>
 * @version    $Rev$
 * @since      3.0

 */

import org.ofbiz.base.util.*;
import org.ofbiz.entity.*;
import org.ofbiz.security.*;
import org.ofbiz.service.*;
import org.ofbiz.entity.model.*;
import org.ofbiz.widget.html.*;
import org.ofbiz.widget.form.*;

import javax.servlet.*;
import javax.servlet.http.*;

// load edit or create Content form

dispatcher    = (LocalDispatcher)request.getAttribute("dispatcher");
delegator = (GenericDelegator) request.getAttribute("delegator");



formDefFile		= page.getProperty("formDefFile");
singleFormName	= page.getProperty("singleFormName");
addFormName	= page.getProperty("addFormName");
editFormName	= page.getProperty("editFormName");
entityName		= page.getProperty("entityName");
//String defaultMapName		= page.getProperty("defaultMapName");
//if( defaultMapName == null) defaultMapName	= "currentValue";
defaultMapName	= "currentValue";
GenericValue currentValue = (GenericValue)request.getAttribute("currentValue");
Debug.logInfo("in editimageprep, currentValue:" + currentValue, "");
mode = (String)request.getParameter("mode");
if (mode == null || mode.length() == 0) {
    mode = (String)request.getAttribute("mode");
}
Debug.logInfo("in editsubcontentprep, mode:" + mode, "");
if (currentValue == null || (mode != null && mode.equalsIgnoreCase("add"))) {
        singleWrapper = new HtmlFormWrapper(formDefFile, addFormName, request, response);
} else {

    singleWrapper = new HtmlFormWrapper(formDefFile, editFormName, request, response);
    dataResourceId = (String)currentValue.get("drDataResourceId");
    contentId = (String)currentValue.get("contentId");
    objectInfo = (String)currentValue.get("drObjectInfo");
    singleWrapper.putInContext("objectInfo", objectInfo);
    singleWrapper.putInContext("dataResourceId", dataResourceId);
    singleWrapper.putInContext("currentValue", currentValue);
    context.put("drDataResourceId", dataResourceId);
    context.put("subContentId", contentId);
}
paramMap = UtilHttp.getParameterMap(request);
contentIdTo = (String)paramMap.get("contentIdTo");
Debug.logInfo("in editsubcontentprep, contentIdTo:" + contentIdTo, "");
singleWrapper.putInContext("contentIdTo", contentIdTo);
mapKey = (String)paramMap.get("mapKey");
Debug.logInfo("in editsubcontentprep, mapKey:" + mapKey, "");
singleWrapper.putInContext("mapKey", mapKey);
context.put("singleWrapper", singleWrapper);
