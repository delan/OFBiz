/*
 * $Id: findrelatedlayouts.bsh 5462 2005-08-05 18:35:48Z jonesde $
 *
 * Copyright (c) 2003 The Open For Business Project - www.ofbiz.org
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 * OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 * THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */

/**
 *
 * @author     <a href="mailto:byersa@automationgroups.com">Al Byers</a>
 * @version    $Rev$
 * @since      3.0

 */

import org.ofbiz.base.util.*;
import org.ofbiz.entity.*;
import org.ofbiz.security.*;
import org.ofbiz.service.*;
import org.ofbiz.entity.model.*;
import org.ofbiz.widget.html.*;
import org.ofbiz.widget.form.*;
import org.ofbiz.content.ContentManagementWorker;

import javax.servlet.*;
import javax.servlet.http.*;


LocalDispatcher dispatcher	= (LocalDispatcher)request.getAttribute("dispatcher");
GenericDelegator delegator = (GenericDelegator) request.getAttribute("delegator");

formDefFile		= page.getProperty("formDefFile");
listFormName		= page.getProperty("listFormName");

currentValue = (GenericValue)request.getAttribute("currentValue");
if (currentValue != null) {
    contentId = (String)currentValue.get("contentId");
    HashMap inMap    		= new HashMap();
    inMap.put("assocTypes", UtilMisc.toList("SUB_CONTENT"));
    inMap.put("contentId", contentId);
    inMap.put("direction", "TO");
    
    Debug.logInfo("in findrelatedlayouts, inMap:" + inMap,"");
    Map result    		= null;
    try {
               result = dispatcher.runSync("getAssocAndContentAndDataResource", inMap    );
    } catch (GenericServiceException e) {
        request.setAttribute("_ERROR_MESSAGE_", "ERROR: Error in  getAssocAndContentAndDataResourceservice. "
                     + e.getMessage() + ")");
                Debug.log(e, "findprep.bsh");
                return "error";
    }
    
    entityList = (List)result.get("entityList");
    // These entities are of type ContentAssocDataResourceViewTo
    request.setAttribute("currentList", entityList);
}

