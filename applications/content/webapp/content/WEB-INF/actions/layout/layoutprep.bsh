/*
 * $Id: layoutprep.bsh 5462 2005-08-05 18:35:48Z jonesde $
 *
 * Copyright (c) 2003 The Open For Business Project - www.ofbiz.org
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 * OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 * THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */

/**
 *
 * @author     <a href="mailto:byersa@automationgroups.com">Al Byers</a>
 * @version    $Rev$
 * @since      3.0

 */

import org.ofbiz.base.util.*;
import org.ofbiz.entity.*;
import org.ofbiz.security.*;
import org.ofbiz.service.*;
import org.ofbiz.entity.model.*;
import org.ofbiz.widget.html.*;
import org.ofbiz.widget.form.*;

import javax.servlet.*;
import javax.servlet.http.*;

delegator = (GenericDelegator) request.getAttribute("delegator");
context.put("editTemplate", "true");
context.put("wrapTemplate", "/wrap");
currentValue = (GenericValue)request.getAttribute("currentValue");
drDataResourceId = "";
contentId = "";
if (currentValue == void || currentValue == null ) {
    contentId = (String)request.getAttribute("contentId");
    if (contentId == null) 
        contentId = request.getParameter("contentId");
 
    if (contentId != null) {
        content = delegator.findByPrimaryKey("Content", UtilMisc.toMap("contentId", contentId));
        if (content != null) {
            dataResource = content.getRelatedOne("DataResource");
            if (dataResource != null) {
                drDataResourceId = (String)dataResource.get("dataResourceId");
                request.setAttribute("drDataResourceId", drDataResourceId);
                /*
                currentValue = delegator.findByPrimaryKey("SubContentDataResourceView",
                         UtilMisc.toMap("contentId", contentId, "drDataResourceId", drDataResourceId));
                currentEntityMap = session.getAttribute("currentEntityMap");
                if(currentEntityMap == null){
                    currentEntityMap     = new HashMap();
                    session.setAttribute("currentEntityMap", currentEntityMap);
                }
                currentEntityMap.put("SubContentDataResourceView", currentValue.getPrimaryKey());
                request.setAttribute("currentValue", currentValue);
                */
            }
        }
    }
Debug.logInfo("in layoutprep, contentId:" + contentId,"");
    
}

servletContext = (ServletContext)request.getSession().getServletContext();
rootDir = servletContext.getRealPath("/");
context.put("rootDir", rootDir);


/*
context.put("subContentId", null);
request.setAttribute("subContentId", null);
context.put("subContentId", contentId);
request.setAttribute("contentId", null);
context.put("drDataResourceId", drDataResourceId);
request.setAttribute("drDataResourceId", null);

//Locale locale = null;
//wrapTemplateId = UtilProperties.getMessage("content", "wrapTemplateId", locale);
wrapTemplateId = "11970";
Debug.logInfo("in layoutprep, wrapTemplateId:" + wrapTemplateId,"");
context.put("wrapTemplateId", wrapTemplateId);
request.setAttribute("drDataResourceId", null);
singleWrapper = (HtmlFormWrapper)context.get("singleWrapper");
singleWrapper.putInContext("mapKey", null);
singleWrapper.putInContext("contentIdTo", "TEMPLATE_MASTER");
singleWrapper.putInContext("currentValue", currentValue);
*/
