/*
 * Copyright 2001-2006 The Apache Software Foundation
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

import org.ofbiz.base.util.*;
import org.ofbiz.entity.*;
import org.ofbiz.security.*;
import org.ofbiz.service.*;
import org.ofbiz.entity.model.*;
import org.ofbiz.widget.html.*;
import org.ofbiz.widget.form.*;

import javax.servlet.*;
import javax.servlet.http.*;

delegator = (GenericDelegator) request.getAttribute("delegator");
context.put("editTemplate", "true");
context.put("wrapTemplate", "/wrap");
currentValue = (GenericValue)request.getAttribute("currentValue");
drDataResourceId = "";
contentId = "";
if (currentValue == void || currentValue == null ) {
    contentId = (String)request.getAttribute("contentId");
    if (contentId == null) 
        contentId = request.getParameter("contentId");
 
    if (contentId != null) {
        content = delegator.findByPrimaryKey("Content", UtilMisc.toMap("contentId", contentId));
        if (content != null) {
            dataResource = content.getRelatedOne("DataResource");
            if (dataResource != null) {
                drDataResourceId = (String)dataResource.get("dataResourceId");
                request.setAttribute("drDataResourceId", drDataResourceId);
                /*
                currentValue = delegator.findByPrimaryKey("SubContentDataResourceView",
                         UtilMisc.toMap("contentId", contentId, "drDataResourceId", drDataResourceId));
                currentEntityMap = session.getAttribute("currentEntityMap");
                if(currentEntityMap == null){
                    currentEntityMap     = new HashMap();
                    session.setAttribute("currentEntityMap", currentEntityMap);
                }
                currentEntityMap.put("SubContentDataResourceView", currentValue.getPrimaryKey());
                request.setAttribute("currentValue", currentValue);
                */
            }
        }
    }
Debug.logInfo("in layoutprep, contentId:" + contentId,"");
    
}

servletContext = (ServletContext)request.getSession().getServletContext();
rootDir = servletContext.getRealPath("/");
context.put("rootDir", rootDir);


/*
context.put("subContentId", null);
request.setAttribute("subContentId", null);
context.put("subContentId", contentId);
request.setAttribute("contentId", null);
context.put("drDataResourceId", drDataResourceId);
request.setAttribute("drDataResourceId", null);

//Locale locale = null;
//wrapTemplateId = UtilProperties.getMessage("content", "wrapTemplateId", locale);
wrapTemplateId = "11970";
Debug.logInfo("in layoutprep, wrapTemplateId:" + wrapTemplateId,"");
context.put("wrapTemplateId", wrapTemplateId);
request.setAttribute("drDataResourceId", null);
singleWrapper = (HtmlFormWrapper)context.get("singleWrapper");
singleWrapper.putInContext("mapKey", null);
singleWrapper.putInContext("contentIdTo", "TEMPLATE_MASTER");
singleWrapper.putInContext("currentValue", currentValue);
*/
