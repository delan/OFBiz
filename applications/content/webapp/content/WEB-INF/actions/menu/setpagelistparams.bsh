/*
 * $Id: setpagelistparams.bsh 5462 2005-08-05 18:35:48Z jonesde $
 *
 * Copyright (c) 2003 The Open For Business Project - www.ofbiz.org
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 * OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 * THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */

/**
 *
 * @author     <a href="mailto:byersa@automationgroups.com">Al Byers</a>
 * @version    $Rev$
 * @since      3.0

 * A commonly called script to find the "current" entity (either Content or DataResource
 * usually) from either a cached key or overridden by current values in the parameter map
 * or request attributes.
 */

import org.ofbiz.base.util.*;
import org.ofbiz.entity.*;
import org.ofbiz.security.*;
import org.ofbiz.service.*;
import org.ofbiz.entity.model.*;
import org.ofbiz.widget.html.*;
import org.ofbiz.widget.form.*;
import org.ofbiz.widget.menu.*;
import org.ofbiz.content.ContentManagementWorker;

import javax.servlet.*;
import javax.servlet.http.*;


LocalDispatcher dispatcher	= (LocalDispatcher)request.getAttribute("dispatcher");
GenericDelegator delegator = (GenericDelegator) request.getAttribute("delegator");
if (request.getAttribute("servletContext") == null) Debug.logError("ServletContext null in setpagelistparams");

//Debug.logInfo("in setpagelistparams, ", "");
entityName		= page.getProperty("entityName");
menuDefFile = page.getProperty("menuDefFile");
menuName = page.getProperty("menuName");
String menuItemName = page.getProperty("menuItemName");
String targetName = page.getProperty("targetName");
if (UtilValidate.isEmpty(menuItemName))
    menuItemName = entityName;
menuSig = menuDefFile + "__" + menuName;
currentMenuWrapper = HtmlMenuWrapper.getMenuWrapper( request, response, session, menuDefFile, menuName,  "HtmlMenuWrapper");
currentMenuWrapper.putInContext(menuItemName, "listSize", context.get("listSize"));
currentMenuWrapper.putInContext(menuItemName, "highIndex", context.get("highIndex"));
currentMenuWrapper.putInContext(menuItemName, "lowIndex", context.get("lowIndex"));
currentMenuWrapper.putInContext(menuItemName, "viewSize", context.get("viewSize"));
currentMenuWrapper.putInContext(menuItemName, "viewIndex", context.get("viewIndex"));
currentMenuWrapper.putInContext(menuItemName, "queryString", context.get("queryStringMap"));
