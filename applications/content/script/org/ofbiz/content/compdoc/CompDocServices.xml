<?xml version="1.0" encoding="UTF-8" ?>
<!--
 * Copyright (c) 2001-2004 The Open For Business Project and repective authors.
 * Permission is hereby granted, free of charge, to any person obtaining a
 *  copy of this software and associated documentation files (the "Software"),
 *  to deal in the Software without restriction, including without limitation
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense,
 *  and/or sell copies of the Software, and to permit persons to whom the
 *  Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 *  in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @author <a href="mailto:byersa@automationgroups.com">Al Byers</a>
 * @author <a href="mailto:jabster@juno.com">Jim Byers</a>
 * @version 0
 * Created on Jan 2, 2006
 -->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xsi:noNamespaceSchemaLocation="http://www.ofbiz.org/dtds/simple-methods.xsd">


    <!-- Methods for ContentApproval -->
    <simple-method method-name="createContentApproval" short-description="Create ContentApproval">
        <log level="always" message="got into createContentApproval(4)"></log>
        <check-permission action="_CREATE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run createContentApproval you must have the CONTENTMGR_CREATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentApproval" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
    </simple-method>
    <simple-method method-name="updateContentApproval" short-description="Update ContentApproval">
        <log level="always" message="got into updateContentApproval(4)"></log>
        <check-permission action="_UPDATE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run updateContentApproval you must have the CONTENTMGR_UPDATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentApproval" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentApproval" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <set-nonpk-fields map-name="parameters" value-name="lookedUpValue"/>
        <store-value value-name="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="removeContentApproval" short-description="Remove ContentApproval">
        <check-permission action="_DELETE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run removeContentApproval you must have the CONTENTMGR_DELETE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentApproval" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentApproval" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <remove-value value-name="lookedUpValue"/>
    </simple-method>

    <!-- Methods for ContentRevision -->
    <simple-method method-name="createContentRevision" short-description="Create ContentRevision">
        <check-permission action="_CREATE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run createContentRevision you must have the CONTENTMGR_CREATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentRevision" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
    </simple-method>
    <simple-method method-name="updateContentRevision" short-description="Update ContentRevision">
        <check-permission action="_UPDATE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run updateContentRevision you must have the CONTENTMGR_UPDATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentRevision" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentRevision" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <set-nonpk-fields map-name="parameters" value-name="lookedUpValue"/>
        <store-value value-name="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="removeContentRevision" short-description="Remove ContentRevision">
        <check-permission action="_DELETE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run removeContentRevision you must have the CONTENTMGR_DELETE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentRevision" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentRevision" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <remove-value value-name="lookedUpValue"/>
    </simple-method>

    <!-- Methods for ContentRevisionItem -->
    <simple-method method-name="createContentRevisionItem" short-description="Create ContentRevisionItem">
        <check-permission action="_CREATE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run createContentRevisionItem you must have the CONTENTMGR_CREATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentRevisionItem" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
    </simple-method>
    <simple-method method-name="updateContentRevisionItem" short-description="Update ContentRevisionItem">
        <check-permission action="_UPDATE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run updateContentRevisionItem you must have the CONTENTMGR_UPDATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentRevisionItem" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentRevisionItem" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <set-nonpk-fields map-name="parameters" value-name="lookedUpValue"/>
        <store-value value-name="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="removeContentRevisionItem" short-description="Remove ContentRevisionItem">
        <check-permission action="_DELETE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run removeContentRevisionItem you must have the CONTENTMGR_DELETE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentRevisionItem" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentRevisionItem" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <remove-value value-name="lookedUpValue"/>
    </simple-method>
    

    <!-- Methods for ContentRevision and ContentRevisionItem -->
    <simple-method method-name="persistContentRevisionAndItem" short-description="Update ContentRevision and ContentRevisionItem">
        <entity-condition entity-name="ContentRevision" list-name="contentRevisionList">
            <condition-expr field-name="contentId" operator="equals" env-name="parameters.contentId"/>
            <order-by field-name="contentRevisionSeqId DESC"/>
        </entity-condition>
        <log level="info" message="contentRevisionList: ${contentRevisionList}"/>
        <if-not-empty field-name="contentRevisionList">
            <set field="newEntity" from-field="contentRevisionList[0]" />
            <set field="incrementedSeq" from-field="newEntity.contentRevisionSeqId"/>
        <else>
            <make-value entity-name="ContentRevision" value-name="newEntity"/>
        </else>
        </if-not-empty>
        <log level="info" message="incrementedSeq(0): ${incrementedSeq}"/>
        <log level="info" message="ContentRevision(0): ${newEntity}"/>
        <if-not-empty field-name="incrementedSeq">
            <calculate field-name="incrementedSeq" type="String">
                <calcop operator="add">
                    <calcop operator="get" field-name="incrementedSeq"/>
                    <number value="1"/>
                </calcop>
            </calculate>
        <else>
            <set field="incrementedSeq" value="1" type="String"/>
        </else>
        </if-not-empty>
        <log level="info" message="incrementedSeq(1): ${incrementedSeq}"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <set field="newEntity.contentRevisionSeqId" from-field="incrementedSeq"/>
        <log level="info" message="ContentRevision(1): ${newEntity}"/>
        <create-value value-name="newEntity"/>
        
        <make-value entity-name="ContentRevisionItem" value-name="newEntity"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <set field="newEntity.contentRevisionSeqId" from-field="incrementedSeq"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
        <log level="info" message="ContentRevisionItem(1): ${newEntity}"/>
    </simple-method>
    
    <simple-method method-name="getRevisionDataResource" short-description="Get version of DataResource that fits overall revision">
        <entity-condition entity-name="ContentRevisionItem" list-name="contentRevisionItems" use-cache="true">
            <condition-list combine="and">
                <condition-expr field-name="contentId" env-name="parameters.contentId" operator="equals"/>
                <condition-expr field-name="itemContentId" env-name="parameters.itemContentId" operator="equals"/>
                <condition-expr field-name="contentRevisionSeqId" env-name="parameters.contentRevisionSeqId" operator="less-equals"/>
            </condition-list>
            <order-by field-name="-contentRevisionSeqId"/>
        </entity-condition>
        <if-not-empty field-name="contentRevisionItems">
            <set field="contentRevisionItem" from-field="contentRevisionItems[0]"/>
            <entity-one entity-name="Content" value-name="content" use-cache="true">
                <field-map field-name="contentId" env-name="contentRevisionItem.itemContentId"/>
            </entity-one>
            <if-not-empty field-name="content">
                <entity-one entity-name="DataResource" value-name="dataResource" use-cache="true">
                    <field-map field-name="dataResourceId" env-name="content.dataResourceId"/>
                </entity-one>
                <field-to-result field-name="dataResource" result-name="dataResource"/>
            </if-not-empty>
        </if-not-empty>
    </simple-method>
    <simple-method method-name="getRevisionItemDataResource" short-description="Get version of DataResource that fits overall revision">
        <entity-one entity-name="ContentRevisionItem" value-name="contentRevisionItem" use-cache="true">
                <field-map field-name="contentId" env-name="parameters.contentId"/>
                <field-map field-name="itemContentId" env-name="parameters.itemContentId"/>
                <field-map field-name="contentRevisionSeqId" env-name="parameters.contentRevisionSeqId"/>
        </entity-one>
        <entity-one entity-name="Content" value-name="content" use-cache="true">
                <field-map field-name="contentId" env-name="contentRevisionItem.itemContentId"/>
        </entity-one>
        <if-not-empty field-name="content">
                <entity-one entity-name="DataResource" value-name="dataResource" use-cache="true">
                    <field-map field-name="dataResourceId" env-name="content.dataResourceId"/>
                </entity-one>
                <field-to-result field-name="dataResource" result-name="dataResource"/>
        </if-not-empty>
    </simple-method>
</simple-methods>
