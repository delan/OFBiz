/*
 *  Copyright (c) 2003 The Open For Business Project - www.ofbiz.org
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a 
 *  copy of this software and associated documentation files (the "Software"), 
 *  to deal in the Software without restriction, including without limitation 
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense, 
 *  and/or sell copies of the Software, and to permit persons to whom the 
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included 
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS 
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF 
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY 
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT 
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR 
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *@author     David E. Jones
 *@version    $Rev$
 *@since      2.1
 */

import org.ofbiz.base.util.*;
import org.ofbiz.entity.*;

dispatcher = request.getAttribute("dispatcher");

state = request.getParameter("CategoryProductsState");
isOpen = true;
if (state != null) {
    session.setAttribute("CategoryProductsState", state);
    isOpen = "open".equals(state);
} else {
    state = (String) session.getAttribute("CategoryProductsState");
    if (state != null) {
        isOpen = "open".equals(state);
    }
}
context.put("isOpen", isOpen);

// Get a list of all products in the current category
if (isOpen) {
    paramInMap = new HashMap();
    paramInMap.put("productCategoryId", UtilFormatOut.checkNull(request.getParameter("productCategoryId")));
    paramInMap.put("defaultViewSize", 30);
    paramInMap.put("limitView", true);
    paramInMap.put("useCacheForMembers", false);
    paramInMap.put("checkViewAllow", false);

    // Returns: viewIndex, viewSize, lowIndex, highIndex, listSize, productCategory, productCategoryMembers
    outMap = dispatcher.runSync("getProductCategoryAndLimitedMembers", paramInMap);
    context.put("viewIndex", outMap.get("viewIndex"));
    context.put("viewSize", outMap.get("viewSize"));
    context.put("lowIndex", outMap.get("lowIndex"));
    context.put("highIndex", outMap.get("highIndex"));
    context.put("listSize", outMap.get("listSize"));
    context.put("productCategory", outMap.get("productCategory"));
    context.put("productCategoryMembers", outMap.get("productCategoryMembers"));
}
