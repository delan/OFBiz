/*
 *
 * Copyright 2001-2006 The Apache Software Foundation
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

import org.ofbiz.base.util.*;
import org.ofbiz.entity.condition.*;

// fields to search by
productId = parameters.get("productId");
internalName = parameters.get("internalName");

// build conditions
conditions = UtilMisc.toList(
        new EntityExpr("facilityId", EntityOperator.EQUALS, parameters.get("facilityId")),
        new EntityExpr("inventoryItemTypeId", EntityOperator.EQUALS, "NON_SERIAL_INV_ITEM")
        );
if (productId != null && productId.trim().length() != 0) {
    conditions.add( new EntityExpr("productId", EntityOperator.LIKE, productId.trim() + "%") );
}
if (internalName != null && internalName.trim().length() != 0) {
    conditions.add( new EntityExpr("internalName", true, EntityOperator.LIKE, internalName.trim() + "%", true) );
}

if (conditions.size() > 2) {
    physicalInventory = delegator.findByAnd("ProductInventoryItem", conditions, UtilMisc.toList("productId"));
    context.put("physicalInventory", physicalInventory);
}
