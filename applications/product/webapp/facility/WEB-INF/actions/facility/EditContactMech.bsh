/*
 *  Copyright (c) 2003 The Open For Business Project - www.ofbiz.org
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a 
 *  copy of this software and associated documentation files (the "Software"), 
 *  to deal in the Software without restriction, including without limitation 
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense, 
 *  and/or sell copies of the Software, and to permit persons to whom the 
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included 
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS 
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF 
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY 
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT 
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR 
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *@author     Johan Isacsson
 *@author     Andy Zeneski
 *@author     David E. Jones
 *@version    $Rev$
 *@since      2.2
 */

import java.util.*;
import org.ofbiz.entity.*;
import org.ofbiz.base.util.*;
import org.ofbiz.securityext.login.*;
import org.ofbiz.common.*;
import org.ofbiz.party.contact.*;
import org.ofbiz.webapp.control.*;

delegator = request.getAttribute("delegator");

String facilityId = request.getParameter("facilityId");
context.put("facilityId", facilityId);

Map mechMap = new HashMap();
ContactMechWorker.getFacilityContactMechAndRelated(request, facilityId, mechMap);

context.put("mechMap", mechMap);

String contactMechId = (String) mechMap.get("contactMechId");
if(contactMechId != null) context.put("contactMechId", contactMechId);

String preContactMechTypeId = request.getParameter("preContactMechTypeId");
if(preContactMechTypeId != null) context.put("preContactMechTypeId", preContactMechTypeId);

String paymentMethodId = request.getParameter("paymentMethodId");
if(paymentMethodId == null) paymentMethodId = (String) request.getAttribute("paymentMethodId");
if(paymentMethodId != null) context.put("paymentMethodId", paymentMethodId);

String donePage = request.getParameter("DONE_PAGE");
if (donePage == null) donePage = (String) request.getAttribute("DONE_PAGE");
if (donePage == null || donePage.length() <= 0) donePage = "ViewContactMechs";
context.put("donePage", donePage);

String cmNewPurposeTypeId = request.getParameter("contactMechPurposeTypeId");
if (cmNewPurposeTypeId == null) cmNewPurposeTypeId = (String) mechMap.get("contactMechPurposeTypeId");
if (cmNewPurposeTypeId != null) {
    context.put("contactMechPurposeTypeId", cmNewPurposeTypeId);
    GenericValue contactMechPurposeType = delegator.findByPrimaryKey("ContactMechPurposeType", UtilMisc.toMap("contactMechPurposeTypeId", cmNewPurposeTypeId));
    if(contactMechPurposeType != null) context.put("contactMechPurposeType", contactMechPurposeType);
}