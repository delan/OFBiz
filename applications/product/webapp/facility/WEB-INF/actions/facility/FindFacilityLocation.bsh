/*
 *  Copyright (c) 2003 The Open For Business Project - www.ofbiz.org
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a 
 *  copy of this software and associated documentation files (the "Software"), 
 *  to deal in the Software without restriction, including without limitation 
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense, 
 *  and/or sell copies of the Software, and to permit persons to whom the 
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included 
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS 
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF 
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY 
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT 
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR 
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *@author     David E. Jones (jonesde@ofbiz.org)
 *@version    $Rev$
 *@since      3.0
 */

import java.util.*;
import java.io.*;
import org.ofbiz.entity.*;
import org.ofbiz.base.util.*;
import org.ofbiz.widget.html.*;

delegator = request.getAttribute("delegator");

facilityId = request.getParameter("facilityId");
context.put("facilityId", facilityId);

lookup = request.getParameter("look_up");
itemId = request.getParameter("inventoryItemId");
if (itemId != null) {
    session.setAttribute("inventoryItemId", itemId);
}

itemId = session.getAttribute("inventoryItemId");
context.put("itemId", itemId);

facility = delegator.findByPrimaryKey("Facility", UtilMisc.toMap("facilityId", facilityId));
context.put("facility", facility);

UtilHttp.parametersToAttributes(request);
List foundLocations = null;
if (lookup != null) {
    Map reqParamMap = UtilHttp.getParameterMap(request);
    Map paramMap = new HashMap(reqParamMap);
    paramMap.remove("look_up");
    Iterator i = reqParamMap.keySet().iterator();
    while (i.hasNext()) {
        Object key = i.next();
        String value = (String) paramMap.get(key);
        if (value == null || value.length() == 0) {
            paramMap.remove(key);
        }
    }
    foundLocations = delegator.findByAnd("FacilityLocation", paramMap);
    if (foundLocations != null && foundLocations.size() > 0) {
        context.put("foundLocations", foundLocations);
    }
}
