<?xml version="1.0" encoding="UTF-8" ?>
<!--

Copyright 2001-2006 The Apache Software Foundation

Licensed under the Apache License, Version 2.0 (the "License"); you may not
use this file except in compliance with the License. You may obtain a copy of
the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.
-->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xsi:noNamespaceSchemaLocation="http://www.ofbiz.org/dtds/simple-methods.xsd">
    <simple-method method-name="createFacilityContactMech" short-description="Create a FacilityContactMech">
        <check-permission permission="FACILITY" action="_CREATE"><fail-message message="You do not have permission to perform this operation for this facility."/></check-permission>
        <check-errors/>
        <make-value value-name="newValue" entity-name="FacilityContactMech"/>
        <make-value entity-name="FacilityContactMech" value-name="newFacilityContactMech"/>        
        <log level="info" message="contactMechId is ${parameters.contactMechId}"/>
        
        <if-empty map-name="parameters" field-name="contactMechId">
            <call-map-processor xml-resource="org/ofbiz/party/contact/ContactMechMapProcs.xml"
                processor-name="contactMech" in-map-name="parameters" out-map-name="context"/>
            <call-service service-name="createContactMech" in-map-name="context">
                <default-message>Contact Mechanism successfully created.</default-message>
                <result-to-field result-name="contactMechId" map-name="newValue"/>
            </call-service>
            <log level="info" message="ContactMech created"/>
            <else>
                <field-to-field field-name="contactMechId" map-name="parameters" to-map-name="newValue"/>
            </else>
        </if-empty>

        <log level="info" message="Creating a FacilityContactMech"/>
        <field-to-field field-name="facilityId" map-name="parameters" to-map-name="newValue"/>
        <field-to-result field-name="contactMechId" map-name="newValue"/>
        <field-to-request field-name="contactMechId" map-name="newValue"/>
        <set-nonpk-fields map-name="parameters" value-name="newValue"/>
        <now-timestamp-to-env env-name="nowTimestamp"/>
        <env-to-field env-name="nowTimestamp" field-name="fromDate" map-name="newValue"/>
        <create-value value-name="newValue"/>
    </simple-method>
    
    <simple-method method-name="updateFacilityContactMech" short-description="Update a FacilityContactMech">
        <check-permission permission="FACILITY" action="_UPDATE"><fail-message message="You do not have permission to perform this operation for this facility."/></check-permission>
        <check-errors/>

        <make-value entity-name="FacilityContactMech" value-name="newFacilityContactMech"/>
        
        <!-- Find old value -->
        <make-value entity-name="FacilityContactMech" value-name="facilityContactMechMap"/>
        <set-pk-fields value-name="facilityContactMechMap" map-name="parameters"/>
        <find-by-and entity-name="FacilityContactMech" list-name="facilityContactMechs" map-name="facilityContactMechMap"/>
        <filter-list-by-date list-name="facilityContactMechs" to-list-name="validFacilityContactMechs"/>
        <first-from-list entry-name="facilityContactMech" list-name="validFacilityContactMechs"/>
        <if-empty field-name="facilityContactMech">
            <add-error><fail-message message="ERROR: Cannot update specified contact info because it does not correspond to the specified facility"/></add-error>
        </if-empty>
        <check-errors/>
        <field-to-list list-name="storeList" field-name="facilityContactMech"/>
        
        <clone-value value-name="facilityContactMech" new-value-name="newFacilityContactMech"/>
        
        <!-- If we already have a new contactMechId don't update ContactMech -->
        <if-empty map-name="parameters" field-name="newContactMechId">                
            <log level="info" message="Calling map procs"/>
            <call-map-processor xml-resource="org/ofbiz/party/contact/ContactMechMapProcs.xml"
                processor-name="updateContactMech" in-map-name="parameters" out-map-name="context"/>
            <to-string field-name="contactMechId" map-name="context"/>
            <log level="info" message="Calling generic updateContactMech method"/>
            <call-service service-name="updateContactMech" in-map-name="context">
                <default-message>Contact Mechanism successfully updated.</default-message>
                <result-to-field result-name="contactMechId" map-name="newFacilityContactMech"/>
            </call-service>
            <else>
                <field-to-field map-name="parameters" to-map-name="newFacilityContactMech" field-name="newContactMechId" to-field-name="contactMechId"/>
                <log level="info" message="Using supplied new contact mech id: ${newFacilityContactMech.contactMechId}"/>
            </else>
        </if-empty> 

        <set-nonpk-fields value-name="newFacilityContactMech" map-name="parameters" set-if-null="false"/>
        <now-timestamp-to-env env-name="now"/>
        <env-to-field env-name="now" field-name="fromDate" map-name="newFacilityContactMech"/>
        <env-to-field env-name="now" field-name="thruDate" map-name="facilityContactMech"/>
        <field-to-list list-name="storeList" field-name="newFacilityContactMech"/>
        
        <if-compare-field field-name="contactMechId" map-name="parameters" to-map-name="newFacilityContactMech" operator="not-equals">
            <get-related value-name="facilityContactMech" relation-name="FacilityContactMechPurpose" list-name="facilityContactMechPurposes"/>   
            <iterate entry-name="facilityContactMechPurpose" list-name="facilityContactMechPurposes">
                <field-to-field field-name="contactMechId" map-name="newFacilityContactMech" to-map-name="facilityContactMechPurpose"/>
                <field-to-list field-name="facilityContactMechPurpose" list-name="storeList"/>
            </iterate>
        </if-compare-field>
        
        <store-list list-name="storeList"/>
        <log level="info" message="Setting id to result: ${newFacilityContactMech.contactMechId}"/>
        <field-to-result field-name="contactMechId" map-name="newFacilityContactMech"/>
        <field-to-request field-name="contactMechId" map-name="newFacilityContactMech"/>
    </simple-method>
    
    <simple-method method-name="deleteFacilityContactMech" short-description="Delete a FacilityContactMech">
        <check-permission permission="FACILITY" action="_DELETE"><fail-message message="You do not have permission to perform this operation for this facility."/></check-permission>
        <check-errors/>

        <make-value entity-name="FacilityContactMech" value-name="newFacilityContactMech"/>
        <make-value entity-name="FacilityContactMech" value-name="facilityContactMechMap"/>
        <set-pk-fields value-name="facilityContactMechMap" map-name="parameters"/>
        <find-by-and entity-name="FacilityContactMech" list-name="facilityContactMechs" map-name="facilityContactMechMap"/>
        <filter-list-by-date list-name="facilityContactMechs" to-list-name="validFacilityContactMechs"/>
        <first-from-list entry-name="facilityContactMech" list-name="validFacilityContactMechs"/>
        <if-empty field-name="facilityContactMech">
            <add-error><fail-message message="ERROR: Could not delete contact info (facility contact mech not found)"/></add-error>
            <return/>
        </if-empty>
        <now-timestamp-to-env env-name="now"/>
        <env-to-field env-name="now" field-name="thruDate" map-name="facilityContactMech"/>
        <store-value value-name="facilityContactMech"/>
    </simple-method>
    
    <simple-method method-name="createFacilityPostalAddress" short-description="Create a PostalAddress for facility">
        <check-permission permission="FACILITY" action="_CREATE"><fail-message message="You do not have permission to perform this operation for this facility."/></check-permission>
        <check-errors/>

        <make-value entity-name="FacilityContactMech" value-name="newFacilityContactMech"/>
        <log level="info" message="Creating postal address"/>
        <call-map-processor xml-resource="org/ofbiz/party/contact/ContactMechMapProcs.xml"
                processor-name="postalAddress" in-map-name="parameters" out-map-name="context"/>
        <call-service in-map-name="context" service-name="createPostalAddress">
            <default-message>Postal Address successfully created</default-message>
            <result-to-field result-name="contactMechId" map-name="newFacilityContactMech"/>             
        </call-service>
        <log level="info" message="ContactMech for postal address was ${newFacilityContactMech.contactMechId}, now creating facility contact mech"/>
        <call-map-processor xml-resource="org/ofbiz/product/storage/FacilityContactMechMapProcs.xml"
                processor-name="facilityContactMech" in-map-name="parameters" out-map-name="context2"/>  
        <field-to-field field-name="contactMechId" map-name="newFacilityContactMech" to-map-name="context2"/> 
        <log level="info" message="Copied id to context2: ${context2.contactMechId}"/>
        <call-service in-map-name="context2" break-on-error="true" service-name="createFacilityContactMech">
            <default-message>Facility Contact Mechanism successfully created</default-message>       
        </call-service>
        <field-to-request field-name="contactMechId" map-name="newFacilityContactMech"/>
        <field-to-result field-name="contactMechId" map-name="newFacilityContactMech"/>
    </simple-method>
    
    <simple-method method-name="updateFacilityPostalAddress" short-description="Update a PostalAddress for facility">
        <check-permission permission="FACILITY" action="_UPDATE"><fail-message message="You do not have permission to perform this operation for this facility."/></check-permission>
        <check-errors/>

        <make-value entity-name="FacilityContactMech" value-name="newFacilityContactMech"/>
        <make-value entity-name="FacilityContactMech" value-name="newFacilityContactMech"/>
        
        <call-map-processor xml-resource="org/ofbiz/party/contact/ContactMechMapProcs.xml"
                processor-name="postalAddress" in-map-name="parameters" out-map-name="context"/>
        <call-service in-map-name="context" service-name="updatePostalAddress">
            <default-message>Postal Address successfully updated</default-message>
            <result-to-field result-name="contactMechId" map-name="newFacilityContactMech" field-name="contactMechId" />             
        </call-service>
        <call-map-processor xml-resource="org/ofbiz/product/storage/FacilityContactMechMapProcs.xml"
                processor-name="updateFacilityContactMech" in-map-name="parameters" out-map-name="context2"/>  
        <field-to-field map-name="newFacilityContactMech" field-name="contactMechId"  to-map-name="context2" to-field-name="newContactMechId"/>
        <string-to-field map-name="context2" field-name="contactMechTypeId" string="POSTAL_ADDRESS"/>
        <log level="info" message="Copied id to context2: ${context2.newContactMechId}"/>
        <call-service in-map-name="context2" service-name="updateFacilityContactMech">
            <default-message>Facility Contact Mechanism successfully updated</default-message>       
        </call-service>
        <field-to-request field-name="contactMechId" map-name="newFacilityContactMech"/>
        <field-to-result field-name="contactMechId" map-name="newFacilityContactMech"/>
    </simple-method>

    <simple-method method-name="createFacilityTelecomNumber" short-description="Create a TelecomNumber for facility">
        <check-permission permission="FACILITY" action="_CREATE"><fail-message message="You do not have permission to perform this operation for this facility."/></check-permission>
        <check-errors/>

        <make-value entity-name="FacilityContactMech" value-name="newFacilityContactMech"/>
        <log level="info" message="Creating telecom number"/>
        <call-map-processor xml-resource="org/ofbiz/party/contact/ContactMechMapProcs.xml"
                processor-name="telecomNumber" in-map-name="parameters" out-map-name="context"/>
        <call-service in-map-name="context" service-name="createTelecomNumber">
            <default-message>Telecom number successfully created</default-message>
            <result-to-field result-name="contactMechId" map-name="newFacilityContactMech"/>             
        </call-service>
        <call-map-processor xml-resource="org/ofbiz/product/storage/FacilityContactMechMapProcs.xml"
                processor-name="facilityContactMech" in-map-name="parameters" out-map-name="context2"/>  
        <field-to-field field-name="contactMechId" map-name="newFacilityContactMech" to-map-name="context2"/> 
        <log level="info" message="Copied id to context2: ${context2.contactMechId}"/>
        <call-service in-map-name="context2" break-on-error="true" service-name="createFacilityContactMech">
            <default-message>Facility Contact Mechanism successfully created</default-message>       
        </call-service>
        <field-to-request field-name="contactMechId" map-name="newFacilityContactMech"/>
        <field-to-result field-name="contactMechId" map-name="newFacilityContactMech"/>
    </simple-method>
    
    <simple-method method-name="updateFacilityTelecomNumber" short-description="Update a TelecomNumber for facility">
        <check-permission permission="FACILITY" action="_UPDATE"><fail-message message="You do not have permission to perform this operation for this facility."/></check-permission>
        <check-errors/>

        <make-value entity-name="FacilityContactMech" value-name="newFacilityContactMech"/>        
        <call-map-processor xml-resource="org/ofbiz/party/contact/ContactMechMapProcs.xml"
                processor-name="telecomNumber" in-map-name="parameters" out-map-name="context"/>
        <call-service in-map-name="context" service-name="updateTelecomNumber">
            <default-message>Telecom Number successfully updated</default-message>
            <result-to-field result-name="contactMechId" map-name="newFacilityContactMech" field-name="contactMechId" />             
        </call-service>
        
        <call-map-processor xml-resource="org/ofbiz/product/storage/FacilityContactMechMapProcs.xml"
                processor-name="updateFacilityContactMech" in-map-name="parameters" out-map-name="context2"/>  
        <field-to-field map-name="newFacilityContactMech" field-name="contactMechId"  to-map-name="context2" to-field-name="newContactMechId"/>
        <string-to-field map-name="context2" field-name="contactMechTypeId" string="TELECOM_NUMBER"/>
        <log level="info" message="Copied id to context2: ${context2.newContactMechId}"/>
        <call-service in-map-name="context2" service-name="updateFacilityContactMech">
            <default-message>Facility Contact Mechanism successfully updated</default-message>       
        </call-service>
        <log level="info" message="Setting result id: ${newFacilityContactMech.contactMechId}"/>
        <field-to-request field-name="contactMechId" map-name="newFacilityContactMech"/>
        <field-to-result field-name="contactMechId" map-name="newFacilityContactMech"/>
    </simple-method>  
    
    <simple-method method-name="createFacilityEmailAddress" short-description="Create an email address for facility">
        <check-permission permission="FACILITY" action="_UPDATE"><fail-message message="You do not have permission to perform this operation for this facility."/></check-permission>
        <check-errors/>

        <call-map-processor xml-resource="org/ofbiz/product/storage/FacilityContactMechMapProcs.xml"
            processor-name="emailAddress" in-map-name="parameters" out-map-name="context"/>
        <check-errors/>
        <string-to-field map-name="context" field-name="contactMechTypeId" string="EMAIL_ADDRESS"/>
        <call-service service-name="createFacilityContactMech" in-map-name="context">
            <default-message>Facility Contact Mechanism successfully created.</default-message>
            <result-to-result result-name="contactMechId"/>
            <result-to-request result-name="contactMechId"/>
        </call-service>
    </simple-method>
    
    <simple-method method-name="updateFacilityEmailAddress" short-description="Update an email address for facility">
        <check-permission permission="FACILITY" action="_UPDATE"><fail-message message="You do not have permission to perform this operation for this facility."/></check-permission>
        <check-errors/>

        <call-map-processor xml-resource="org/ofbiz/product/storage/FacilityContactMechMapProcs.xml"
            processor-name="emailAddress" in-map-name="parameters" out-map-name="context"/>
        <check-errors/>
        <string-to-field map-name="context" field-name="contactMechTypeId" string="EMAIL_ADDRESS"/>
        <call-service service-name="updateFacilityContactMech" in-map-name="context">
            <default-message>Facility Contact Mechanism successfully updated.</default-message>
            <result-to-result result-name="contactMechId"/>
            <result-to-request result-name="contactMechId"/>
        </call-service>
    </simple-method>
    
    <simple-method method-name="createFacilityContactMechPurpose" short-description="Create a facility/contact mech purpose">
        <check-permission permission="FACILITY" action="_CREATE"><fail-message message="You do not have permission to perform this operation for this facility."/></check-permission>
        <check-errors/>

        <make-value value-name="lookUpMap" entity-name="FacilityContactMechPurpose"/>
        <field-to-field field-name="facilityId" map-name="parameters" to-map-name="lookUpMap"/>
        <field-to-field field-name="contactMechId" map-name="parameters" to-map-name="lookUpMap"/>
        <field-to-field field-name="contactMechPurposeTypeId" map-name="parameters" to-map-name="lookUpMap"/>
        <find-by-and entity-name="FacilityContactMechPurpose" map-name="lookUpMap" list-name="purposeList"/>
        <filter-list-by-date list-name="purposeList"/>
        
        <if-not-empty field-name="purposeList">
            <add-error><fail-message message="Could not create new purpose, a purpose with that type already exists"/></add-error>
            <check-errors/>
        </if-not-empty>
        
        <now-timestamp-to-env env-name="nowTimestamp"/>
        <make-value value-name="newEntity" entity-name="FacilityContactMechPurpose"/>
        <field-to-field field-name="facilityId" map-name="parameters" to-map-name="newEntity"/>
        <field-to-field field-name="contactMechId" map-name="parameters" to-map-name="newEntity"/>
        <field-to-field field-name="contactMechPurposeTypeId" map-name="parameters" to-map-name="newEntity"/>
        <env-to-field env-name="nowTimestamp" field-name="fromDate" map-name="newEntity"/>
        <create-value value-name="newEntity"/>
        
        <field-to-result field-name="fromDate" map-name="newEntity" result-name="fromDate"/>
    </simple-method>
    
    <simple-method method-name="deleteFacilityContactMechPurpose" short-description="Delete a facility/contact mech purpose">
        <check-permission permission="FACILITY" action="_DELETE"><fail-message message="You do not have permission to perform this operation for this facility."/></check-permission>
        <check-errors/>

        <make-value value-name="lookUpMap" entity-name="FacilityContactMechPurpose"/>
        <set-pk-fields map-name="parameters" value-name="lookUpMap"/>
        <find-by-primary-key value-name="purposeEntity" entity-name="FacilityContactMechPurpose" map-name="lookUpMap"/>        
        
        <if-empty field-name="purposeEntity">
            <add-error><fail-message message="Unable to locate purpose; cannot delete"/></add-error>
            <check-errors/>
        </if-empty>
        
        <now-timestamp-to-env env-name="nowTimestamp"/>
        <env-to-field env-name="nowTimestamp" field-name="thruDate" map-name="purposeEntity"/>
        <store-value value-name="purposeEntity"/>                
    </simple-method>    
</simple-methods>
