import java.util.*;
import java.io.*;
import org.ofbiz.core.entity.*;
import org.ofbiz.core.util.*;
import org.ofbiz.core.widgetimpl.*;

security = request.getAttribute("security");
delegator = request.getAttribute("delegator");

if(security.hasEntityPermission("FACILITY", "_VIEW", session)) {
    context.put("hasPermission", Boolean.TRUE);
} else {
    context.put("hasPermission", Boolean.FALSE);
}
String facilityId = request.getParameter("facilityId");
if (facilityId != null) context.put("facilityId", facilityId);

GenericValue facility = delegator.findByPrimaryKey("Facility", UtilMisc.toMap("facilityId", facilityId));
if (facility != null) context.put("facility", facility);

String inventoryTransferId = request.getParameter("inventoryTransferId");
if (inventoryTransferId != null) context.put("inventoryTransferId", inventoryTransferId);

String inventoryItemId = request.getParameter("inventoryItemId");
if (inventoryItemId != null) context.put("inventoryItemId", inventoryItemId);

GenericValue inventoryTransfer = null;
GenericValue facility = null;
GenericValue inventoryItem = null;
GenericValue inventoryItemType = null;
GenericValue inventoryStatus = null;

if (inventoryTransferId != null) {
    inventoryTransfer = delegator.findByPrimaryKey("InventoryTransfer", UtilMisc.toMap("inventoryTransferId", inventoryTransferId));
    if (inventoryTransfer != null) {
        context.put("inventoryTransfer", inventoryTransfer);
        if (facilityId == null)
            facilityId = inventoryTransfer.getString("facilityId");
        if (inventoryItemId == null)
            inventoryItemId = inventoryTransfer.getString("inventoryItemId");
    }
}

if (facilityId != null)
    facility = delegator.findByPrimaryKey("Facility", UtilMisc.toMap("facilityId", facilityId));

String illegalInventoryItem = null;
if (inventoryItemId != null) {
    inventoryItem = delegator.findByPrimaryKey("InventoryItem", UtilMisc.toMap("inventoryItemId", inventoryItemId));
    if (facilityId != null && inventoryItem != null && inventoryItem.get("facilityId") != null && !inventoryItem.getString("facilityId").equals(facilityId)) {
        illegalInventoryItem = "Inventory item not found for this facility.";
        inventoryItem = null;
    }
    if (inventoryItem != null) {
        context.put("inventoryItem", inventoryItem); 
        inventoryItemType = inventoryItem.getRelatedOne("InventoryItemType");
    
        if (inventoryItemType != null) context.put("inventoryItemType", inventoryItemType);
        if (inventoryItem.getString("statusId") != null) {
            inventoryStatus = inventoryItem.getRelatedOne("StatusItem");
            if (inventoryStatus != null) context.put("inventoryStatus", inventoryStatus);
        }
    }
}

// facilities
List facilities = delegator.findAll("Facility");
if (facilities != null) context.put("facilities", facilities);

// status items
if (inventoryTransfer != null && UtilValidate.isNotEmpty(inventoryTransfer.getString("statusId"))) {
    List statusChange = delegator.findByAnd("StatusValidChange", UtilMisc.toMap("statusId", inventoryTransfer.getString("statusId")));	
    if (statusChange != null) {
        List statusItems = new ArrayList();
        Iterator statusChangeIter = statusChange.iterator();
        while (statusChangeIter.hasNext()) {
            GenericValue curStatusChange = (GenericValue) statusChangeIter.next();
            GenericValue curStatusItem = delegator.findByPrimaryKey("StatusItem", UtilMisc.toMap("statusId", curStatusChange.get("statusIdTo")));
            if (curStatusItem != null) statusItems.add(curStatusItem);
        }
        List statusItem = EntityUtil.orderBy(statusItems, UtilMisc.toList("sequenceId"));
        context.put("statusItems", statusItems);
    }
} else {
    List statusItems = delegator.findByAnd("StatusItem", UtilMisc.toMap("statusTypeId", "INVENTORY_XFER_STTS"), UtilMisc.toList("sequenceId"));
    if (statusItems != null) context.put("statusItems", statusItems);
}	
