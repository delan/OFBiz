import java.util.*;
import java.io.*;
import org.ofbiz.core.entity.*;
import org.ofbiz.core.util.*;
import org.ofbiz.core.widgetimpl.*;

security = request.getAttribute("security");
delegator = request.getAttribute("delegator");

if(security.hasEntityPermission("FACILITY", "_VIEW", session)) {
    context.put("hasPermission", Boolean.TRUE);
} else {
    context.put("hasPermission", Boolean.FALSE);
}
String facilityId = request.getParameter("facilityId");
String locationSeqId = request.getParameter("locationSeqId");
GenericValue facility = null;
GenericValue facilityLocation = null;

if (UtilValidate.isEmpty(facilityId) && UtilValidate.isNotEmpty((String) request.getAttribute("facilityId"))) {
    facilityId = (String) request.getAttribute("facilityId");
}
if (facilityId != null) context.put("facilityId", facilityId);

if (UtilValidate.isEmpty(locationSeqId) && UtilValidate.isNotEmpty((String) request.getAttribute("locationSeqId"))) {
    locationSeqId = (String) request.getAttribute("locationSeqId");
}
if (locationSeqId != null) context.put("locationSeqId", locationSeqId);

if (facilityId != null && locationSeqId != null) {
    facilityLocation = delegator.findByPrimaryKey("FacilityLocation", 
            UtilMisc.toMap("facilityId", facilityId, "locationSeqId", locationSeqId));
}
if (facilityId != null) {
    facility = delegator.findByPrimaryKey("Facility", UtilMisc.toMap("facilityId", facilityId));
}
if (facility != null) context.put("facility", facility);

if (facilityLocation == null) {
    tryEntity = false;
} else {
    context.put("facilityLocation", facilityLocation);       
}   
