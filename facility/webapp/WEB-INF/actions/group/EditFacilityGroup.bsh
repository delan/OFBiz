import java.util.*;
import java.io.*;
import org.ofbiz.core.entity.*;
import org.ofbiz.core.util.*;
import org.ofbiz.core.widgetimpl.*;

security = request.getAttribute("security");
delegator = request.getAttribute("delegator");

if(security.hasEntityPermission("FACILITY", "_VIEW", session)) {
    context.put("hasPermission", Boolean.TRUE);
} else {
    context.put("hasPermission", Boolean.FALSE);
}

boolean tryEntity = true;
if(request.getAttribute(SiteDefs.ERROR_MESSAGE) != null) tryEntity = false;

String facilityGroupId = request.getParameter("facilityGroupId");
if (UtilValidate.isEmpty(facilityGroupId) && UtilValidate.isNotEmpty((String) request.getAttribute("facilityGroupId"))) {
    facilityGroupId = (String) request.getAttribute("facilityGroupId");
}
if (facilityGroupId != null) context.put("facilityGroupId", facilityGroupId);

GenericValue facilityGroup = delegator.findByPrimaryKey("FacilityGroup", UtilMisc.toMap("facilityGroupId", facilityGroupId));
GenericValue facilityGroupType = null;
if(facilityGroup == null) {
    tryEntity = false;
} else {
    context.put("facilityGroup", facilityGroup);

    facilityGroupType = facilityGroup.getRelatedOne("FacilityGroupType");
    if (facilityGroupType != null) context.put("facilityGroupType", facilityGroupType);
}

// Facility Group types
List facilityGroupTypes = delegator.findAll("FacilityGroupType");
if (facilityGroupTypes != null) context.put("facilityGroupTypes", facilityGroupTypes);

// Facility Groups
List facilityGroups = delegator.findAll("FacilityGroup");
if (facilityGroups != null) context.put("facilityGroups", facilityGroups);
