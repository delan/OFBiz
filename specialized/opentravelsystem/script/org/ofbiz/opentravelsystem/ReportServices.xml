<?xml version="1.0" encoding="UTF-8" ?>
<!--
    * Copyright (c) 2001-2005 The Open For Business Project and repective authors.
    * Permission is hereby granted, free of charge, to any person obtaining a
    *  copy of this software and associated documentation files (the "Software"),
    *  to deal in the Software without restriction, including without limitation
    *  the rights to use, copy, modify, merge, publish, distribute, sublicense,
    *  and/or sell copies of the Software, and to permit persons to whom the
    *  Software is furnished to do so, subject to the following conditions:
    *
    * The above copyright notice and this permission notice shall be included
    *  in all copies or substantial portions of the Software.
    *
    * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
    *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
    *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
    *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
    *
    * @author <a href="mailto:support@opentravelsystem.org">Hans Bakker</a>
    * @version 1.0
-->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:noNamespaceSchemaLocation="http://www.ofbiz.org/dtds/simple-methods.xsd">
    
    <!-- ================================================================ -->
    <!-- Opentravelsystem reporting Services -->
    <!-- ================================================================ -->
    
    <simple-method method-name="vatReport" short-description="Show the vat for a certain period">
        <!--check-permission permission="CATALOG" action="_CREATE">
            <alt-permission permission="CATALOG_ROLE" action="_CREATE"/>
            <fail-message message="Security Error: to update you need CATALOG_CREATE or CATALOG_ADMIN permission, or the limited CATALOG_ROLE_CREATE permission"/>
            </check-permission>        
            <check-errors/-->
        
        <entity-one entity-name="PartyAcctgPreference" value-name="partyAcctgPreference" auto-field-map="false" use-cache="true">
            <field-map field-name="partyId" env-name="parameters.userLogin.partyId"/>
        </entity-one>
        <set field="searchPrefix" from-field="partyAcctgPreference.invoiceIdPrefix"/>
        
        <if-empty field-name="parameters.year">
            <now-timestamp-to-env env-name="nowTimestamp"/>
            <call-bsh><![CDATA[parameters.put("year",nowTimestamp.toString().substring(0,4))]]></call-bsh>
        </if-empty>
        
        <set field="start" from-field="parameters.year"/>
        <string-append field-name="start" string="-01-01 00:00:00"/>
        <set field="period.start" from-field="start" type="Timestamp"/>
        <set field="end" from-field="parameters.year"/>
        <string-append field-name="end" string="-12-31 23:59:59"/>
        <set field="period.end" from-field="end" type="Timestamp"/>
        
        <string-append field-name="searchPrefix" string="%"/>
        <entity-condition entity-name="Invoice" list-name="invoices">
            <condition-list combine="and">
                <condition-expr field-name="invoiceId" operator="like" value="${searchPrefix}"/>
                <condition-expr field-name="invoiceDate" operator="greater-equals" value="${period.start}"/>
                <condition-expr field-name="invoiceDate" operator="less-equals" value="${period.end}"/>
                <condition-expr field-name="statusId" operator="not-equals" value="INVOICE_CANCELLED"/>
            </condition-list>            
            <order-by field-name="invoiceDate"/>
        </entity-condition>
        
        <log level="always" message="Preparing VAT report for organization: ${parameters.organizationPartyId} for year ${parameters.year}"/>
        <if-empty field-name="invoices">
            <log level="always" message="==== could not find an invoice...."/>
        </if-empty>

        <set field="invoiceTotalP" value="0" type="Double"/>        
        <set field="invoiceTotalS" value="0" type="Double"/>        
        <set field="current.monthNr" value="0000-00"/>  <!-- read in from record -->
        <set field="month.monthNr" value="0000-00"/> <!-- report line value -->
        <iterate entry-name="invoice" list-name="invoices">
            <!-- get the month number -->
            <set field="invoiceDate" from-field="invoice.invoiceDate"/>
            <call-bsh><![CDATA[current.put("monthNr",invoiceDate.toString().substring(0,7))]]></call-bsh>
            <!-- store in list if changed however not the first line-->
            <if-compare-field field-name="month.monthNr" operator="not-equals" to-field-name="current.monthNr">
                <if-compare field-name="month.monthNr" operator="not-equals" value="0000-00">
                    <calculate field-name="month.salesTaxDue">
                        <calcop operator="get" field-name="month.salesTaxIn"/>
                        <calcop operator="negative" field-name="month.salesTaxOut"/>
                    </calculate>
                    <calculate field-name="monthTotal.salesTaxDue">
                        <calcop operator="get" field-name="month.salesTaxIn"/>
                        <calcop operator="negative" field-name="month.salesTaxOut"/>
                        <calcop operator="add" field-name="monthTotal.salesTaxDue"/>
                    </calculate>
                    <field-to-list field-name="month" list-name="monthList"/>
                    <clear-field field-name="month"/>
                </if-compare>
            </if-compare-field>
            <set field="month.monthNr" from-field="current.monthNr"/>
            <get-related value-name="invoice" relation-name="InvoiceItem" list-name="invoiceItems"/>
            <iterate entry-name="invoiceItem" list-name="invoiceItems">
                <!-- calculate amount -->
                <if-empty field-name="invoiceItem.quantity">
                    <set field="invoiceItem.quantity" value="1" type="Double"/>
                </if-empty>
                <calculate field-name="totalAmount" decimal-scale="2" type="BigDecimal">
                    <calcop operator="multiply">
                        <calcop operator="get" field-name="invoiceItem.quantity"/>
                        <calcop operator="get" field-name="invoiceItem.amount"/>
                    </calcop>
                </calculate>
                <!-- store in appropriate total month value -->
                <if-compare field-name="invoice.invoiceTypeId" value="SALES_INVOICE" operator="equals">
                    <if-compare field-name="invoiceItem.invoiceItemTypeId" value="INV_SALES_TAX" operator="equals">
                        <calculate field-name="month.salesTaxIn">
                                <calcop operator="get" field-name="totalAmount"/>
                                <calcop operator="get" field-name="month.salesTaxIn"/>
                        </calculate>
                        <calculate field-name="monthTotal.salesTaxIn">
                            <calcop operator="add" field-name="totalAmount"/>
                            <calcop operator="get" field-name="monthTotal.salesTaxIn"/>
                        </calculate>
                        <else>
                            <calculate field-name="month.revenue">
                                <calcop operator="add" field-name="totalAmount"></calcop>
                                <calcop operator="get" field-name="month.revenue"></calcop>
                            </calculate>
                            <calculate field-name="monthTotal.revenue">
                                <calcop operator="add" field-name="totalAmount"></calcop>
                                <calcop operator="get" field-name="monthTotal.revenue"></calcop>
                            </calculate>
                        </else>
                    </if-compare>
                </if-compare>
                <if-compare field-name="invoice.invoiceTypeId" value="PURCHASE_INVOICE" operator="equals">
                    <if-compare field-name="invoiceItem.invoiceItemTypeId" value="PINV_SALES_TAX" operator="equals">
                        <calculate field-name="month.salesTaxOut">
                            <calcop operator="add" field-name="totalAmount"></calcop>
                            <calcop operator="get" field-name="month.salesTaxOut"></calcop>
                        </calculate>
                        <calculate field-name="monthTotal.salesTaxOut">
                            <calcop operator="add" field-name="totalAmount"></calcop>
                            <calcop operator="get" field-name="monthTotal.salesTaxOut"></calcop>
                        </calculate>
                        <else>
                            <calculate field-name="month.expenses">
                                <calcop operator="add" field-name="totalAmount"></calcop>
                                <calcop operator="get" field-name="month.expenses"></calcop>
                            </calculate>
                            <calculate field-name="monthTotal.expenses">
                                <calcop operator="add" field-name="totalAmount"></calcop>
                                <calcop operator="get" field-name="monthTotal.expenses"></calcop>
                            </calculate>
                        </else>
                    </if-compare>
                </if-compare>
            </iterate>
        </iterate>    
        <if-compare field-name="month.monthNr" operator="not-equals" value="0000-00"><!-- process last line -->
            <calculate field-name="month.salesTaxDue">
                <calcop operator="get" field-name="month.salesTaxIn"/>
                <calcop operator="negative" field-name="month.salesTaxOut"/>
            </calculate>
            <calculate field-name="monthTotal.salesTaxDue">
                <calcop operator="get" field-name="month.salesTaxIn"/>
                <calcop operator="negative" field-name="month.salesTaxOut"/>
                <calcop operator="get" field-name="monthTotal.salesTaxDue"/>
            </calculate>
            <field-to-list field-name="month" list-name="monthList"/>
        </if-compare>
        <if-not-empty field-name="monthList">
            <set field="monthTotal.monthNr" value="Total:"/>
            <else>
                <set field="monthTotal.monthNr" value="No invoices found....."/>
            </else>
        </if-not-empty>
        <field-to-list field-name="monthTotal" list-name="monthList"/>
        <field-to-result field-name="monthList" result-name="monthList"/>
    </simple-method>
    
    <simple-method method-name="openInvoiceReport" short-description="Show the invoices which are not fully applied">
        
        <entity-one entity-name="PartyAcctgPreference" value-name="partyAcctgPreference" auto-field-map="false" use-cache="true">
            <field-map field-name="partyId" env-name="parameters.userLogin.partyId"/>
        </entity-one>
        <set field="searchPrefix" from-field="partyAcctgPreference.invoiceIdPrefix"/>
        <string-append field-name="searchPrefix" string="%"/>
        <entity-condition entity-name="Invoice" list-name="invoices">
            <condition-list combine="and">
                <condition-expr field-name="invoiceId" operator="like" value="${searchPrefix}"/>
                <condition-expr field-name="statusId" operator="not-equals" value="INVOICE_CANCELLED"/>
                <condition-expr field-name="statusId" operator="not-equals" value="INVOICE_PAID"/>
            </condition-list>            
            <order-by field-name="invoiceDate"/>
        </entity-condition>
        
        <if-empty field-name="invoices">
            <log level="always" message="==== could not find an invoice...."/>
        </if-empty>
        
        <iterate entry-name="invoice" list-name="invoices">
            <set field="appliedAmount" value="${bsh:org.ofbiz.accounting.invoice.InvoiceWorker.getInvoiceAppliedBd(invoice)}"/>
            <set field="invoiceAmount" value="${bsh:org.ofbiz.accounting.invoice.InvoiceWorker.getInvoiceTotalBd(invoice)}"/>
            <if-compare-field field-name="appliedAmount" operator="not-equals" to-field-name="invoiceAmount">
                <field-to-list field-name="invoice" list-name="openInvoices"/>
            </if-compare-field>
            <calculate field-name="count">
                <number value="1"/>
                <calcop operator="get" field-name="count"/>
            </calculate>
            <if-compare field-name="count" value="100" operator="equals">
                <field-to-result field-name="openInvoices"/>
                <return/>
            </if-compare>
        </iterate>
        <field-to-result field-name="openInvoices"/>
    </simple-method>
    
    <simple-method method-name="openPaymentReport" short-description="Show the payments which are not fully applied">
        
        <entity-one entity-name="PartyAcctgPreference" value-name="partyAcctgPreference" auto-field-map="false" use-cache="true">
            <field-map field-name="partyId" env-name="parameters.userLogin.partyId"/>
        </entity-one>
        <set field="searchPrefix" from-field="partyAcctgPreference.invoiceIdPrefix"/>
        <string-append field-name="searchPrefix" string="%"/>
        <entity-condition entity-name="Payment" list-name="payments">
            <condition-list combine="and">
                <condition-expr field-name="paymentId" operator="like" value="${searchPrefix}"/>
                <condition-expr field-name="statusId" operator="not-equals" value="PMNT_CANCELLED"/>
                <condition-expr field-name="statusId" operator="not-equals" value="PMNT_PAID"/>
            </condition-list>            
            <order-by field-name="effectiveDate"/>
        </entity-condition>
        
        <if-empty field-name="payments">
            <log level="always" message="==== could not find a payment...."/>
        </if-empty>
        
        <iterate entry-name="payment" list-name="payments">
            <set field="appliedAmount" value="${bsh:org.ofbiz.accounting.payment.PaymentWorker.getPaymentAppliedBd(payment)}"/>
            <if-compare field-name="appliedAmount" operator="not-equals" value="${payment.amount}">
                <field-to-list field-name="payment" list-name="openPayments"/>
            </if-compare>
            <calculate field-name="count">
                <number value="1"/>
                <calcop operator="get" field-name="count"/>
            </calculate>
            <if-compare field-name="count" value="100" operator="equals">
                <field-to-result field-name="openPayments"/>
                <return/>
            </if-compare>
        </iterate>
        <field-to-result field-name="openPayments"/>
    </simple-method>
</simple-methods>