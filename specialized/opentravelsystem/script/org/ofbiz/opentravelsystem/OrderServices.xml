<?xml version="1.0" encoding="UTF-8" ?>
<!--
 * Copyright (c) 2001-2005 The Open For Business Project and repective authors.
 * Permission is hereby granted, free of charge, to any person obtaining a
 *  copy of this software and associated documentation files (the "Software"),
 *  to deal in the Software without restriction, including without limitation
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense,
 *  and/or sell copies of the Software, and to permit persons to whom the
 *  Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 *  in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @author <a href="mailto:support@opentravelsystem.org">Hans Bakker</a>
 * @version 1.0
 -->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xsi:noNamespaceSchemaLocation="http://www.ofbiz.org/dtds/simple-methods.xsd">

    <!-- ================================================================ -->
    <!-- Opentravelsystem Order Services -->
    <!-- ================================================================ -->
    
    <simple-method method-name="createOrderHeader" short-description="--Add a OrderHeader with the invoice prefix--">
        <entity-one entity-name="PartyAcctgPreference" value-name="partyAcctgPreference" auto-field-map="false" use-cache="true">
            <field-map field-name="partyId" env-name="parameters.userLogin.partyId"/>
        </entity-one>
        <if-not-empty field-name="partyAcctgPreference">
            <check-permission permission="OPENTRAVELSYSTEM" action="_RW">
                <alt-permission permission="${parameters.userLogin.partyId}" action="_RW"/>
                <fail-message message="Security Error: to update you need RW access to &quot;${parameters.partyId}&quot; in the &quot;OPENTRAVELSYSTEM&quot;"/>
            </check-permission>        
            <check-errors/>
            
            <!-- create id using the invoice prefix -->
            <sequenced-id-to-env sequence-name="${partyAcctgPreference.invoiceIdPrefix}OrderHeader" env-name="nextOrderId"/>
            <set field="parameters.orderId" value="${partyAcctgPreference.invoiceIdPrefix}${nextOrderId}"/>
            <else><!-- customer enters an order, take prefix of company to pay from the productstore -->
                <call-class-method class-name="org.ofbiz.product.store.ProductStoreWorker" method-name="getProductStore" ret-field-name="productStore">
                    <field field-name="request" type="javax.servlet.ServletRequest"/>
                </call-class-method>
                <entity-one entity-name="PartyAcctgPreference" value-name="partyAcctgPreference" auto-field-map="false" use-cache="true">
                    <field-map field-name="partyId" env-name="productStore.payToPartyId"/>
                </entity-one>
                <!-- create id using the invoice prefix -->
                <if-not-empty field-name="partyAcctgPreference.invoiceIdPrefix">
                    <sequenced-id-to-env sequence-name="${partyAcctgPreference.invoiceIdPrefix}OrderHeader" env-name="nextOrderId"/>
                    <set field="parameters.orderId" value="${partyAcctgPreference.invoiceIdPrefix}${nextOrderId}"/>
                    <else><!-- if company not known use normal sequencing -->
                        <sequenced-id-to-env sequence-name="OrderHeader" env-name="parameters.orderId"/>
                    </else>
                </if-not-empty>
            </else>
        </if-not-empty>
        <log level="always" message="!!!!!!!!!! orderid: ${parameters.orderId}"></log>
        <!-- call original ofbiz service with preset OrderHeaderId -->
        <set-service-fields service-name="createOrderHeaderOfbiz" map-name="parameters" to-map-name="createOrderHeader"/>
        <call-service service-name="createOrderHeaderOfbiz" in-map-name="createOrderHeader">
            <result-to-result result-name="orderId" service-result-name="orderId"/>
        </call-service>
        
    </simple-method>
    

</simple-methods>