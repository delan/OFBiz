<?xml version="1.0"?>
<!--
 *  Copyright (c) 2001 The Open For Business Project and respected authors.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a
 *  copy of this software and associated documentation files (the "Software"),
 *  to deal in the Software without restriction, including without limitation
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense,
 *  and/or sell copies of the Software, and to permit persons to whom the
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *  This is the Open for Business Base Build Script.
 *  $Id: build.xml,v 1.9 2003/10/29 21:21:58 ajzeneski Exp $
-->

<project name="OFBiz - Base" default="jar" basedir=".">

    <!-- ================================================================== -->
    <!-- Initialization of all property settings                            -->
    <!-- ================================================================== -->

    <target name="init">                
        <property environment="env"/>
        <property name="name" value="ofbiz-base"/>
        <property name="src.dir" value="src"/>
        <property name="dtd.dir" value="dtd"/>
        <property name="lib.dir" value="lib"/>
        <property name="build.dir" value="build"/>        
    </target>
    
    <target name="classpath">		        
        <path id="local.class.path">
            <fileset dir="${lib.dir}" includes="*.jar"/>
            <fileset dir="${lib.dir}/jetty" includes="*.jar"/>
            <fileset dir="${lib.dir}/logging" includes="*.jar"/>
            <fileset dir="${lib.dir}/scripting" includes="*.jar"/>
        </path>
        <available classname="javax.crypto.Cipher" classpathref="local.class.path" property="crypto.avail"/>   
    </target>
    
    <!-- ================================================================== -->
    <!-- Removes all created files and directories                          -->
    <!-- ================================================================== -->

    <target name="clean" depends="clean-lib">
        <delete dir="${build.dir}"/>        
        <delete dir="${doc.dir}/api"/>
    </target>

    <target name="clean-lib" depends="init">
        <delete dir="${build.dir}/lib"/>        
    </target>
    
    <!-- ================================================================== -->
    <!-- Makes sure the needed directory structure is in place              -->
    <!-- ================================================================== -->

    <target name="prepare" depends="clean-lib">
        <mkdir dir="${build.dir}/classes"/>
        <mkdir dir="${build.dir}/classes/base/META-INF"/>
        <mkdir dir="${build.dir}/classes/start/META-INF"/>        
        <mkdir dir="${build.dir}/lib"/>
    </target>
    
    <target name="prepare-docs" depends="init">
        <mkdir dir="${build.dir}/javadocs"/>        
    </target>
    
    <!-- ================================================================== -->
    <!-- Compilation of the source files                                                                                                                         -->
    <!-- ================================================================== -->               

    <target name="classes" depends="prepare,classpath">        
    	<javac debug="on" deprecation="on" destdir="${build.dir}/classes/start">            
            <src path="${src.dir}/start"/>
        </javac>
        <copy todir="${build.dir}/classes/start">
          <fileset dir="${src.dir}/start" includes="**/*.properties,**/*.xml,**/*.bsh,**/*.logic,**/*.js,**/*.jacl,**/*.py"/>
        </copy>
                
        <condition property="exclude.crypto" value="org/ofbiz/base/crypto/**">
            <isfalse value="${crypto.avail}"/>
        </condition>
    	<javac debug="on" deprecation="on" destdir="${build.dir}/classes/base">
            <classpath>
                <path refid="local.class.path"/>
                <pathelement path="${build.dir}/classes/start"/>
            </classpath>
            <src path="${src.dir}/base"/>
            <exclude name="${exclude.crypto}"/>
        </javac>
        <!-- also put the DTDs in the jar file... -->
        <copy todir="${build.dir}/classes/base">
            <fileset dir="${dtd.dir}" includes="*.dtd"/>
            <fileset dir="${src.dir}/base" includes="**/*.properties,**/*.xml,**/*.bsh,**/*.logic,**/*.js,**/*.jacl,**/*.py"/>
        </copy>        
    </target>
    
    <target name="jar" depends="classes">
        <jar jarfile="${build.dir}/lib/ofbiz.jar" basedir="${build.dir}/classes/start" manifest="${src.dir}/start/org/ofbiz/base/start/Start.mf"/>
        <jar jarfile="${build.dir}/lib/ofbiz-base.jar" basedir="${build.dir}/classes/base"/>         
    </target>    
    
    <!-- ================================================================== -->
    <!-- Build JavaDoc                                                      -->
    <!-- ================================================================== -->

    <target name="docs" depends="prepare-docs,classpath">
        <javadoc packagenames="org.ofbiz.base.*" 
                 classpathref="local.class.path"
                 destdir="${build.dir}/javadocs" 
                 Windowtitle="Open for Business - Base API">
            <sourcepath path="${src.dir}/start"/>
            <sourcepath path="${src.dir}/base"/>            
        </javadoc>
    </target>
    
    <target name="all" depends="jar,docs"/>   
</project>
