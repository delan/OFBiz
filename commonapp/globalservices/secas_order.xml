<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE service-eca PUBLIC "-//OFBiz//DTD Service ECA Config//EN" "http://www.ofbiz.org/dtds/service-eca.dtd">

<service-eca>
	<!-- Order ECAs -->
	<eca service="storeOrder" event="commit">
		<action service="processOrder" mode="async" persist="true"/>
	</eca>
	
    <eca service="changeOrderItemStatus" event="commit">
        <condition field-name="statusId" operator="equals" value="ITEM_CANCELLED"/>
        <action service="cancelOrderInventoryReservation" mode="sync"/>
        <action service="resetGrandTotal" mode="sync"/>
        <action service="checkOrderItemStatus" mode="sync"/>
        <action service="sendOrderChangeNotification" mode="async"/>        
    </eca>
    <eca service="changeOrderItemStatus" event="commit">
        <condition field-name="statusId" operator="equals" value="ITEM_COMPLETED"/>
        <action service="checkOrderItemStatus" mode="sync"/>
    </eca>          
    <eca service="changeOrderStatus" event="commit" run-on-error="false">
        <condition field-name="statusId" operator="equals" value="ORDER_COMPLETED"/>                
        <action service="sendOrderCompleteNotification" mode="async"/>
    </eca>
    <eca service="createOrderAdjustment" event="commit">        
        <action service="resetGrandTotal" mode="sync"/>
    </eca> 
    
    <!-- order confirmation/notification email ECAs -->
    <eca service="sendOrderConfirmation" event="in-validate">
    	<action service="prepareOrderConfirmation" mode="sync" result-to-context="true"/>
    	<action service="prepareOrderEmailData" mode="sync" result-to-context="false" result-map-name="templateData"/>        
    </eca>
    <eca service="sendOrderConfirmation" event="commit">
    	<action service="createOrderNotificationLog" mode="sync"/>
    </eca>
    <eca service="sendOrderChangeNotification" event="in-validate">
    	<action service="prepareOrderChange" mode="sync" result-to-context="true"/>
    	<action service="prepareOrderEmailData" mode="sync" result-to-context="false" result-map-name="templateData"/>        
    </eca>
    <eca service="sendOrderChangeNotification" event="commit">
    	<action service="createOrderNotificationLog" mode="sync"/>
    </eca>
    <eca service="sendOrderCompleteNotification" event="in-validate">
    	<action service="prepareOrderComplete" mode="sync" result-to-context="true"/>
    	<action service="prepareOrderEmailData" mode="sync" result-to-context="false" result-map-name="templateData"/>        
    </eca>
    <eca service="sendOrderCompleteNotification" event="commit">
    	<action service="createOrderNotificationLog" mode="sync"/>
    </eca>
    <eca service="sendOrderBackorderNotification" event="in-validate">
    	<action service="prepareOrderBackorder" mode="sync" result-to-context="true"/>
    	<action service="prepareOrderEmailData" mode="sync" result-to-context="false" result-map-name="templateData"/>        
    </eca>
    <eca service="sendOrderBackorderNotification" event="commit">
    	<action service="createOrderNotificationLog" mode="sync"/>
    </eca>        
    
	<!-- Order Delivery Schedule ECAs -->
    <eca service="createOrderDeliverySchedule" event="commit">
    	<action service="sendOrderDeliveryScheduleNotification" mode="async"/>
    </eca>        
    <eca service="updateOrderDeliverySchedule" event="commit">
    	<action service="sendOrderDeliveryScheduleNotification" mode="async"/>
    </eca>        

    <!-- Return ECAs -->
    <eca service="updateReturnStatusFromReceipt" event="commit">
        <condition field-name="returnHeaderStatus" operator="equals" value="RETURN_RECEIVED"/>        
        <action service="processCreditReturn" mode="async"/>
        <action service="processRefundReturn" mode="async"/>
    </eca>
    
    <!-- ShoppingList ECAs --> 
    <eca service="createShoppingListItem" event="in-validate">
        <condition field-name="shoppingListId" operator="is-empty"/>
        <action service="createShoppingList" mode="sync" result-to-context="true"/>
    </eca>
    
    <!-- Requirement / CustRequestItem association event -->
    <eca service="createRequirement" event="commit">
    	<condition field-name="custRequestId" operator="is-not-empty"/>
    	<condition field-name="custRequestItemSeqId" operator="is-not-empty"/>
    	<action service="associatedRequirementWithRequestItem" mode="sync"/>
    </eca>
</service-eca>
