<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE simple-methods PUBLIC "-//OFBiz//DTD Simple Methods//EN" "http://www.ofbiz.org/dtds/simple-methods.dtd">

<!--
 * <p><b>Title:</b> ContactMechSimpleEvents
 * <p><b>Description:</b> Events to handle form input and other data changes
 * <p>Copyright (c) 2001 The Open For Business Project and repected authors.
 * <p>Permission is hereby granted, free of charge, to any person obtaining a
 *  copy of this software and associated documentation files (the "Software"),
 *  to deal in the Software without restriction, including without limitation
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense,
 *  and/or sell copies of the Software, and to permit persons to whom the
 *  Software is furnished to do so, subject to the following conditions:
 *
 * <p>The above copyright notice and this permission notice shall be included
 *  in all copies or substantial portions of the Software.
 *
 * <p>THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @author <a href="mailto:jonesde@ofbiz.org">David E. Jones</a>
 * @version 1.0
 * Created on January 18, 2001
 -->
<simple-methods>
    <simple-method method-name="deletePaymentMethod" short-description="Delete Payment Method">
        <call-map-processor xml-resource="org/ofbiz/commonapp/accounting/payment/PaymentMapProcs.xml"
                processor-name="deletePaymentMethod" in-map-name="parameters" out-map-name="context"/>
        <check-errors/>
        <call-service service-name="deletePaymentMethod" in-map-name="context">
            <default-message>Payment Method successfully deleted.</default-message></call-service>
    </simple-method>

    <!-- CreditCard events -->
    <simple-method method-name="createCreditCard" short-description="Create Credit Card">
        <call-map-processor xml-resource="org/ofbiz/commonapp/accounting/payment/PaymentMapProcs.xml"
                processor-name="createCreditCard" in-map-name="parameters" out-map-name="context"/>
        <check-errors/>
        <call-service service-name="createCreditCard" in-map-name="context">
            <default-message>Credit Card successfully created.</default-message>
            <result-to-request result-name="paymentMethodId"/>
        </call-service>
        <if-compare map-name="parameters" field-name="contactMechId" operator="equals" value="_NEW_">
            <string-to-field string="address" field-name="_response_code_"/>
            <string-to-field string="POSTAL_ADDRESS" field-name="preContactMechTypeId"/>
            <string-to-field string="BILLING_LOCATION" field-name="contactMechPurposeTypeId"/>
            <field-to-request field-name="DONE_PAGE"/>
            <field-to-request field-name="preContactMechTypeId"/>
            <field-to-request field-name="contactMechPurposeTypeId"/>
        </if-compare>

    </simple-method>
    <simple-method method-name="updateCreditCard" short-description="Update Credit Card">
        <call-map-processor xml-resource="org/ofbiz/commonapp/accounting/payment/PaymentMapProcs.xml"
                processor-name="updateCreditCard" in-map-name="parameters" out-map-name="context"/>
        <!-- before check-errors also call createCreditCard, which completes the checking, etc for updateCreditCard -->
        <call-map-processor xml-resource="org/ofbiz/commonapp/accounting/payment/PaymentMapProcs.xml"
                processor-name="createCreditCard" in-map-name="parameters" out-map-name="context"/>
        <check-errors/>
        <call-service service-name="updateCreditCard" in-map-name="context">
            <default-message>Credit Card Info successfully updated.</default-message>
            <result-to-request result-name="newPaymentMethodId" request-name="paymentMethodId"/>
        </call-service>
        <if-compare map-name="parameters" field-name="contactMechId" operator="equals" value="_NEW_">
            <string-to-field string="address" field-name="_response_code_"/>
            <string-to-field string="POSTAL_ADDRESS" field-name="preContactMechTypeId"/>
            <string-to-field string="BILLING_LOCATION" field-name="contactMechPurposeTypeId"/>
            <field-to-request field-name="DONE_PAGE"/>
            <field-to-request field-name="preContactMechTypeId"/>
            <field-to-request field-name="contactMechPurposeTypeId"/>
        </if-compare>
    </simple-method>

    <!-- EftAccount events -->
    <simple-method method-name="createEftAccount" short-description="Create EFT Account">
        <call-map-processor xml-resource="org/ofbiz/commonapp/accounting/payment/PaymentMapProcs.xml"
                processor-name="createEftAccount" in-map-name="parameters" out-map-name="context"/>
        <check-errors/>
        <call-service service-name="createEftAccount" in-map-name="context">
            <default-message>EFT Account successfully created.</default-message>
            <result-to-request result-name="paymentMethodId"/></call-service>
    </simple-method>
    <simple-method method-name="updateEftAccount" short-description="Update EFT Account">
        <call-map-processor xml-resource="org/ofbiz/commonapp/accounting/payment/PaymentMapProcs.xml"
                processor-name="updateEftAccount" in-map-name="parameters" out-map-name="context"/>
        <!-- before check-errors also call createEftAccount, which completes the checking, etc for updateEftAccount -->
        <call-map-processor xml-resource="org/ofbiz/commonapp/accounting/payment/PaymentMapProcs.xml"
                processor-name="createEftAccount" in-map-name="parameters" out-map-name="context"/>
        <check-errors/>
        <call-service service-name="updateEftAccount" in-map-name="context">
            <default-message>EFT Account Info successfully updated.</default-message>
            <result-to-request result-name="newPaymentMethodId" request-name="paymentMethodId"/></call-service>
    </simple-method>

    <simple-method method-name="captureAll" short-description="Capture Payments for Orders" login-required="false">
        <field-to-field field-name="orderStatusId" map-name="parameters" to-map-name="orderLookup" />
        <field-to-field field-name="currency" map-name="parameters" to-map-name="captureParams" />
        <string-to-field string="PAYMENT_AUTHORIZED" field-name="paymentStatusId" map-name="orderLookup" />
        <find-by-and entity-name="OrderHeaderAndPaymentPref" map-name="orderLookup" list-name="orderHeaderAndPaymentPrefs" />
        <iterate entry-name="orderHeaderAndPaymentPref" list-name="orderHeaderAndPaymentPrefs" >
            <field-to-field map-name="orderHeaderAndPaymentPref" field-name="orderId" to-map-name="captureParams" />
            <call-service service-name="capturePayment" in-map-name="captureParams" error-code="ignore-error">
                <result-to-field map-name="captureResult" result-name="responseMessage" />
            </call-service>
            <if-compare map-name="captureResult" operator="equals" field-name="responseMessage" value="error">
                <field-to-list map-name="orderHeaderAndPaymentPref" field-name="orderId" list-name="badOrders" />
            </if-compare>
        </iterate>
        <if-not-empty field-name="badOrders">
            <string-to-field string="mail.smtp.host" field-name="sendType" map-name="emailParams" />

            <call-bsh><![CDATA[
            emailParams.put("sendVia", org.ofbiz.core.util.UtilProperties.getPropertyValue("payment.properties", "mailhost"));
            ]]></call-bsh>
            <call-bsh><![CDATA[
            emailParams.put("sendTo", org.ofbiz.core.util.UtilProperties.getPropertyValue("payment.properties", "sendTo"));
            ]]></call-bsh>  
            <call-bsh><![CDATA[
            emailParams.put("sendFrom", org.ofbiz.core.util.UtilProperties.getPropertyValue("payment.properties", "sendFrom"));
            ]]></call-bsh> 
            <call-bsh><![CDATA[
            emailParams.put("subject", org.ofbiz.core.util.UtilProperties.getPropertyValue("payment.properties", "subject"));        
            ]]></call-bsh>               
            <call-bsh><![CDATA[
            String body = "Bad orders: " + org.ofbiz.core.Util.StringUtils.join(badOrders, ", ");
            emailParams.put("body", body);
            ]]></call-bsh>   
            <call-service service-name="sendMail" in-map-name="emailParams"/>
        </if-not-empty>       
     </simple-method>        
            
    <simple-method method-name="setPaymentMethodAddress" short-description="Set the initial payment method address">
        <make-value value-name="lookupPKMap" entity-name="PaymentMethod"/>
        <set-pk-fields map-name="parameters" value-name="lookupPKMap"/>
        <find-by-primary-key entity-name="PaymentMethod" map-name="lookupPKMap" value-name="lookedUpValue"/>
        <if-compare map-name="lookedUpValue" field-name="paymentMethodTypeId" operator="equals" value="CREDIT_CARD">
            <find-by-primary-key entity-name="CreditCard" map-name="lookupPKMap" value-name="mainValue"/>
            <clone-value value-name="mainValue" new-value-name="savedValue"/>
            <set-nonpk-fields map-name="parameters" value-name="mainValue"/>
            <if-compare-field field-name="mainValue" operator="not-equals" to-field-name="savedValue" type="Object">
                <store-value value-name="mainValue"/>
            </if-compare-field>
        </if-compare>
        <if-compare map-name="lookedUpValue" field-name="paymentMethodTypeId" operator="equals" value="EFT_ACCOUNT">
            <find-by-primary-key entity-name="CreditCard" map-name="lookupPKMap" value-name="mainValue"/>
            <clone-value value-name="mainValue" new-value-name="savedValue"/>
            <set-nonpk-fields map-name="parameters" value-name="mainValue"/>
            <if-compare-field field-name="mainValue" operator="not-equals" to-field-name="savedValue" type="Object">
                <store-value value-name="mainValue"/>
            </if-compare-field>
        </if-compare>
    </simple-method>

</simple-methods>
