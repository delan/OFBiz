<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE simple-methods PUBLIC "-//OFBiz//DTD Simple Methods//EN" "http://www.ofbiz.org/dtds/simple-methods.dtd">

<!--
 * Copyright (c) 2001 The Open For Business Project and repective authors.
 * Permission is hereby granted, free of charge, to any person obtaining a
 *  copy of this software and associated documentation files (the "Software"),
 *  to deal in the Software without restriction, including without limitation
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense,
 *  and/or sell copies of the Software, and to permit persons to whom the
 *  Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 *  in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @author <a href="mailto:jonesde@ofbiz.org">David E. Jones</a>
 * @version 1.0
 * Created on April 2, 2002
 -->
<simple-methods>

    <!-- ================================================================ -->
    <!-- ProductCategory Services -->
    <!-- ================================================================ -->
    
    <simple-method method-name="createProductCategory" short-description="Create an ProductCategory">
        <check-permission permission="CATALOG" action="_CREATE"><fail-message message="Security Error: to run createProductCategory you must have the CATALOG_CREATE or CATALOG_ADMIN permission"/></check-permission>
        <check-errors/>

        <make-value value-name="newEntity" entity-name="ProductCategory"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        
        <create-value value-name="newEntity"/>

        <!-- if setting the primaryParentCategoryId, create a rollup entity too -->
        <!-- NOTE: this is commented out to disable because it is dangerous to add category rollups on a live site without being able to specify a fromDate
        <if-not-empty field-name="primaryParentCategoryId" map-name="newEntity">
            <make-value entity-name="ProductCategoryRollup" value-name="newRollup"/>
            <field-to-field field-name="productCategoryId" map-name="newEntity" to-field-name="productCategoryId" to-map-name="newRollup"/>
            <field-to-field field-name="primaryParentCategoryId" map-name="newEntity" to-field-name="parentProductCategoryId" to-map-name="newRollup"/>
            <now-timestamp-to-env env-name="nowStamp"/>
            <env-to-field env-name="nowStamp" field-name="fromDate" map-name="newRollup"/>
            <create-value value-name="newRollup"/>
            
            <field-to-field field-name="parentProductCategoryId" map-name="newRollup" to-map-name="cacheClearMap"/>
            <clear-cache-line entity-name="ProductCategoryRollup" map-name="cacheClearMap"/>
        </if-not-empty>
        -->
    </simple-method>
    <simple-method method-name="updateProductCategory" short-description="Update an ProductCategory">
        <check-permission permission="CATALOG" action="_UPDATE"><fail-message message="Security Error: to run updateProductCategory you must have the CATALOG_UPDATE or CATALOG_ADMIN permission"/></check-permission>
        <check-errors/>

        <field-to-field field-name="productCategoryId" map-name="parameters" to-map-name="lookupPKMap"/>
        <find-by-primary-key entity-name="ProductCategory" map-name="lookupPKMap" value-name="lookedUpValue"/>
        <!-- save this value before overwriting it so we can compare it later -->
        <field-to-field field-name="primaryParentCategoryId" map-name="lookedUpValue" to-map-name="saveIdMap"/>
        <set-nonpk-fields map-name="parameters" value-name="lookedUpValue"/>
        <store-value value-name="lookedUpValue"/>

        <!-- if setting the primaryParentCategoryId, create a rollup entity too -->
        <!-- NOTE: this is commented out to disable because it is dangerous to add category rollups on a live site without being able to specify a fromDate
        <if-not-empty field-name="primaryParentCategoryId" map-name="lookedUpValue">
            <if-compare-field field-name="primaryParentCategoryId" map-name="lookedUpValue" operator="equals" to-map-name="saveIdMap">
                <make-value entity-name="ProductCategoryRollup" value-name="newRollup"/>
                <field-to-field field-name="productCategoryId" map-name="lookedUpValue" to-field-name="productCategoryId" to-map-name="newRollup"/>
                <field-to-field field-name="primaryParentCategoryId" map-name="lookedUpValue" to-field-name="parentProductCategoryId" to-map-name="newRollup"/>
                <now-timestamp-to-env env-name="nowStamp"/>
                <env-to-field env-name="nowStamp" field-name="fromDate" map-name="newRollup"/>
                <create-value value-name="newRollup"/>

                <field-to-field field-name="parentProductCategoryId" map-name="newRollup" to-map-name="cacheClearMap"/>
                <clear-cache-line entity-name="ProductCategoryRollup" map-name="cacheClearMap"/>
            </if-compare-field>
        </if-not-empty>
        -->
    </simple-method>

    <!-- ================================================================ -->
    <!-- ProductCategoryMember Services -->
    <!-- ================================================================ -->
    
    <simple-method method-name="addProductToCategory" short-description="Add Product to Category">
        <check-permission permission="CATALOG" action="_CREATE"><fail-message message="Security Error: to run addProductToCategory you must have the CATALOG_CREATE or CATALOG_ADMIN permission"/></check-permission>
        <check-errors/>

        <make-value value-name="newEntity" entity-name="ProductCategoryMember"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        
        <if-empty field-name="fromDate" map-name="newEntity">
            <now-timestamp-to-env env-name="nowTimestamp"/>
            <env-to-field env-name="nowTimestamp" field-name="fromDate" map-name="newEntity"/>
        </if-empty>
        
        <create-value value-name="newEntity"/>
        
        <!-- this is for the ecommerce cache of products in a category, findByAnd -->
        <field-to-field field-name="productCategoryId" map-name="parameters" to-map-name="cacheClearMap"/>
        <clear-cache-line entity-name="ProductCategoryMember" map-name="cacheClearMap"/>
    </simple-method>
    <simple-method method-name="updateProductToCategory" short-description="Update Product to Category Application">
        <check-permission permission="CATALOG" action="_UPDATE"><fail-message message="Security Error: to run updateProductToCategory you must have the CATALOG_UPDATE or CATALOG_ADMIN permission"/></check-permission>
        <check-errors/>

        <make-value value-name="lookupPKMap" entity-name="ProductCategoryMember"/>
        <set-pk-fields map-name="parameters" value-name="lookupPKMap"/>
        <find-by-primary-key entity-name="ProductCategoryMember" map-name="lookupPKMap" value-name="lookedUpValue"/>
        <set-nonpk-fields map-name="parameters" value-name="lookedUpValue"/>
        <store-value value-name="lookedUpValue"/>
        
        <!-- this is for the ecommerce cache of products in a category, findByAnd -->
        <field-to-field field-name="productCategoryId" map-name="parameters" to-map-name="cacheClearMap"/>
        <clear-cache-line entity-name="ProductCategoryMember" map-name="cacheClearMap"/>
    </simple-method>
    <simple-method method-name="removeProductFromCategory" short-description="Remove Product From Category">
        <check-permission permission="CATALOG" action="_DELETE"><fail-message message="Security Error: to run removeProductFromCategory you must have the CATALOG_DELETE or CATALOG_ADMIN permission"/></check-permission>
        <check-errors/>

        <make-value value-name="lookupPKMap" entity-name="ProductCategoryMember"/>
        <set-pk-fields map-name="parameters" value-name="lookupPKMap"/>
        <find-by-primary-key entity-name="ProductCategoryMember" map-name="lookupPKMap" value-name="lookedUpValue"/>
        <remove-value value-name="lookedUpValue"/>
        
        <!-- this is for the ecommerce cache of products in a category, findByAnd -->
        <field-to-field field-name="productCategoryId" map-name="parameters" to-map-name="cacheClearMap"/>
        <clear-cache-line entity-name="ProductCategoryMember" map-name="cacheClearMap"/>
    </simple-method>

    <!-- ================================================================ -->
    <!-- ProductCategoryRollup Services -->
    <!-- ================================================================ -->
    
    <simple-method method-name="addProductCategoryToCategory" short-description="Add ProductCategory to Category">
        <check-permission permission="CATALOG" action="_CREATE"><fail-message message="Security Error: to run addProductCategoryToCategory you must have the CATALOG_CREATE or CATALOG_ADMIN permission"/></check-permission>
        <check-errors/>

        <make-value value-name="newEntity" entity-name="ProductCategoryRollup"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        
        <if-empty field-name="fromDate" map-name="newEntity">
            <now-timestamp-to-env env-name="nowTimestamp"/>
            <env-to-field env-name="nowTimestamp" field-name="fromDate" map-name="newEntity"/>
        </if-empty>
        
        <create-value value-name="newEntity"/>
        
        <!-- this is for the ecommerce cache of category in a parent category, findByAnd -->
        <field-to-field field-name="parentProductCategoryId" map-name="parameters" to-map-name="cacheClearMap"/>
        <clear-cache-line entity-name="ProductCategoryRollup" map-name="cacheClearMap"/>
    </simple-method>
    <simple-method method-name="updateProductCategoryToCategory" short-description="Update ProductCategory to Category Application">
        <check-permission permission="CATALOG" action="_UPDATE"><fail-message message="Security Error: to run updateProducCategorytToCategory you must have the CATALOG_UPDATE or CATALOG_ADMIN permission"/></check-permission>
        <check-errors/>

        <make-value value-name="lookupPKMap" entity-name="ProductCategoryRollup"/>
        <set-pk-fields map-name="parameters" value-name="lookupPKMap"/>
        <find-by-primary-key entity-name="ProductCategoryRollup" map-name="lookupPKMap" value-name="lookedUpValue"/>
        <set-nonpk-fields map-name="parameters" value-name="lookedUpValue"/>
        <store-value value-name="lookedUpValue"/>
        
        <!-- this is for the ecommerce cache of category in a parent category, findByAnd -->
        <field-to-field field-name="parentProductCategoryId" map-name="parameters" to-map-name="cacheClearMap"/>
        <clear-cache-line entity-name="ProductCategoryRollup" map-name="cacheClearMap"/>
    </simple-method>
    <simple-method method-name="removeProductCategoryFromCategory" short-description="Remove ProductCategory From Category">
        <check-permission permission="CATALOG" action="_DELETE"><fail-message message="Security Error: to run removeProductCategoryFromCategory you must have the CATALOG_DELETE or CATALOG_ADMIN permission"/></check-permission>
        <check-errors/>

        <make-value value-name="lookupPKMap" entity-name="ProductCategoryRollup"/>
        <set-pk-fields map-name="parameters" value-name="lookupPKMap"/>
        <find-by-primary-key entity-name="ProductCategoryRollup" map-name="lookupPKMap" value-name="lookedUpValue"/>
        <remove-value value-name="lookedUpValue"/>
        
        <!-- this is for the ecommerce cache of category in a parent category, findByAnd -->
        <field-to-field field-name="parentProductCategoryId" map-name="parameters" to-map-name="cacheClearMap"/>
        <clear-cache-line entity-name="ProductCategoryRollup" map-name="cacheClearMap"/>
    </simple-method>

    <!-- ================================================================ -->
    <!-- Special Category Function Services -->
    <!-- ================================================================ -->
    
    <simple-method method-name="copyCategoryProductMembers" short-description="Remove ProductCategory From Category">
        <check-permission permission="CATALOG" action="_CREATE"><fail-message message="Security Error: to run copyCategoryProductMembers you must have the CATALOG_CREATE or CATALOG_ADMIN permission"/></check-permission>
        <check-errors/>

        <field-to-field field-name="productCategoryId" map-name="parameters" to-map-name="lookupMap"/>
        <find-by-and entity-name="ProductCategoryMember" map-name="lookupMap" list-name="productCategoryMembers"/>

        <field-to-env field-name="validDate" map-name="parameters" env-name="validDate"/>
        <if-not-empty field-name="validDate">
            <filter-list-by-date list-name="productCategoryMembers" valid-date-name="validDate"/>
        </if-not-empty>
        
        <!-- add each to a list to store and then store all and let the entity engine do inserts or updates as needed; much more reliable/useful -->
        <iterate entry-name="productCategoryMember" list-name="productCategoryMembers">
            <clone-value value-name="productCategoryMember" new-value-name="newProductCategoryMember"/>
            <field-to-field field-name="productCategoryIdTo" map-name="parameters" to-field-name="productCategoryId" to-map-name="newProductCategoryMember"/>
            <field-to-list field-name="newProductCategoryMember" list-name="pcmsToStore"/>
        </iterate>
        <store-list list-name="pcmsToStore"/>

        <if-compare field-name="recurse" map-name="parameters" operator="equals" value="Y">
            <!-- call this service for each sub-category in the rollup with the same productCategoryIdTo -->
            <field-to-field field-name="productCategoryId" map-name="parameters" to-field-name="parentProductCategoryId" to-map-name="lookupChildrenMap"/>
            <find-by-and entity-name="ProductCategoryRollup" map-name="lookupChildrenMap" list-name="productCategoryRollups"/>

            <if-not-empty field-name="validDate">
                <filter-list-by-date list-name="productCategoryRollups" valid-date-name="validDate"/>
            </if-not-empty>

            <iterate entry-name="productCategoryRollup" list-name="productCategoryRollups">
                <field-to-field field-name="productCategoryId" map-name="productCategoryRollup" to-map-name="callServiceMap"/>
                <field-to-field field-name="productCategoryIdTo" map-name="parameters" to-map-name="callServiceMap"/>
                <field-to-field field-name="validDate" map-name="parameters" to-map-name="callServiceMap"/>
                <field-to-field field-name="recurse" map-name="parameters" to-map-name="callServiceMap"/>
                <call-service service-name="copyCategoryProductMembers" in-map-name="callServiceMap"/>
            </iterate>
        </if-compare>
                
        <!-- this is for the ecommerce cache of products in a category, findByAnd -->
        <field-to-field field-name="productCategoryIdTo" map-name="parameters" to-field-name="productCategoryId" to-map-name="cacheClearMap"/>
        <clear-cache-line entity-name="ProductCategoryMember" map-name="cacheClearMap"/>
    </simple-method>

    <simple-method method-name="expireAllCategoryProductMembers" short-description="Remove ProductCategory From Category">
        <check-permission permission="CATALOG" action="_UPDATE"><fail-message message="Security Error: to run expireAllCategoryProductMembers you must have the CATALOG_UPDATE or CATALOG_ADMIN permission"/></check-permission>
        <check-errors/>

        <if-not-empty field-name="thruDate" map-name="parameters">
            <field-to-env field-name="thruDate" map-name="parameters" env-name="expireTimestamp"/>
            <else>
                <now-timestamp-to-env env-name="expireTimestamp"/>
            </else>
        </if-not-empty>
        
        <field-to-field field-name="productCategoryId" map-name="parameters" to-map-name="lookupMap"/>
        <find-by-and entity-name="ProductCategoryMember" map-name="lookupMap" list-name="productCategoryMembers"/>
        
        <iterate entry-name="productCategoryMember" list-name="productCategoryMembers">
            <env-to-field env-name="expireTimestamp" field-name="thruDate" map-name="productCategoryMember"/>
            <store-value value-name="productCategoryMember"/>
        </iterate>
        
        <!-- this is for the ecommerce cache of products in a category, findByAnd -->
        <field-to-field field-name="productCategoryId" map-name="parameters" to-map-name="cacheClearMap"/>
        <clear-cache-line entity-name="ProductCategoryMember" map-name="cacheClearMap"/>
    </simple-method>
    <simple-method method-name="removeExpiredCategoryProductMembers" short-description="Remove ProductCategory From Category">
        <check-permission permission="CATALOG" action="_DELETE"><fail-message message="Security Error: to run removeExpiredCategoryProductMembers you must have the CATALOG_DELETE or CATALOG_ADMIN permission"/></check-permission>
        <check-errors/>

        <if-not-empty field-name="validDate" map-name="parameters">
            <field-to-env field-name="validDate" map-name="parameters" env-name="expireTimestamp"/>
            <else>
                <now-timestamp-to-env env-name="expireTimestamp"/>
            </else>
        </if-not-empty>
        
        <field-to-field field-name="productCategoryId" map-name="parameters" to-map-name="lookupMap"/>
        <find-by-and entity-name="ProductCategoryMember" map-name="lookupMap" list-name="productCategoryMembers"/>
        
        <iterate entry-name="productCategoryMember" list-name="productCategoryMembers">
            <if-compare-field field-name="thruDate" map-name="productCategoryMember" operator="less" to-field-name="expireTimestamp" type="Timestamp">
                <remove-value value-name="productCategoryMember"/>
            </if-compare-field>
        </iterate>
        
        <!-- this is for the ecommerce cache of products in a category, findByAnd -->
        <field-to-field field-name="productCategoryId" map-name="parameters" to-map-name="cacheClearMap"/>
        <clear-cache-line entity-name="ProductCategoryMember" map-name="cacheClearMap"/>
    </simple-method>
</simple-methods>
