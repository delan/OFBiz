<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE simple-methods PUBLIC "-//OFBiz//DTD Simple Methods//EN" "http://www.ofbiz.org/dtds/simple-methods.dtd">

<!--
 *  Copyright (c) 2002 The Open For Business Project - www.ofbiz.org
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a
 *  copy of this software and associated documentation files (the "Software"),
 *  to deal in the Software without restriction, including without limitation
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense,
 *  and/or sell copies of the Software, and to permit persons to whom the
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @author     Andy Zeneski (jaz@jflow.net)
 * @version    1.0
 * @created    July 31, 2002
-->

<simple-methods>
    <simple-method method-name="createCustRequest" short-description="Create Customer Request">
        <make-value value-name="newEntity" entity-name="CustRequest"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        
        <now-timestamp-to-env env-name="nowTimestamp"/>
        <env-to-field env-name="nowTimestamp" field-name="lastModifiedDate" map-name="newEntity"/>
        <env-to-field env-name="nowTimestamp" field-name="createdDate" map-name="newEntity"/>
        <field-to-field field-name="userLoginId" map-name="userLogin" to-field-name="lastModifiedByUserLogin" to-map-name="newEntity"/>
        <field-to-field field-name="userLoginId" map-name="userLogin" to-field-name="createdByUserLogin" to-map-name="newEntity"/>   
        
        <if-empty field-name="statusId" map-name="parameters">
        	<string-to-field string="CRQ_SUBMITTED" field-name="statusId" map-name="newEntity"/>
        </if-empty>

        <sequenced-id-to-env sequence-name="CustRequest" env-name="custRequestId"/>
        <to-string field-name="custRequestId"/>
        <env-to-field env-name="custRequestId" map-name="newEntity"/>
        <create-value value-name="newEntity"/>
        <field-to-result field-name="custRequestId" map-name="newEntity"/>

        <field-to-field field-name="custRequestId" map-name="newEntity" to-map-name="takerMap"/>
        <field-to-field field-name="partyId" map-name="userLogin" to-map-name="takerMap"/>
        <string-to-field string="REQ_TAKER" map-name="takerMap" field-name="roleTypeId"/>
        <call-service service-name="createCustRequestRole" in-map-name="takerMap"/>

        <field-to-field field-name="custRequestId" map-name="newEntity" to-map-name="requesterMap"/>
        <if-not-empty field-name="requestPartyId" map-name="parameters">
            <field-to-field field-name="requestPartyId" map-name="parameters" to-map-name="requesterMap" to-field-name="partyId"/>
          <else>
              <field-to-field field-name="partyId" map-name="userLogin" to-map-name="requesterMap"/>
            </else>
        </if-not-empty>
        <string-to-field string="REQ_REQUESTER" map-name="requesterMap" field-name="roleTypeId"/>
        <call-service service-name="createCustRequestRole" in-map-name="requesterMap"/>   
    </simple-method>
    <simple-method method-name="updateCustRequest" short-description="Update Customer Request">
        <field-to-field field-name="custRequestId" map-name="parameters" to-map-name="lookupPKMap"/>
        <find-by-primary-key entity-name="CustRequest" map-name="lookupPKMap" value-name="custRequest"/>
        <now-timestamp-to-env env-name="nowTimestamp"/>
        <env-to-field env-name="nowTimestamp" field-name="lastModifiedDate" map-name="custRequest"/>
        <field-to-field field-name="userLoginId" map-name="userLogin" to-field-name="lastModifiedByUserLogin" to-map-name="custRequest"/>
        <set-nonpk-fields map-name="parameters" value-name="custRequest"/>
        <store-value value-name="custRequest"/>
    </simple-method>

    <simple-method method-name="createCustRequestAttribute" short-description="Create Customer Request Attribute">
        <make-value value-name="newEntity" entity-name="CustRequestAttribute"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
    </simple-method>
    <simple-method method-name="updateCustRequestAttribute" short-description="Update Customer Request Attribute">
        <field-to-field field-name="custRequestId" map-name="parameters" to-map-name="lookupPKMap"/>
        <field-to-field field-name="attrName" map-name="parameters" to-map-name="lookupPKMap"/>
        <find-by-primary-key entity-name="CustRequestAttribute" map-name="lookupPKMap" value-name="custRequestAttr"/>
        <set-nonpk-fields map-name="parameters" value-name="custRequestAttr"/>
        <store-value value-name="custRequestAttr"/>
    </simple-method>

    <simple-method method-name="createCustRequestItem" short-description="Create Customer Request Item">
        <make-value value-name="newEntity" entity-name="CustRequestItem"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <if-empty field-name="statusId" map-name="parameters">
        	<string-to-field string="CRQ_SUBMITTED" field-name="statusId" map-name="newEntity"/>
        </if-empty>        
        <create-value value-name="newEntity"/>
    </simple-method>
    <simple-method method-name="updateCustRequestItem" short-description="Update Customer Request Item">
        <field-to-field field-name="custRequestId" map-name="parameters" to-map-name="lookupPKMap"/>
        <field-to-field field-name="custRequestItemSeqId" map-name="parameters" to-map-name="lookupPKMap"/>
        <find-by-primary-key entity-name="CustRequestItem" map-name="lookupPKMap" value-name="custRequestItem"/>
        <set-nonpk-fields map-name="parameters" value-name="custRequestItem"/>
        <store-value value-name="custRequestItem"/>
    </simple-method>

    <simple-method method-name="createCustRequestRole" short-description="Create Customer RequestRole">
        <field-to-field field-name="partyId" map-name="parameters" to-map-name="lookupPKMap"/>
        <field-to-field field-name="roleTypeId" map-name="parameters" to-map-name="lookupPKMap"/>
        <find-by-primary-key entity-name="PartyRole" map-name="lookupPKMap" value-name="partyRole"/>
        <if-empty map-name="partyRole" field-name="partyId">
            <make-value value-name="partyRole" entity-name="PartyRole"/>
            <set-pk-fields map-name="lookupPKMap" value-name="partyRole"/>
            <create-value value-name="partyRole"/>
        </if-empty>
        <make-value value-name="newEntity" entity-name="CustRequestRole"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
    </simple-method>
    <simple-method method-name="removeCustRequestRole" short-description="Remove Customer RequestRole">
        <field-to-field field-name="custRequestId" map-name="parameters" to-map-name="lookupPKMap"/>
        <field-to-field field-name="partyId" map-name="parameters" to-map-name="lookupPKMap"/>
        <field-to-field field-name="roleTypeId" map-name="parameters" to-map-name="lookupPKMap"/>
        <find-by-primary-key entity-name="CustRequestRole" map-name="lookupPKMap" value-name="custRequestRole"/>
        <remove-value value-name="custRequestRole"/>
    </simple-method>

    <simple-method method-name="createCustRequestItemNote" short-description="Create Customer RequestItem Note">
        <make-value value-name="newEntity" entity-name="CustRequestItemNote"/>
        <field-to-field field-name="custRequestId" map-name="parameters" to-map-name="newEntity"/>
        <field-to-field field-name="custRequestItemSeqId" map-name="parameters" to-map-name="newEntity"/>
        <field-to-field field-name="note" map-name="parameters" to-map-name="newNoteMap"/>
        <call-service service-name="createNote" in-map-name="newNoteMap">
            <result-to-field result-name="noteId" map-name="newEntity"/>
        </call-service>
        <create-value value-name="newEntity"/>
    </simple-method>

    <simple-method method-name="getCustRequestsByRole" short-description="Create Customer RequestItem Note">
        <field-to-field field-name="partyId" map-name="userLogin" to-map-name="lookupMap"/>
        <field-to-field field-name="roleTypeId" map-name="parameters" to-map-name="lookupMap"/>
        
        <string-to-list string="priority" list-name="orderByList"/>
        <string-to-list string="-responseRequiredDate" list-name="orderByList"/>
        <string-to-list string="-custRequestDate" list-name="orderByList"/>
        <string-to-list string="-createdDate" list-name="orderByList"/>
        
        <find-by-and entity-name="CustRequestAndRole" list-name="custRequestAndRoles" map-name="lookupMap" order-by-list-name="orderByList"/>
        <field-to-result field-name="custRequestAndRoles" result-name="custRequestAndRoles"/>
    </simple-method>
</simple-methods>
