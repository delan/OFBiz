<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE simple-methods PUBLIC "-//OFBiz//DTD Simple Methods//EN" "http://www.ofbiz.org/dtds/simple-methods.dtd">

<!--
 *  Copyright (c) 2003 The Open For Business Project - www.ofbiz.org
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a
 *  copy of this software and associated documentation files (the "Software"),
 *  to deal in the Software without restriction, including without limitation
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense,
 *  and/or sell copies of the Software, and to permit persons to whom the
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @author     Andy Zeneski (jaz@ofbiz.org)
 * @version    $Revision$
 * @since      2.1.1
-->

<simple-methods>
    <simple-method method-name="createShoppingList" short-description="Create a ShoppingList">
    	<if>
    	    <condition>
  	            <and>
    	            <not><if-empty field-name="partyId" map-name="parameters"/></not>
    	            <not><if-compare-field field-name="partyId" map-name="parameters" operator="equals" to-map-name="userLogin"/></not>
    	            <not><if-has-permission permission="PARTYMGR" action="_CREATE"/></not>
    	        </and>
    	    </condition>
    	    <then>
    	        <add-error><fail-message message="Security Error: to run createShoppingList for another party you must have the PARTYMGR_CREATE or PARTYMGR_ADMIN permission"/></add-error>
    	    </then>
    	</if>
        <check-errors/>

        <make-value value-name="newEntity" entity-name="ShoppingList"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        
        <if-empty field-name="partyId" map-name="newEntity">
            <field-to-field field-name="partyId" map-name="userLogin" to-map-name="newEntity"/>
        </if-empty>
        
        <if-empty field-name="shoppingListTypeId" map-name="newEntity">
            <string-to-field string="SLT_WISH_LIST" field-name="shoppingListTypeId" map-name="newEntity"/>
        </if-empty>
                
        <if-empty field-name="listName" map-name="newEntity">
            <string-to-field string="New Shopping List" field-name="listName" map-name="newEntity"/>
        </if-empty>
        
        <if-empty field-name="isPublic" map-name="newEntity">
            <string-to-field string="N" field-name="isPublic" map-name="newEntity"/>
        </if-empty>        
        
        <sequenced-id-to-env sequence-name="ShoppingList" env-name="shoppingListId"/>
        <to-string field-name="shoppingListId"/>
        <env-to-field env-name="shoppingListId" map-name="newEntity"/>
        <field-to-result field-name="shoppingListId" result-name="shoppingListId"/>
        
        <create-value value-name="newEntity"/>
    </simple-method>
    
    <simple-method method-name="updateShoppingList" short-description="Update a ShoppingList">
        <field-to-field field-name="shoppingListId" map-name="parameters" to-map-name="lookupPKMap"/>
        <find-by-primary-key entity-name="ShoppingList" map-name="lookupPKMap" value-name="shoppingList"/>

        <string-to-field field-name="parentMethodName" string="updateShoppingList"/>
        <string-to-field field-name="permissionAction" string="UPDATE"/>
        <call-simple-method method-name="checkShoppingListSecurity"/>
        <check-errors/>    	     

        <set-nonpk-fields map-name="parameters" value-name="shoppingList"/>
        <store-value value-name="shoppingList"/>
    </simple-method>
    
    <simple-method method-name="removeShoppingList" short-description="Remove a ShoppingList">
        <field-to-field field-name="shoppingListId" map-name="parameters" to-map-name="lookupPKMap"/>
        <find-by-primary-key entity-name="ShoppingList" map-name="lookupPKMap" value-name="shoppingList"/>

        <string-to-field field-name="parentMethodName" string="removeShoppingList"/>
        <string-to-field field-name="permissionAction" string="DELETE"/>
        <call-simple-method method-name="checkShoppingListSecurity"/>
        <check-errors/>    	     

        <remove-value value-name="shoppingList"/>
    </simple-method>
    
    <simple-method method-name="createShoppingListItem" short-description="Create a ShoppingList Item">
        <string-to-field field-name="parentMethodName" string="createShoppingListItem"/>
        <string-to-field field-name="permissionAction" string="CREATE"/>
        <call-simple-method method-name="checkShoppingListItemSecurity"/>
        <check-errors/> 

        <make-value value-name="newEntity" entity-name="ShoppingListItem"/>
        <field-to-field field-name="shoppingListId" map-name="parameters" to-map-name="newEntity"/>
        
        <field-to-field field-name="shoppingListId" map-name="parameters" to-map-name="lookupMap"/>
        <string-to-list string="-shoppingListItemSeqId" list-name="orderBy"/>
        <find-by-and entity-name="ShoppingListItem" list-name="currentItems" map-name="lookupMap" order-by-list-name="orderBy"></find-by-and>
        <if-empty field-name="currentItems">
            <string-to-field string="1" field-name="shoppingListItemSeqId" map-name="newEntity"/>                        
        <else>
           <first-from-list entry-name="newestItem" list-name="currentItems"/>
           <calculate field-name="shoppingListItemSeqId" map-name="newEntity" type="Integer">
               <calcop field-name="shoppingListItemSeqId" map-name="newestItem" operator="add">
                   <number value="1"/>
               </calcop>
           </calculate>
           <to-string field-name="shoppingListItemSeqId" map-name="newEntity" numeric-padding="5"/>
        </else>
        </if-empty>

        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <field-to-result field-name="shoppingListItemSeqId" map-name="newEntity"/>                                        
        <field-to-result field-name="shoppingListId" map-name="newEntity"/>                                        
        <create-value value-name="newEntity"/>
    </simple-method>
    
    <simple-method method-name="updateShoppingListItem" short-description="Update a ShoppingListItem">
        <string-to-field field-name="parentMethodName" string="updateShoppingListItem"/>
        <string-to-field field-name="permissionAction" string="UPDATE"/>
        <call-simple-method method-name="checkShoppingListItemSecurity"/>
        <check-errors/>

        <field-to-field field-name="shoppingListId" map-name="parameters" to-map-name="lookupPKMap"/>
        <field-to-field field-name="shoppingListItemSeqId" map-name="parameters" to-map-name="lookupPKMap"/>
        <find-by-primary-key entity-name="ShoppingListItem" map-name="lookupPKMap" value-name="shoppingListItem"/>
        <set-nonpk-fields map-name="parameters" value-name="shoppingListItem"/>
        <store-value value-name="shoppingListItem"/>
    </simple-method>
    
    <simple-method method-name="removeShoppingListItem" short-description="Remove a ShoppingListItem">
        <string-to-field field-name="parentMethodName" string="removeShoppingListItem"/>
        <string-to-field field-name="permissionAction" string="DELETE"/>
        <call-simple-method method-name="checkShoppingListItemSecurity"/>
        <check-errors/>

        <field-to-field field-name="shoppingListId" map-name="parameters" to-map-name="lookupPKMap"/>
        <field-to-field field-name="shoppingListItemSeqId" map-name="parameters" to-map-name="lookupPKMap"/>
        <find-by-primary-key entity-name="ShoppingListItem" map-name="lookupPKMap" value-name="shoppingListItem"/>
        <remove-value value-name="shoppingListItem"/>
    </simple-method>    

    <simple-method method-name="calculateShoppingListDeepTotalPrice" short-description="Calculate Deep Total Price for a ShoppingList">
        <string-to-field field-name="parentMethodName" string="calculateShoppingListDeepTotalPrice"/>
        <string-to-field field-name="permissionAction" string="VIEW"/>
        <call-simple-method method-name="checkShoppingListItemSecurity"/>
        <check-errors/>

		<field-to-field field-name="prodCatalogId" map-name="parameters" to-map-name="calcPriceInBaseMap"/>
		<field-to-field field-name="webSiteId" map-name="parameters" to-map-name="calcPriceInBaseMap"/>
		<field-to-field field-name="partyId" map-name="parameters" to-map-name="calcPriceInBaseMap"/>
		<field-to-field field-name="facilityGroupId" map-name="parameters" to-map-name="calcPriceInBaseMap"/>
		<field-to-field field-name="currencyUomId" map-name="parameters" to-map-name="calcPriceInBaseMap"/>
		<field-to-field field-name="autoUserLogin" map-name="parameters" to-map-name="calcPriceInBaseMap"/>

        <field-to-field field-name="shoppingListId" map-name="parameters" to-map-name="lookupMap"/>
        <find-by-and entity-name="ShoppingListItem" list-name="shoppingListItems" map-name="lookupMap" use-cache="true"/>

		<calculate field-name="totalPrice" type="Double"><number value="0.0"/></calculate>
        <iterate entry-name="shoppingListItem" list-name="shoppingListItems">
        	<field-to-field field-name="productId" map-name="shoppingListItem" to-map-name="lookupProductMap"/>
        	<find-by-primary-key entity-name="Product" value-name="product" map-name="lookupProductMap" use-cache="true"/>
        	
        	<map-to-map map-name="calcPriceInBaseMap" to-map-name="calcPriceInMap"/>
        	<env-to-field env-name="product" field-name="product" map-name="calcPriceInMap"/>
        	<field-to-field field-name="quantity" map-name="shoppingListItem" to-map-name="calcPriceInMap"/>
        	<call-service service-name="calculateProductPrice" in-map-name="calcPriceInMap">
        		<result-to-field result-name="price" field-name="price" map-name="calcPriceOutMap"/>
        	</call-service>
        	<calculate field-name="totalPrice">
        		<calcop field-name="totalPrice" operator="add">
        			<calcop operator="multiply">
        				<calcop operator="get" field-name="price" map-name="calcPriceOutMap"/>
        				<calcop operator="get" field-name="quantity" map-name="shoppingListItem"/>
        			</calcop>
        		</calcop>
        	</calculate>
        	<clear-field field-name="calcPriceInMap"/>
        </iterate>

        <field-to-field field-name="shoppingListId" map-name="parameters" to-field-name="parentShoppingListId" to-map-name="lookupChildrenMap"/>
        <field-to-field field-name="partyId" map-name="userLogin" to-map-name="lookupChildrenMap"/>
        <find-by-and entity-name="ShoppingList" list-name="childshoppingLists" map-name="lookupChildrenMap" use-cache="true"/>
        <iterate entry-name="childshoppingList" list-name="childshoppingLists">
        	<map-to-map map-name="calcPriceInBaseMap" to-map-name="calcChildPriceInMap"/>
        	<field-to-field field-name="shoppingListId" map-name="childshoppingList" to-map-name="calcChildPriceInMap"/>
        	<call-service service-name="calculateShoppingListDeepTotalPrice" in-map-name="calcChildPriceInMap">
        		<result-to-field result-name="totalPrice" field-name="totalPrice" map-name="calcPriceOutMap"/>
        	</call-service>
        	<calculate field-name="totalPrice">
        		<calcop field-name="totalPrice" operator="add">
					<calcop operator="get" field-name="totalPrice" map-name="calcPriceOutMap"/>
        		</calcop>
        	</calculate>
        	<clear-field field-name="calcChildPriceInMap"/>
        </iterate>

		<field-to-result field-name="totalPrice" result-name="totalPrice"/>
    </simple-method>
    
    <simple-method method-name="checkShoppingListSecurity" short-description="Checks security on a ShoppingList">
    	<if>
    	    <condition>
  	            <and>
    	            <not><if-compare-field field-name="partyId" map-name="userLogin" operator="equals" to-map-name="shoppingList"/></not>
    	            <not><if-has-permission permission="PARTYMGR" action="_${permissionAction}"/></not>
    	        </and>
    	    </condition>
    	    <then>
    	        <add-error><fail-message message="Security Error: to run ${parentMethodName} for another party you must have the PARTYMGR_${permissionAction} or PARTYMGR_ADMIN permission"/></add-error>
    	    </then>
    	</if>    	    	
    </simple-method>    
    <simple-method method-name="checkShoppingListItemSecurity" short-description="Checks security on a ShoppingListItem">
    	<field-to-field field-name="shoppingListId" map-name="parameters" to-map-name="lookupSLMap"/>
    	<find-by-primary-key entity-name="ShoppingList" map-name="lookupSLMap" value-name="shoppingList"/>
   	    <if>
    	    <condition>
  	            <and>
    	            <not><if-compare-field field-name="partyId" map-name="userLogin" operator="equals" to-map-name="shoppingList"/></not>
    	            <not><if-has-permission permission="PARTYMGR" action="_${permissionAction}"/></not>
    	        </and>
    	    </condition>
    	    <then>
    	        <add-error><fail-message message="Security Error: to run ${parentMethodName} for another party you must have the PARTYMGR_${permissionAction} or PARTYMGR_ADMIN permission"/></add-error>
    	    </then>
    	</if>        
    </simple-method>
</simple-methods>