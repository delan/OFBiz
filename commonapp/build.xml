<?xml version="1.0" encoding="UTF-8"?>
<!--
 *  Copyright (c) 2001 The Open For Business Project and respected authors.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a
 *  copy of this software and associated documentation files (the "Software"),
 *  to deal in the Software without restriction, including without limitation
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense,
 *  and/or sell copies of the Software, and to permit persons to whom the
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *  This is the  Open for Business CommonApp component build script.
 *  $Id$
-->
<project basedir="." default="war" name="Open For Business CommonApp Component">

    <!-- ================================================================== -->
    <!-- Initialization of all property settings                                                                                                                         -->
    <!-- ================================================================== -->

    <target name="init-properties">
        <!-- Allow any user specific values to override the defaults -->
        <property file="${user.home}/build.properties"/>
        <!-- Allow project-level defaults for this build -->
        <property file="../build.properties"/>
        <!-- Allow module-level defaults for this build -->
        <property file="build.properties"/>
        
        <property name="ofbiz.version" value=""/>
        
        <property environment="env"/>
        <property name="name" value="commonapp"/>
        <property name="src.dir" value="src"/>
        <property name="etc.dir" value="etc"/>
        <property name="lib.dir" value="lib"/>
        <property name="webapp.dir" value="webapp"/>
        <property name="walib.dir" value="${webapp.dir}/WEB-INF/lib"/>
        <property name="waclasses.dir" value="${webapp.dir}/WEB-INF/classes"/>
        <property name="doc.dir" value="docs"/>
        <property name="build.dir" value="build"/>
        <property name="pkg-dist.name" value="${name}-pkg"/>

        <!-- Classpath setting -->
        <property name="corelib.dir" value="../core/lib"/>
        <property name="extlib.dir" value="../lib"/>
    </target>

    <target name="init" depends="init-properties">
        <path id="local.class.path">
            <fileset dir="${corelib.dir}" includes="*.jar"/>
            <fileset dir="${extlib.dir}/compile" includes="*.jar"/>
            <fileset dir="${extlib.dir}/common" includes="*.jar"/>
            <fileset dir="${extlib.dir}/share" includes="*.jar"/>
            <fileset dir="${extlib.dir}/scripting" includes="*.jar"/>
            <fileset dir="${extlib.dir}/datavision" includes="*.jar"/>
            <fileset dir="${extlib.dir}/jasperreports" includes="*.jar"/>
            <fileset dir="${extlib.dir}/weka" includes="*.jar"/>   
            <fileset dir="${extlib.dir}/worldpay" includes="*.jar"/>         
        </path>
    </target>

    <!-- ================================================================== -->
    <!-- Removes all created files and directories                                                                                                                 -->
    <!-- ================================================================== -->

    <target depends="clean-lib" name="clean">
        <delete dir="${doc.dir}/api"/>
        <delete dir="${build.dir}"/>
    </target>

    <target depends="init-properties" name="clean-lib">
        <delete dir="${lib.dir}"/>
        <delete dir="${walib.dir}"/>
        <delete dir="${waclasses.dir}"/>
        <delete file="${deploy.dir}/${name}.war"/>
    </target>

    <target depends="init" name="prepare-docs">
        <mkdir dir="${doc.dir}"/>
        <mkdir dir="${doc.dir}/api"/>
    </target>

    <!-- ================================================================== -->
    <!-- Makes sure the needed directory structure is in place                                                                                            -->
    <!-- ================================================================== -->

    <target name="prepare" depends="clean-lib, init">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.dir}/jar"/>
        <mkdir dir="${build.dir}/ejb"/>
        <mkdir dir="${build.dir}/ejb/META-INF"/>
        <mkdir dir="${build.dir}/j2ee"/>
        <mkdir dir="${build.dir}/j2ee/META-INF"/>
        <mkdir dir="${lib.dir}"/>
        <mkdir dir="${waclasses.dir}"/>
        <mkdir dir="${walib.dir}"/>
    </target>

    <!-- ================================================================== -->
    <!-- Compilation of the common application components                                                                                                -->
    <!-- ================================================================== -->

    <target depends="prepare" name="classes">
        <javac classpathref="local.class.path" debug="on" deprecation="on" destdir="${build.dir}/jar" srcdir="${src.dir}">
            <!-- exclude the payment processor packages; comment if you have libs -->
            <exclude name="org/ofbiz/commonapp/thirdparty/cybersource/**"/> 
            <exclude name="org/ofbiz/commonapp/thirdparty/verisign/**"/>
            <exclude name="org/ofbiz/commonapp/thirdparty/taxware/**"/> 
            <exclude name="org/ofbiz/commonapp/thirdparty/paymentech/**"/>           
        </javac>
        
        <!-- also copy all .xml, .bsh & .logic files to classpath directory -->
        <copy todir="${build.dir}/jar">
            <fileset dir="${src.dir}" includes="**/*.properties,**/*.xml,**/*.bsh,**/*.logic,**/*.js,**/*.jacl,**/*.py"/>
        </copy>
    </target>

    <target depends="classes" name="jar">
        <jar basedir="${build.dir}/jar" jarfile="${lib.dir}/${name}.jar"/>
    </target>

    <target depends="jar" name="jar-deploy">
    </target>

    <!-- ================================================================== -->
    <!-- Build the WARs                                                                                                                                                         -->
    <!-- ================================================================== -->

    <target depends="jar-deploy,prepare" name="war">
        <jar basedir="${webapp.dir}" jarfile="${lib.dir}/${name}.war"/>
    </target>


    <!-- ================================================================== -->
    <!-- Build the EJB jar and EAR                                                                                                                                         -->
    <!-- ================================================================== -->
    
    <target depends="jar,war" name="meta-info">
        <copy file="${etc.dir}/ejb-jar.xml" tofile="${build.dir}/ejb/META-INF/ejb-jar.xml"/>
        <copy file="${etc.dir}/jboss.xml" tofile="${build.dir}/ejb/META-INF/jboss.xml"/>
        <copy file="${etc.dir}/jaws.xml" tofile="${build.dir}/ejb/META-INF/jaws.xml"/>
        <copy file="${etc.dir}/application.xml" tofile="${build.dir}/j2ee/META-INF/application.xml"/>
    </target>

    <target depends="meta-info" name="ejb">
        <jar basedir="${build.dir}/ejb" jarfile="${build.dir}/j2ee/${name}-ejb.jar"/>
    </target>

    <target depends="ejb" name="ear">
        <jar basedir="${build.dir}/j2ee" jarfile="${lib.dir}/${name}.ear"/>
    </target>

    <!-- ================================================================== -->
    <!-- Build JavaDoc                                                                                                                                                           -->
    <!-- ================================================================== -->

    <target name="docs" depends="prepare-docs">
        <javadoc packagenames="org.ofbiz.commonapp.accounting.*,org.ofbiz.commonapp.common.*,org.ofbiz.commonapp.content.*,org.ofbiz.commonapp.marketing.*,org.ofbiz.commonapp.order.*,org.ofbiz.commonapp.party.*,org.ofbiz.commonapp.product.*,org.ofbiz.commonapp.security.*,org.ofbiz.commonapp.shipment.*,org.ofbiz.commonapp.workeffort.*,org.ofbiz.commonapp.thirdparty.cybersource.*,org.ofbiz.commonapp.thirdparty.paymentech.*,org.ofbiz.commonapp.thirdparty.verisign.*" 
                 classpathref="local.class.path" sourcepath="${src.dir}" destdir="${doc.dir}/api" 
                 Windowtitle="Open for Business - Commonapp API"/>
    </target>

    <!-- ================================================================== -->
    <!-- Generates a GZip'ed tar source distribution                                                                                                             -->
    <!-- ================================================================== -->

    <target depends="prepare" name="pkg-dist">
        <mkdir dir="${lib.dir}/${name}"/>

        <copy todir="${lib.dir}/${name}">
            <fileset dir="." includes="${src.dir}/**"/>
            <fileset dir="." includes="build.xml"/>
        </copy>

        <tar basedir="${lib.dir}" includes="${name}/**" tarfile="${lib.dir}/${pkg-dist.name}.tar"/>

        <gzip src="${lib.dir}/${pkg-dist.name}.tar" zipfile="${lib.dir}/${pkg-dist.name}.tar.gz"/>
        <delete file="${lib.dir}/${pkg-dist.name}.tar"/>

        <zip basedir="${lib.dir}" includes="${name}/**" zipfile="${lib.dir}/${pkg-dist.name}.zip"/>
        <delete dir="${lib.dir}/${name}"/>
    </target>

    <!-- <target name="all" depends="jar,pkg-dist" /> -->
    <target depends="war,pkg-dist" name="all"/>
</project>
