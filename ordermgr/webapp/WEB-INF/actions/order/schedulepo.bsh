/*
 *  Copyright (c) 2003 The Open For Business Project - www.ofbiz.org
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a 
 *  copy of this software and associated documentation files (the "Software"), 
 *  to deal in the Software without restriction, including without limitation 
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense, 
 *  and/or sell copies of the Software, and to permit persons to whom the 
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included 
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS 
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF 
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY 
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT 
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR 
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *@author     Tristan Austin (tristana@twibble.org)
 *@version    $Revision$
 */

import org.ofbiz.core.util.*;
import org.ofbiz.core.entity.*;
import org.ofbiz.core.widgetimpl.*;

security = request.getAttribute("security");
delegator = request.getAttribute("delegator");
dispatcher = request.getAttribute("dispatcher");

String orderId = request.getParameter("order_id");
String orderTypeId = null;
GenericValue order = delegator.findByPrimaryKey("OrderHeader", UtilMisc.toMap("orderId", orderId));
if (order != null) {
    orderTypeId = order.getString("orderTypeId");
}

// Initialize the PO Delivery Schedule form
HtmlFormWrapper updatePODeliveryInfoWrapper = new HtmlFormWrapper("/order/SchedulePoForms.xml", "UpdatePODeliveryInformation", request, response);
updatePODeliveryInfoWrapper.putInContext("orderId", orderId);
updatePODeliveryInfoWrapper.putInContext("orderItemSeqId", "_NA_");

//Determine whether a schedule has already been defined for this PO
GenericValue schedule = delegator.findByPrimaryKey("OrderDeliverySchedule", UtilMisc.toMap("orderId", orderId, "orderItemSeqId", "_NA_"));
updatePODeliveryInfoWrapper.putInContext("schedule", schedule);

// Determine whether the current user can UPDATE the order
Map checkMap = UtilMisc.toMap("orderId", orderId, "userLogin", session.getAttribute("userLogin"));
Map checkResult = dispatcher.runSync("checkSupplierRelatedPermission", checkMap);
String result = (String)checkResult.get("hasSupplierRelatedPermission");

// Determine what the reuslt is, no result is FALSE
Boolean supplierPermission = new Boolean(result);
updatePODeliveryInfoWrapper.putInContext("hasSupplierRelatedPermission", supplierPermission);

// Do the same for the carrier related permission
checkResult = dispatcher.runSync("checkCarrierRelatedPermission", checkMap);
result = (String)checkResult.get("hasCarrierRelatedPermission");
Boolean carrierPermission = new Boolean(result);
updatePODeliveryInfoWrapper.putInContext("hasSupplierRelatedPermission", carrierPermission);

// Either Carrier or Supplier can access this page
context.put("hasPermission", new Boolean(supplierPermission.booleanValue() || carrierPermission.booleanValue()));

// and the rest....
context.put("orderId", orderId);
context.put("orderTypeId", orderTypeId);
context.put("purchaseOrder", order);
context.put("updatePODeliveryInfoWrapper", updatePODeliveryInfoWrapper);
