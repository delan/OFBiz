/*
 *  Copyright (c) 2003 The Open For Business Project - www.ofbiz.org
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a 
 *  copy of this software and associated documentation files (the "Software"), 
 *  to deal in the Software without restriction, including without limitation 
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense, 
 *  and/or sell copies of the Software, and to permit persons to whom the 
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included 
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS 
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF 
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY 
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT 
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR 
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *@author     David E. Jones (jonesde@ofbiz.org)
 *@version    $Revision$
 *@since      2.1
 */

import org.ofbiz.core.util.*;
import org.ofbiz.core.entity.*;
import org.ofbiz.commonapp.product.catalog.CatalogWorker;
import org.ofbiz.commonapp.common.CommonWorkers;
import org.ofbiz.commonapp.order.shoppingcart.*;

userLogin = session.getAttribute(SiteDefs.USER_LOGIN);

ecommercePropertiesUrl = application.getResource("/WEB-INF/ecommerce.properties");
layoutSettings = new HashMap();
context.put("layoutSettings", layoutSettings);

layoutSettings.put("companyName", UtilProperties.getPropertyValue(ecommercePropertiesUrl, "company.name"));
layoutSettings.put("companySubtitle", UtilProperties.getPropertyValue(ecommercePropertiesUrl, "company.subtitle"));
layoutSettings.put("headerImageUrl", UtilProperties.getPropertyValue(ecommercePropertiesUrl, "header.image.url"));
layoutSettings.put("headerMiddleBackgroundUrl", UtilProperties.getPropertyValue(ecommercePropertiesUrl, "header.middle.background.url"));
layoutSettings.put("headerRightBackgroundUrl", UtilProperties.getPropertyValue(ecommercePropertiesUrl, "header.right.background.url"));

prodCatalog = CatalogWorker.getProdCatalog(request);
if (prodCatalog != null) {
    catalogStyleSheet = prodCatalog.get("styleSheet");
    if (catalogStyleSheet != null) context.put("catalogStyleSheet", catalogStyleSheet);
    catalogHeaderLogo = prodCatalog.get("headerLogo");
    if (catalogHeaderLogo != null) context.put("catalogHeaderLogo", catalogHeaderLogo);
}

context.put("checkLoginUrl", CommonWorkers.makeLoginUrl(request, "checkLogin"));
context.put("catalogQuickaddUse", CatalogWorker.getCatalogQuickaddUse(request));

eventMsgReq = request.getAttribute(SiteDefs.EVENT_MESSAGE);
errorMsgReq = request.getAttribute(SiteDefs.ERROR_MESSAGE);
errorMsgSes = session.getAttribute(SiteDefs.ERROR_MESSAGE);

if (eventMsgReq != null) {
    request.setAttribute("eventMsgReq", UtilFormatOut.replaceString(eventMsgReq, "\n", "<br>"));
    request.removeAttribute(SiteDefs.EVENT_MESSAGE);
}
if (errorMsgReq != null) {
    request.setAttribute("errorMsgReq", UtilFormatOut.replaceString(errorMsgReq, "\n", "<br>"));
    request.removeAttribute(SiteDefs.ERROR_MESSAGE);
}
if (errorMsgSes != null) {
    request.setAttribute("errorMsgSes", UtilFormatOut.replaceString(errorMsgSes, "\n", "<br>"));
    session.removeAttribute(SiteDefs.ERROR_MESSAGE);
}

