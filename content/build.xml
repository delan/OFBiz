<?xml version="1.0"?>

<!--
 *  Copyright (c) 2001 The Open For Business Project and respected authors.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a
 *  copy of this software and associated documentation files (the "Software"),
 *  to deal in the Software without restriction, including without limitation
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense,
 *  and/or sell copies of the Software, and to permit persons to whom the
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *  $Id$
-->

<project name="Open For Business Content Manager Component" default="war" basedir=".">


    <!-- ================================================================== -->
    <!-- Initialization of all property settings                            -->
    <!-- ================================================================== -->

    <target name="init-properties">
        <!-- Allow any user specific values to override the defaults -->
        <property file="${user.home}/build.properties"/>
        <!-- Allow project-level defaults for this build -->
        <property file="../build.properties"/>
        <!-- Allow module-level defaults for this build -->
        <property file="build.properties"/>
        
        <property name="ofbiz.version" value=""/>
        
        <property environment="env"/>
        <property name="name"           value="content"/>
        <property name="src.dir"        value="src"/>
        <property name="etc.dir"        value="etc"/>
        <property name="lib.dir"        value="lib"/>
        <property name="webapp.dir"     value="./webapp"/>
        <property name="walib.dir"      value="${webapp.dir}/WEB-INF/lib"/>
        <property name="waclasses.dir"  value="${webapp.dir}/WEB-INF/classes"/>
        <property name="doc.dir"        value="docs"/>
        <property name="build.dir"      value="build"/>
        <property name="pkg-dist.name"  value="${name}-pkg"/>
        <property name="commonapp.etc.dir" value="../commonapp/etc"/>
		
        <!-- Classpath setting -->
        <property name="corelib.dir"       value="../core/lib" />
        <property name="commonapplib.dir"  value="../commonapp/lib" />
        <property name="extlib.dir"        value="../lib" />
    </target>

    <target name="init" depends="init-properties">
        <path id="local.class.path">
            <fileset dir="${corelib.dir}" includes="*.jar"/>
            <fileset dir="${commonapplib.dir}" includes="*.jar"/>
            <fileset dir="${extlib.dir}/compile" includes="*.jar"/>
            <fileset dir="${extlib.dir}/common" includes="*.jar"/>
            <fileset dir="${extlib.dir}/share" includes="*.jar"/>
            <fileset dir="${extlib.dir}/scripting" includes="*.jar"/>
            <fileset dir="${extlib.dir}/datavision" includes="*.jar"/>
            <fileset dir="${extlib.dir}/jasperreports" includes="*.jar"/>
            <fileset dir="${extlib.dir}/weka" includes="*.jar"/>
            <fileset dir="${extlib.dir}/wspublisher" includes="*.jar"/>
        </path>
    </target>


    <!-- ================================================================== -->
    <!-- Removes all created files and directories                          -->
    <!-- ================================================================== -->

    <target name="clean" depends="clean-lib">
        <delete dir="${build.dir}" />
        <delete dir="${doc.dir}/api" />
    </target>

    <target name="clean-lib" depends="init-properties">
        <delete dir="${lib.dir}" />
        <delete dir="${walib.dir}" />
        <delete dir="${waclasses.dir}" />
    </target>

    <target name="prepare-docs" depends="init">
        <mkdir dir="${doc.dir}" />
        <mkdir dir="${doc.dir}/api" />
    </target>	


    <!-- ================================================================== -->
    <!-- Makes sure the needed directory structure is in place              -->
    <!-- ================================================================== -->

    <target name="prepare" depends="clean-lib, init">
        <mkdir dir="${build.dir}" />
        <mkdir dir="${build.dir}/jar" />
        <mkdir dir="${build.dir}/ejb" />
        <mkdir dir="${build.dir}/ejb/META-INF" />
        <mkdir dir="${build.dir}/j2ee" />
        <mkdir dir="${build.dir}/j2ee/META-INF" />
        <mkdir dir="${lib.dir}" />
        <mkdir dir="${waclasses.dir}" />
        <mkdir dir="${walib.dir}" />
    </target>


    <!-- ================================================================== -->
    <!-- Compilation of the common application components                   -->
    <!-- ================================================================== -->

    <target name="classes" depends="prepare">
        <javac debug="on" classpathref="local.class.path" srcdir="${src.dir}" destdir="${build.dir}/jar"/>
        
        <!-- also copy all .xml, .bsh & .logic files to classpath directory -->
        <copy todir="${build.dir}/jar">
            <fileset dir="${src.dir}" includes="**/*.properties,**/*.xml,**/*.bsh,**/*.logic" />
        </copy>
    </target>

    <target name="jar" depends="classes">
        <jar jarfile="${lib.dir}/${name}.jar" basedir="${build.dir}/jar" />
    </target>

    <target name="jar-deploy" depends="jar">
    	<copy file="${lib.dir}/${name}.jar" tofile="${walib.dir}/${name}.jar" />
    	<copy file="${corelib.dir}/ofbcore-webapp.jar" toDir="${walib.dir}"/>
    </target>

    <!-- ================================================================== -->
    <!-- Build the WARs                                                     -->
    <!-- ================================================================== -->
	
    <target name="war" depends="jar-deploy,prepare">
        <jar jarfile="${lib.dir}/${name}.war" basedir="${webapp.dir}" />
    </target>


    <!-- ================================================================== -->
    <!-- Build the EJB jar and EAR                                          -->
    <!-- ================================================================== -->
    
    <target name="meta-info" depends="jar,war">
        <copy file="${etc.dir}/ejb-jar.xml" tofile="${build.dir}/ejb/META-INF/ejb-jar.xml" />
        <copy file="${etc.dir}/jboss.xml" tofile="${build.dir}/ejb/META-INF/jboss.xml" />
        <copy file="${etc.dir}/jaws.xml" tofile="${build.dir}/ejb/META-INF/jaws.xml" />
        <copy file="${etc.dir}/application.xml" tofile="${build.dir}/j2ee/META-INF/application.xml" />			  
    </target>

    <target name="ejb" depends="meta-info">
        <jar jarfile="${build.dir}/j2ee/${name}-ejb.jar" basedir="${build.dir}/ejb" />
    </target>

    <target name="ear" depends="ejb">
        <jar jarfile="${lib.dir}/${name}.ear" basedir="${build.dir}/j2ee" />
    </target>
	
    <!-- ================================================================== -->
    <!-- Build JavaDoc                                                      -->
    <!-- ================================================================== -->

    <target name="docs" depends="prepare-docs">
        <javadoc classpathref="local.class.path" packagenames="org.ofbiz.*" sourcepath="${src.dir}" destdir="${doc.dir}/api"/>
    </target>

    <!-- ================================================================== -->
    <!-- Generates a GZip'ed tar source distribution                        -->
    <!-- ================================================================== -->

    <target name="pkg-dist" depends="prepare">
        <mkdir dir="${lib.dir}/${name}" />

        <copy todir="${lib.dir}/${name}">
            <fileset dir="." includes="${src.dir}/**" />        
            <fileset dir="." includes="build.xml" />
        </copy>

        <tar tarfile="${lib.dir}/${pkg-dist.name}.tar"
             basedir="${lib.dir}"
             includes="${name}/**" />

        <gzip src="${lib.dir}/${pkg-dist.name}.tar"
              zipfile="${lib.dir}/${pkg-dist.name}.tar.gz" />
        <delete file="${lib.dir}/${pkg-dist.name}.tar" />

        <zip zipfile="${lib.dir}/${pkg-dist.name}.zip"
             basedir="${lib.dir}"
             includes="${name}/**" />
        <delete dir="${lib.dir}/${name}" />
    </target>

    <!-- <target name="all" depends="jar,pkg-dist" /> -->
    <target name="all" depends="war,pkg-dist" />
</project>

