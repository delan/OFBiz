/*
 *  Copyright (c) 2003 The Open For Business Project - www.ofbiz.org
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a 
 *  copy of this software and associated documentation files (the "Software"), 
 *  to deal in the Software without restriction, including without limitation 
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense, 
 *  and/or sell copies of the Software, and to permit persons to whom the 
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included 
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS 
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF 
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY 
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT 
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR 
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *@author     David E. Jones
 *@version    $Revision$
 *@since      2.1
 */

import org.ofbiz.core.util.*;
import org.ofbiz.core.entity.*;
import org.ofbiz.core.widgetimpl.*;


entityName	= page.getProperty("entityName");
//viewName	= page.getProperty("viewName");
formDefFile	= page.getProperty("formDefFile");
subMenu	= page.getProperty("subMenu");
headerItem	= page.getProperty("headerItem");
//session.setAttribute("contentSubPage", viewName);
if(headerItem != null && headerItem.equalsIgnoreCase("Data") ){
Debug.logInfo("headerItem(data):" + headerItem);
session.setAttribute("dataSubPage", "Edit" + entityName);
} else {
Debug.logInfo("headerItem(content):" + headerItem);
session.setAttribute("contentSubPage", "Edit" + entityName);
}

security = request.getAttribute("security");
delegator = request.getAttribute("delegator");

if(security.hasEntityPermission("CONTENTMGR", "_VIEW", session)) {
    context.put("hasPermission", Boolean.TRUE);
} else {
    context.put("hasPermission", Boolean.FALSE);
}

    List contentList = delegator.findAllCache(entityName);

HtmlFormWrapper editWrapper = new HtmlFormWrapper(formDefFile, "Update" + entityName, request, response);
editWrapper.putInContext("contentList", contentList);

HtmlFormWrapper addWrapper = new HtmlFormWrapper(formDefFile, "Add" + entityName, request, response);
context.put("contentList", contentList);
context.put("editWrapper", editWrapper);
context.put("addWrapper", addWrapper);
//context.put("entityName", entityName);
//context.put("subMenu", entityName);
