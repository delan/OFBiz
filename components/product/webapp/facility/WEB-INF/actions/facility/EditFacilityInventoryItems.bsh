import java.util.*;
import java.io.*;
import org.ofbiz.entity.*;
import org.ofbiz.base.util.*;
import org.ofbiz.content.widget.html.*;

security = request.getAttribute("security");
delegator = request.getAttribute("delegator");

if(security.hasEntityPermission("FACILITY", "_VIEW", session)) {
    context.put("hasPermission", Boolean.TRUE);
} else {
    context.put("hasPermission", Boolean.FALSE);
}
String facilityId = request.getParameter("facilityId");
if (facilityId != null) context.put("facilityId", facilityId);

GenericValue facility = delegator.findByPrimaryKey("Facility", UtilMisc.toMap("facilityId", facilityId));
if (facility != null) context.put("facility", facility);

Collection facilityInventoryItems = delegator.findByAnd("InventoryItem", 
        UtilMisc.toMap("facilityId", facilityId), 
        UtilMisc.toList("statusId", "quantityOnHand", "serialNumber"));
if (facilityInventoryItems != null) context.put("facilityInventoryItems", facilityInventoryItems);

int viewIndex = 0;
int viewSize = 20;
int highIndex = 0;
int lowIndex = 0;
int listSize = 0;

try {
    viewIndex = Integer.valueOf((String) request.getParameter("VIEW_INDEX")).intValue();
} catch (Exception e) {
    viewIndex = 0;
}
context.put("viewIndex", viewIndex);

try {
    viewSize = Integer.valueOf((String) request.getParameter("VIEW_SIZE")).intValue();
} catch (Exception e) {
    viewSize = 20;
}
context.put("viewSize", viewSize);

if (facilityInventoryItems != null) {
    listSize = facilityInventoryItems.size();
}
context.put("listSize", listSize);

lowIndex = viewIndex * viewSize;
highIndex = (viewIndex + 1) * viewSize;
if (listSize < highIndex) {
    if (listSize > 0) { 
        highIndex = listSize-1;
    } else {
        highIndex = 0;
    }
}
context.put("lowIndex", lowIndex);
context.put("highIndex", highIndex);
