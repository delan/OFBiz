<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE simple-methods PUBLIC "-//OFBiz//DTD Simple Methods//EN" "http://www.ofbiz.org/dtds/simple-methods.dtd">

<!--
 *  Copyright (c) 2003 The Open For Business Project - www.ofbiz.org
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a
 *  copy of this software and associated documentation files (the "Software"),
 *  to deal in the Software without restriction, including without limitation
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense,
 *  and/or sell copies of the Software, and to permit persons to whom the
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @author     David E. Jones (jonesde@ofbiz.org)
 * @author     Andy Zeneski (jaz@ofbiz.org)
 * @version    $Revision: 1.4 $
 * @since      2.2
-->
<simple-methods>
    <!-- ItemIssuance services -->
    <simple-method method-name="createItemIssuance" short-description="Create ItemIssuance">
        <check-permission permission="FACILITY" action="_CREATE">
        	<fail-message message="Security Error: to run createItemIssuance you must have the FACILITY_CREATE or FACILITY_ADMIN permission"/>
        </check-permission>
        <string-to-field string="Create ItemIssuance" field-name="operationName"/>
        <call-simple-method method-name="checkCanChangeShipmentStatusPacked" xml-resource="org/ofbiz/shipment/shipment/ShipmentServices.xml"/>
        <check-errors/>

        <make-value value-name="newEntity" entity-name="ItemIssuance"/>
        <sequenced-id-to-env sequence-name="ItemIssuance" env-name="newEntity.itemIssuanceId"/>
        <field-to-result field-name="itemIssuanceId" map-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <now-timestamp-to-env env-name="newEntity.issuedDateTime"/>
        
        <create-value value-name="newEntity"/>
    </simple-method>
    <simple-method method-name="updateItemIssuance" short-description="Update ItemIssuance">
        <check-permission permission="FACILITY" action="_UPDATE">
        	<fail-message message="Security Error: to run updateItemIssuance you must have the FACILITY_UPDATE or FACILITY_ADMIN permission"/>
        </check-permission>
        <string-to-field string="Update ItemIssuance" field-name="operationName"/>
        <call-simple-method method-name="checkCanChangeShipmentStatusPacked" xml-resource="org/ofbiz/shipment/shipment/ShipmentServices.xml"/>
        <check-errors/>

        <make-value value-name="lookupPKMap" entity-name="ItemIssuance"/>
        <set-pk-fields map-name="parameters" value-name="lookupPKMap"/>
        <find-by-primary-key entity-name="ItemIssuance" map-name="lookupPKMap" value-name="lookedUpValue"/>
        <set-nonpk-fields map-name="parameters" value-name="lookedUpValue"/>
        <store-value value-name="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="deleteItemIssuance" short-description="Delete ItemIssuance">
        <check-permission permission="FACILITY" action="_DELETE">
        	<fail-message message="Security Error: to run deleteItemIssuance you must have the FACILITY_DELETE or FACILITY_ADMIN permission"/>
        </check-permission>
        <string-to-field string="Delete ItemIssuance" field-name="operationName"/>
        <call-simple-method method-name="checkCanChangeShipmentStatusPacked" xml-resource="org/ofbiz/shipment/shipment/ShipmentServices.xml"/>
        <check-errors/>

        <make-value value-name="lookupPKMap" entity-name="ItemIssuance"/>
        <set-pk-fields map-name="parameters" value-name="lookupPKMap"/>
        <find-by-primary-key entity-name="ItemIssuance" map-name="lookupPKMap" value-name="lookedUpValue"/>
        <remove-value value-name="lookedUpValue"/>
    </simple-method>

    <!-- ItemIssuanceRole services -->
    <simple-method method-name="createItemIssuanceRole" short-description="Create ItemIssuanceRole">
        <check-permission permission="FACILITY" action="_CREATE">
        	<fail-message message="Security Error: to run createItemIssuanceRole you must have the FACILITY_CREATE or FACILITY_ADMIN permission"/>
        </check-permission>
        <string-to-field string="Create ItemIssuanceRole" field-name="operationName"/>
        <call-simple-method method-name="checkCanChangeShipmentStatusPacked" xml-resource="org/ofbiz/shipment/shipment/ShipmentServices.xml"/>
        <check-errors/>

        <make-value value-name="newEntity" entity-name="ItemIssuanceRole"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        
        <create-value value-name="newEntity"/>
    </simple-method>
    <simple-method method-name="deleteItemIssuanceRole" short-description="Delete ItemIssuanceRole">
        <check-permission permission="FACILITY" action="_DELETE">
        	<fail-message message="Security Error: to run deleteItemIssuanceRole you must have the FACILITY_DELETE or FACILITY_ADMIN permission"/>
        </check-permission>
        <string-to-field string="Delete ItemIssuanceRole" field-name="operationName"/>
        <call-simple-method method-name="checkCanChangeShipmentStatusPacked" xml-resource="org/ofbiz/shipment/shipment/ShipmentServices.xml"/>
        <check-errors/>

        <make-value value-name="lookupPKMap" entity-name="ItemIssuanceRole"/>
        <set-pk-fields map-name="parameters" value-name="lookupPKMap"/>
        <find-by-primary-key entity-name="ItemIssuanceRole" map-name="lookupPKMap" value-name="lookedUpValue"/>
        <remove-value value-name="lookedUpValue"/>
    </simple-method>

    <!-- the actual issuance services -->
    <simple-method method-name="issueOrderItemToShipment" short-description="Issue OrderItem to Shipment">
        <string-to-field string="Issue OrderItem to Shipment" field-name="operationName"/>
        <check-permission permission="FACILITY" action="_CREATE">
            <fail-message message="Security Error: to run ${operationName} you must have the FACILITY_CREATE or FACILITY_ADMIN permission"/>
        </check-permission>
        <check-permission permission="FACILITY" action="_UPDATE">
            <fail-message message="Security Error: to run ${operationName} you must have the FACILITY_UPDATE or FACILITY_ADMIN permission"/>
        </check-permission>
        <call-simple-method method-name="checkCanChangeShipmentStatusPacked" xml-resource="org/ofbiz/shipment/shipment/ShipmentServices.xml"/>

        <!-- get orderHeader -->
        <make-value entity-name="OrderHeader" value-name="orderHeaderLookupPk"/>
        <set-pk-fields value-name="orderHeaderLookupPk" map-name="parameters"/>
        <find-by-primary-key map-name="orderHeaderLookupPk" value-name="orderHeader"/>
        
        <!-- make sure the order is NOT of orderTypeId: SALES_ORDER -->
        <if-compare field-name="orderTypeId" map-name="orderHeader" operator="equals" value="SALES_ORDER">
            <string-to-list string="Not issuing Order Item to shipment [${parameters.shipmentId}] because the order is a Sales Order for order [${orderItemInventoryRes.orderId}] order item [${orderItemInventoryRes.orderItemSeqId}] inventoryItem [${orderItemInventoryRes.inventoryItemId}] (should call the issueOrderItemInventoryResToShipment service)" list-name="error_list"/>
        </if-compare>
        <check-errors/>

        <!-- get orderItem -->
        <make-value entity-name="OrderItem" value-name="orderItemLookupPk"/>
        <set-pk-fields value-name="orderItemLookupPk" map-name="parameters"/>
        <find-by-primary-key map-name="orderItemLookupPk" value-name="orderItem"/>
        <!-- get shipment -->
        <make-value entity-name="Shipment" value-name="shipmentLookupPk"/>
        <set-pk-fields value-name="shipmentLookupPk" map-name="parameters"/>
        <find-by-primary-key map-name="shipmentLookupPk" value-name="shipment"/>
        
        <call-simple-method method-name="findCreateIssueShipmentItem"/>
        <call-simple-method method-name="callCreateItemIssuance"/>
        <call-simple-method method-name="associateIssueRoles"/>
    </simple-method>
    
    <simple-method method-name="issueOrderItemInventoryResToShipment" short-description="Issue OrderItemInventoryRes to Shipment">
        <string-to-field string="Issue OrderItemInventoryRes to Shipment" field-name="operationName"/>
        <check-permission permission="FACILITY" action="_CREATE">
            <fail-message message="Security Error: to run ${operationName} you must have the FACILITY_CREATE or FACILITY_ADMIN permission"/>
        </check-permission>
        <check-permission permission="FACILITY" action="_UPDATE">
            <fail-message message="Security Error: to run ${operationName} you must have the FACILITY_UPDATE or FACILITY_ADMIN permission"/>
        </check-permission>
        <call-simple-method method-name="checkCanChangeShipmentStatusPacked" xml-resource="org/ofbiz/shipment/shipment/ShipmentServices.xml"/>

        <!-- get orderItemInventoryRes -->
        <make-value entity-name="OrderItemInventoryRes" value-name="orderItemInventoryResLookupPk"/>
        <set-pk-fields value-name="orderItemInventoryResLookupPk" map-name="parameters"/>
        <find-by-primary-key map-name="orderItemInventoryResLookupPk" value-name="orderItemInventoryRes"/>
        <!-- get orderHeader -->
        <make-value entity-name="OrderHeader" value-name="orderHeaderLookupPk"/>
        <set-pk-fields value-name="orderHeaderLookupPk" map-name="parameters"/>
        <find-by-primary-key map-name="orderHeaderLookupPk" value-name="orderHeader"/>
        
        <!-- make sure the order is of orderTypeId: SALES_ORDER -->
        <if-compare field-name="orderTypeId" map-name="orderHeader" operator="not-equals" value="SALES_ORDER">
            <string-to-list string="Not issuing Order Item Inventory Reservation to shipment [${parameters.shipmentId}] because the order is not a Sales Order for order [${orderItemInventoryRes.orderId}] order item [${orderItemInventoryRes.orderItemSeqId}] inventoryItem [${orderItemInventoryRes.inventoryItemId}] (should call the issueOrderItemToShipment service)" list-name="error_list"/>
        </if-compare>

        <!-- make sure specified quantity is not empty -->
        <if-empty field-name="parameters.quantity">
            <string-to-list string="Not issuing Order Item Inventory Reservation to shipment [${parameters.shipmentId}] because the quantity to issue is empty for order [${orderItemInventoryRes.orderId}] order item [${orderItemInventoryRes.orderItemSeqId}] inventoryItem [${orderItemInventoryRes.inventoryItemId}]" list-name="error_list"/>
        </if-empty>
        <!-- make sure specified quantity is not less than or equal to 0 -->
        <if-compare field-name="parameters.quantity" operator="less-equals" value="0" type="Double">
            <string-to-list string="Not issuing Order Item Inventory Reservation to shipment [${parameters.shipmentId}] because the quantity to issue [${parameters.quantity}] is less than or equal to 0 for order [${orderItemInventoryRes.orderId}] order item [${orderItemInventoryRes.orderItemSeqId}] inventoryItem [${orderItemInventoryRes.inventoryItemId}]" list-name="error_list"/>
        </if-compare>
        <!-- make sure specified quantity is not greater than reserved quantity left to be issued, ie orderItemInventoryRes.quantity -->
        <if-compare-field field-name="parameters.quantity" operator="greater" to-field-name="orderItemInventoryRes.quantity" type="Double">
            <string-to-list string="Not issuing Order Item Inventory Reservation to shipment [${parameters.shipmentId}] because the quantity to issue [${parameters.quantity}] is greater than the quantity left to issue [${orderItemInventoryRes.quantity}] for order [${orderItemInventoryRes.orderId}] order item [${orderItemInventoryRes.orderItemSeqId}] inventoryItem [${orderItemInventoryRes.inventoryItemId}]" list-name="error_list"/>
        </if-compare-field>

        <check-errors/>

        <!-- get orderItem -->
        <make-value entity-name="OrderItem" value-name="orderItemLookupPk"/>
        <set-pk-fields value-name="orderItemLookupPk" map-name="parameters"/>
        <find-by-primary-key map-name="orderItemLookupPk" value-name="orderItem"/>
        <!-- get inventoryItem -->
        <make-value entity-name="InventoryItem" value-name="inventoryItemLookupPk"/>
        <set-pk-fields value-name="inventoryItemLookupPk" map-name="parameters"/>
        <find-by-primary-key map-name="inventoryItemLookupPk" value-name="inventoryItem"/>
        <!-- get shipment -->
        <make-value entity-name="Shipment" value-name="shipmentLookupPk"/>
        <set-pk-fields value-name="shipmentLookupPk" map-name="parameters"/>
        <find-by-primary-key map-name="shipmentLookupPk" value-name="shipment"/>
        
        <call-simple-method method-name="findCreateIssueShipmentItem"/>
        <call-simple-method method-name="callCreateItemIssuance"/>
        <call-simple-method method-name="associateIssueRoles"/>
        
        <!-- decrement quantity still reserved -->
        <calculate field-name="quantity" map-name="orderItemInventoryRes">
            <calcop operator="subtract">
                <calcop operator="get" field-name="quantity" map-name="orderItemInventoryRes"/>
                <calcop operator="get" field-name="quantity" map-name="parameters"/>
            </calcop>
        </calculate>
        <if-compare value="0" operator="equals" field-name="quantity" map-name="orderItemInventoryRes" type="Double">
            <!-- if none left reserved, remove OIIR -->
            <remove-value value-name="orderItemInventoryRes"/>
            <!-- if there are no more OIIRs for the orderItem, set the orderItem.statusId to ITEM_COMPLETED -->
            <get-related value-name="orderItem" relation-name="OrderItemInventoryRes" list-name="otherOiirs"/>
            <if-empty field-name="otherOiirs">
                <string-to-field string="ITEM_COMPLETED" field-name="statusId" map-name="changeOrderItemStatusMap"/>
                <field-to-field field-name="orderId" map-name="orderItem" to-map-name="changeOrderItemStatusMap"/>
                <field-to-field field-name="orderItemSeqId" map-name="orderItem" to-map-name="changeOrderItemStatusMap"/>
                <call-service service-name="changeOrderItemStatus" in-map-name="changeOrderItemStatusMap"/>
            </if-empty>
        <else>
            <store-value value-name="orderItemInventoryRes"/>
        </else>
        </if-compare>
        
        <!-- Decrement InventoryItem quantityOnHand -->
        <calculate field-name="quantityOnHand" map-name="inventoryItem">
            <calcop operator="subtract">
                <calcop operator="get" field-name="quantityOnHand" map-name="inventoryItem"/>
                <calcop operator="get" field-name="quantity" map-name="parameters"/>
            </calcop>
        </calculate>
        <store-value value-name="inventoryItem"/>
    </simple-method>

    <!-- some inline methods for the issuance process -->
    <simple-method method-name="findCreateIssueShipmentItem" short-description="Find or Create ShipmentItem to Issue To - meant to be called in-line">
        <!-- try to find an existing shipmentItem and attach to it, if none found create a new shipmentItem -->
        <!-- if there is NO productId on the orderItem, ALWAYS create a new shipmentItem -->
        <if-not-empty field-name="productId" map-name="orderItem">
            <field-to-field field-name="productId" map-name="orderItem" to-map-name="shipmentItemLookup"/>
            <field-to-field field-name="shipmentId" map-name="parameters" to-map-name="shipmentItemLookup"/>
            <string-to-list string="shipmentItemSeqId" list-name="shipmentItemOrder"/>
            <find-by-and entity-name="ShipmentItem" list-name="shipmentItems" map-name="shipmentItemLookup" order-by-list-name="shipmentItemOrder"/>
            <first-from-list entry-name="shipmentItem" list-name="shipmentItems"/>
        </if-not-empty>
        
        <if-empty field-name="shipmentItem">
            <field-to-field field-name="productId" map-name="orderItem" to-map-name="shipmentItemCreate"/>
            <field-to-field field-name="shipmentId" map-name="parameters" to-map-name="shipmentItemCreate"/>
            <field-to-field field-name="quantity" map-name="parameters" to-map-name="shipmentItemCreate"/>
            <call-service service-name="createShipmentItem" in-map-name="shipmentItemCreate">
                <result-to-field result-name="shipmentItemSeqId" map-name="shipmentItemLookupPk"/>
            </call-service>
            <field-to-field field-name="shipmentId" map-name="parameters" to-map-name="shipmentItemLookupPk"/>
            <find-by-primary-key entity-name="ShipmentItem" map-name="shipmentItemLookupPk" value-name="shipmentItem"/>
        <else>
            <calculate field-name="quantity" map-name="shipmentItem">
                <calcop operator="add" field-name="quantity" map-name="shipmentItem">
                    <calcop operator="get" field-name="quantity" map-name="parameters"/>
                </calcop>
            </calculate>
            <store-value value-name="shipmentItem"/>
        </else>
        </if-empty>
        <field-to-result field-name="shipmentItemSeqId" map-name="shipmentItem" result-name="shipmentItemSeqId"/>
    </simple-method>
    <simple-method method-name="callCreateItemIssuance" short-description="Call Create ItemIssuance - meant to be called in-line">
        <!-- create the ItemIssuance -->
        <field-to-field field-name="quantity" map-name="parameters" to-map-name="itemIssuanceCreate"/>
        <field-to-field field-name="shipmentId" map-name="shipmentItem" to-map-name="itemIssuanceCreate"/>
        <field-to-field field-name="shipmentItemSeqId" map-name="shipmentItem" to-map-name="itemIssuanceCreate"/>
        <field-to-field field-name="orderId" map-name="orderItem" to-map-name="itemIssuanceCreate"/>
        <field-to-field field-name="orderItemSeqId" map-name="orderItem" to-map-name="itemIssuanceCreate"/>
        <if-not-empty field-name="orderItemInventoryRes">
            <!-- if this is coming from an OrderItem issue instead of an OrderItemInventoryRes issue, we won't have this info -->
            <field-to-field field-name="inventoryItemId" map-name="orderItemInventoryRes" to-map-name="itemIssuanceCreate"/>
        </if-not-empty>
        <field-to-field field-name="userLoginId" map-name="userLogin" to-field-name="issuedByUserLoginId" to-map-name="itemIssuanceCreate"/>
        <call-service service-name="createItemIssuance" in-map-name="itemIssuanceCreate" >
            <result-to-field result-name="itemIssuanceId"/>
        </call-service>
        <field-to-result field-name="itemIssuanceId"/>
    </simple-method>
    <simple-method method-name="associateIssueRoles" short-description="Associate Roles for ItemIssuance - meant to be called in-line">
        <!-- make sure the party is in the PACKER role -->
        <make-value entity-name="PartyRole" value-name="partyRole"/>
        <field-to-field field-name="partyId" map-name="userLogin" to-map-name="partyRole"/>
        <string-to-field string="PACKER" field-name="roleTypeId" map-name="partyRole"/>
        <find-by-primary-key entity-name="PartyRole" map-name="partyRole" value-name="checkPartyRole"/>
        <if-empty field-name="checkPartyRole">
            <create-value value-name="partyRole"/>
        </if-empty>
        
        <!-- Add ItemIssuanceRole for party that issues this... -->
        <env-to-field env-name="itemIssuanceId" map-name="itemIssuanceRoleCreate"/>
        <field-to-field field-name="partyId" map-name="userLogin" to-map-name="itemIssuanceRoleCreate"/>
        <string-to-field string="PACKER" field-name="roleTypeId" map-name="itemIssuanceRoleCreate"/>
        <call-service service-name="createItemIssuanceRole" in-map-name="itemIssuanceRoleCreate"/>
    </simple-method>
</simple-methods>
