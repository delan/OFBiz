<xsd:schema xmlns:xsd='http://www.w3.org/2001/XMLSchema'>
<!--
  To refer to this Schema in your XML file, use the following declaration:
-->

<!--
 *  Copyright (c) 2003-2004 The Open For Business Project - www.ofbiz.org
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a 
 *  copy of this software and associated documentation files (the "Software"), 
 *  to deal in the Software without restriction, including without limitation 
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense, 
 *  and/or sell copies of the Software, and to permit persons to whom the 
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included 
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS 
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF 
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY 
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT 
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR 
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *  $Id: $
-->

<!--
    ==================================================
    ========== The Simple Methods Section ==========
    ==================================================
    (see further down for the Simple Map Processor Section)
-->

 <xsd:element name='field'>
  <xsd:complexType>
   <xsd:attribute name='field-name' type='xsd:string' use='required'/>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='type' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='string'>
  <xsd:complexType>
  <xsd:simpleContent>
  <xsd:extension base='xsd:string'>
   <xsd:attribute name='value' type='xsd:string' use='optional'/>
   </xsd:extension>
   </xsd:simpleContent>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='simple-methods'>
  <xsd:complexType>
   <xsd:sequence>
    <xsd:element ref='simple-method' maxOccurs='unbounded'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

<!--
    A simple method can be called in either an event context from the Control
    Servlet (or another event) or in a service context through the Service
    Engine, or any other component that has access to a service dispatcher.

    The field-to-request and field-to-session elements will be IGNORED when
    called in a service context. So, they are ONLY used when called in an event context.

    The field-to-result elements will be ignored in an event context, ie only used in a service.

    The parameter-map-name env entry will contain the HttpRequest parameters for
    running in an event context and and the input context when running in a service.
-->
 <xsd:element name='simple-method'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='call-map-processor'/>
    <xsd:element ref='set-service-fields'/>
    <xsd:element ref='call-service'/>
    <xsd:element ref='call-service-asynch'/>
    <xsd:element ref='call-bsh'/>
    <xsd:element ref='call-simple-method'/>
    <xsd:element ref='check-errors'/>
    <xsd:element ref='add-error'/>
    <xsd:element ref='return'/>
    <xsd:element ref='call-object-method'/>
    <xsd:element ref='call-class-method'/>
    <xsd:element ref='create-object'/>
    <xsd:element ref='field-to-request'/>
    <xsd:element ref='field-to-session'/>
    <xsd:element ref='request-to-field'/>
    <xsd:element ref='request-parameters-to-list'/>
    <xsd:element ref='session-to-field'/>
    <xsd:element ref='webapp-property-to-field'/>
    <xsd:element ref='field-to-result'/>
    <xsd:element ref='map-to-map'/>
    <xsd:element ref='field-to-field'/>
    <xsd:element ref='field-to-list'/>
    <xsd:element ref='list-to-list'/>
    <xsd:element ref='env-to-env'/>
    <xsd:element ref='env-to-field'/>
    <xsd:element ref='field-to-env'/>
    <xsd:element ref='string-append'/>
    <xsd:element ref='string-to-field'/>
    <xsd:element ref='string-to-list'/>
    <xsd:element ref='to-string'/>
    <xsd:element ref='clear-field'/>
    <xsd:element ref='iterate'/>
    <xsd:element ref='iterate-map'/>
    <xsd:element ref='first-from-list'/>
    <xsd:element ref='now-timestamp-to-env'/>
    <xsd:element ref='now-date-to-env'/>
    <xsd:element ref='sequenced-id-to-env'/>
    <xsd:element ref='make-next-seq-id'/>
    <xsd:element ref='set-current-user-login'/>
    <xsd:element ref='find-by-primary-key'/>
    <xsd:element ref='find-by-and'/>
    <xsd:element ref='entity-one'/>
    <xsd:element ref='entity-and'/>
    <xsd:element ref='entity-condition'/>
    <xsd:element ref='entity-count'/>
    <xsd:element ref='get-related-one'/>
    <xsd:element ref='get-related'/>
    <xsd:element ref='filter-list-by-and'/>
    <xsd:element ref='filter-list-by-date'/>
    <xsd:element ref='order-value-list'/>
    <xsd:element ref='make-value'/>
    <xsd:element ref='clone-value'/>
    <xsd:element ref='create-value'/>
    <xsd:element ref='store-value'/>
    <xsd:element ref='refresh-value'/>
    <xsd:element ref='remove-value'/>
    <xsd:element ref='remove-related'/>
    <xsd:element ref='remove-by-and'/>
    <xsd:element ref='clear-cache-line'/>
    <xsd:element ref='clear-entity-caches'/>
    <xsd:element ref='set-pk-fields'/>
    <xsd:element ref='set-nonpk-fields'/>
    <xsd:element ref='store-list'/>
    <xsd:element ref='remove-list'/>
    <xsd:element ref='transaction-begin'/>
    <xsd:element ref='transaction-commit'/>
    <xsd:element ref='transaction-rollback'/>
    <xsd:element ref='if'/>
    <xsd:element ref='if-validate-method'/>
    <xsd:element ref='if-instance-of'/>
    <xsd:element ref='if-compare'/>
    <xsd:element ref='if-compare-field'/>
    <xsd:element ref='if-regexp'/>
    <xsd:element ref='if-empty'/>
    <xsd:element ref='if-not-empty'/>
    <xsd:element ref='if-has-permission'/>
    <xsd:element ref='check-permission'/>
    <xsd:element ref='check-id'/>
    <xsd:element ref='property-to-field'/>
    <xsd:element ref='log'/>
    <xsd:element ref='calculate'/>
   </xsd:choice>
   <xsd:attribute name='method-name' type='xsd:string' use='required'/>
   <xsd:attribute name='short-description' type='xsd:string' use='required'/>
   <xsd:attribute name='login-required' default='true'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='use-transaction' default='true'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='default-error-code' type='xsd:string' default='error'/>
   <xsd:attribute name='default-success-code' type='xsd:string' default='success'/>
   <xsd:attribute name='parameter-map-name' type='xsd:string' default='parameters'/>
   <xsd:attribute name='event-request-object-name' type='xsd:string' default='request'/>
   <xsd:attribute name='event-response-object-name' type='xsd:string' default='response'/>
   <xsd:attribute name='event-response-code-name' type='xsd:string' default='_response_code_'/>
   <xsd:attribute name='event-error-message-name' type='xsd:string' default='_error_message_'/>
   <xsd:attribute name='event-error-message-name' type='xsd:string' default='_error_message_list_'/>
   <xsd:attribute name='event-event-message-name' type='xsd:string' default='_event_message_'/>
   <xsd:attribute name='event-event-message-name' type='xsd:string' default='_event_message_list_'/>
   <xsd:attribute name='service-response-message-name' type='xsd:string' default='responseMessage'/>
   <xsd:attribute name='service-error-message-name' type='xsd:string' default='errorMessage'/>
   <xsd:attribute name='service-error-message-list-name' type='xsd:string' default='errorMessageList'/>
   <xsd:attribute name='service-error-message-map-name' type='xsd:string' default='errorMessageMap'/>
   <xsd:attribute name='service-success-message-name' type='xsd:string' default='successMessage'/>
   <xsd:attribute name='service-success-message-list-name' type='xsd:string' default='successMessageList'/>
   <xsd:attribute name='locale-name' type='xsd:string' default='locale'/>
   <xsd:attribute name='delegator-name' type='xsd:string' default='delegator'/>
   <xsd:attribute name='security-name' type='xsd:string' default='security'/>
   <xsd:attribute name='dispatcher-name' type='xsd:string' default='dispatcher'/>
   <xsd:attribute name='user-login-name' type='xsd:string' default='userLogin'/>
  </xsd:complexType>
 </xsd:element>

<!--
    If both an external and an inline map-processor are specified, the external
    one will be called first, allowing the inline one to override its behavior
-->
 <xsd:element name='call-map-processor'>
  <xsd:complexType>
   <xsd:sequence>
    <xsd:element ref='simple-map-processor' minOccurs='0' maxOccurs='1'/>
   </xsd:sequence>
   <xsd:attribute name='xml-resource' type='xsd:string' use='optional'/>
   <xsd:attribute name='processor-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='in-map-name' type='xsd:string' use='required'/>
   <xsd:attribute name='out-map-name' type='xsd:string' use='required'/>
   <xsd:attribute name='error-list-name' type='xsd:string' default='error_list'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='set-service-fields'>
  <xsd:complexType>
   <xsd:attribute name='service-name' type='xsd:string' use='required'/>
   <xsd:attribute name='map-name' type='xsd:string' use='required'/>
   <xsd:attribute name='to-map-name' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

<!--
    The result-to-request and result-to-session elements will be IGNORED when
    called in a service context. So, they are ONLY used when called in an event context.
-->
 <xsd:element name='call-service'>
  <xsd:complexType>
   <xsd:sequence>
    <xsd:element ref='error-prefix' minOccurs='0' maxOccurs='1'/>
    <xsd:element ref='error-suffix' minOccurs='0' maxOccurs='1'/>
    <xsd:element ref='success-prefix' minOccurs='0' maxOccurs='1'/>
    <xsd:element ref='success-suffix' minOccurs='0' maxOccurs='1'/>
    <xsd:element ref='message-prefix' minOccurs='0' maxOccurs='1'/>
    <xsd:element ref='message-suffix' minOccurs='0' maxOccurs='1'/>
    <xsd:element ref='default-message' minOccurs='0' maxOccurs='1'/>
    <xsd:choice minOccurs='0' maxOccurs='unbounded'>
     <xsd:element ref='results-to-map'/>
     <xsd:element ref='result-to-field'/>
     <xsd:element ref='result-to-request'/>
     <xsd:element ref='result-to-session'/>
     <xsd:element ref='result-to-result'/>
    </xsd:choice>
   </xsd:sequence>
   <xsd:attribute name='service-name' type='xsd:string' use='required'/>
   <xsd:attribute name='in-map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='include-user-login' default='true'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='break-on-error' default='true'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='error-code' type='xsd:string' default='error'/>
   <xsd:attribute name='success-code' type='xsd:string' default='success'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='error-prefix'>
  <xsd:complexType>
  <xsd:simpleContent>
  <xsd:extension base='xsd:string'>
   <xsd:attribute name='resource' type='xsd:string' use='optional'/>
   <xsd:attribute name='property' type='xsd:string' use='optional'/>
   </xsd:extension>
   </xsd:simpleContent>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='error-suffix'>
  <xsd:complexType>
  <xsd:simpleContent>
  <xsd:extension base='xsd:string'>
   <xsd:attribute name='resource' type='xsd:string' use='optional'/>
   <xsd:attribute name='property' type='xsd:string' use='optional'/>
   </xsd:extension>
   </xsd:simpleContent>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='success-prefix'>
  <xsd:complexType>
  <xsd:simpleContent>
  <xsd:extension base='xsd:string'>
   <xsd:attribute name='resource' type='xsd:string' use='optional'/>
   <xsd:attribute name='property' type='xsd:string' use='optional'/>
   </xsd:extension>
   </xsd:simpleContent>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='success-suffix'>
  <xsd:complexType>
  <xsd:simpleContent>
  <xsd:extension base='xsd:string'>
   <xsd:attribute name='resource' type='xsd:string' use='optional'/>
   <xsd:attribute name='property' type='xsd:string' use='optional'/>
   </xsd:extension>
   </xsd:simpleContent>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='message-prefix'>
  <xsd:complexType>
  <xsd:simpleContent>
  <xsd:extension base='xsd:string'>
   <xsd:attribute name='resource' type='xsd:string' use='optional'/>
   <xsd:attribute name='property' type='xsd:string' use='optional'/>
   </xsd:extension>
   </xsd:simpleContent>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='message-suffix'>
  <xsd:complexType>
  <xsd:simpleContent>
  <xsd:extension base='xsd:string'>
   <xsd:attribute name='resource' type='xsd:string' use='optional'/>
   <xsd:attribute name='property' type='xsd:string' use='optional'/>
   </xsd:extension>
   </xsd:simpleContent>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='default-message'>
  <xsd:complexType>
  <xsd:simpleContent>
  <xsd:extension base='xsd:string'>
   <xsd:attribute name='resource' type='xsd:string' use='optional'/>
   <xsd:attribute name='property' type='xsd:string' use='optional'/>
   </xsd:extension>
   </xsd:simpleContent>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='results-to-map'>
  <xsd:complexType>
   <xsd:attribute name='map-name' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='result-to-field'>
  <xsd:complexType>
   <xsd:attribute name='result-name' type='xsd:string' use='required'/>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='field-name' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='result-to-request'>
  <xsd:complexType>
   <xsd:attribute name='result-name' type='xsd:string' use='required'/>
   <xsd:attribute name='request-name' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='result-to-session'>
  <xsd:complexType>
   <xsd:attribute name='result-name' type='xsd:string' use='required'/>
   <xsd:attribute name='session-name' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <!-- NOTE that these attributes are somewhat confusing: result-name is the name of the field in the result of this service call that the value comes FROM; 
     service-result-name is the name of the field in the result of this simple-method called as a service where the value goes TO;
     in other words FROM result-name and TO service-result-name -->
 <xsd:element name='result-to-result'>
  <xsd:complexType>
   <xsd:attribute name='result-name' type='xsd:string' use='required'/>
   <xsd:attribute name='service-result-name' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

<!--
Calls a service asynchronously and ignores the result, so no return messages
are used; that doesn't mean no errors will result, but they would just be
system errors like database failures, etc which all have system error messages.
-->
 <xsd:element name='call-service-asynch'>
  <xsd:complexType>
   <xsd:attribute name='service-name' type='xsd:string' use='required'/>
   <xsd:attribute name='in-map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='include-user-login' default='true'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
  </xsd:complexType>
 </xsd:element>

<!--
Runs an external bsh script from the classpath if resource is specified and
then runs the inlined bsh script if any is specified.

The bsh context is the current simple-method environment including maps, lists
and special objects whose names are defined in the simple-method attributes.

The current env cannot be modified, but if a Map is returned by the bsh block
the entries in the map will be put into the current env.

Error messages go on the error list and are handled with the check-errors tag.
-->
 <xsd:element name='call-bsh'>
  <xsd:complexType>
  <xsd:simpleContent>
  <xsd:extension base='xsd:string'>
   <xsd:attribute name='resource' type='xsd:string' use='optional'/>
   <xsd:attribute name='error-list-name' type='xsd:string' default='error_list'/>
   </xsd:extension>
   </xsd:simpleContent>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='call-simple-method'>
  <xsd:complexType>
   <xsd:attribute name='xml-resource' type='xsd:string' use='optional'/>
   <xsd:attribute name='method-name' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='check-errors'>
  <xsd:complexType>
   <xsd:sequence>
    <xsd:element ref='error-prefix' minOccurs='0' maxOccurs='1'/>
    <xsd:element ref='error-suffix' minOccurs='0' maxOccurs='1'/>
    <xsd:element ref='message-prefix' minOccurs='0' maxOccurs='1'/>
    <xsd:element ref='message-suffix' minOccurs='0' maxOccurs='1'/>
   </xsd:sequence>
   <xsd:attribute name='error-code' type='xsd:string' default='error'/>
   <xsd:attribute name='error-list-name' type='xsd:string' default='error_list'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='add-error'>
  <xsd:complexType>
   <xsd:choice>
    <xsd:element ref='fail-message'/>
    <xsd:element ref='fail-property'/>
   </xsd:choice>
   <xsd:attribute name='error-list-name' type='xsd:string' default='error_list'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='return'>
  <xsd:complexType>
   <xsd:attribute name='response-code' type='xsd:string' default='success'/>
  </xsd:complexType>
 </xsd:element>

<!-- Operations to call Java methods and create Java objects -->

 <xsd:element name='call-object-method'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='string'/>
    <xsd:element ref='field'/>
   </xsd:choice>
   <xsd:attribute name='obj-field-name' type='xsd:string' use='required'/>
   <xsd:attribute name='obj-map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='method-name' type='xsd:string' use='required'/>
   <xsd:attribute name='ret-field-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='ret-map-name' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='call-class-method'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='string'/>
    <xsd:element ref='field'/>
   </xsd:choice>
   <xsd:attribute name='class-name' type='xsd:string' use='required'/>
   <xsd:attribute name='method-name' type='xsd:string' use='required'/>
   <xsd:attribute name='ret-field-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='ret-map-name' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='create-object'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='string'/>
    <xsd:element ref='field'/>
   </xsd:choice>
   <xsd:attribute name='class-name' type='xsd:string' use='required'/>
   <xsd:attribute name='field-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

<!-- Operations to copy map fields in the current env to context specific containers -->

 <!-- Event specific operations -->
 <xsd:element name='field-to-request'>
  <xsd:complexType>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='field-name' type='xsd:string' use='required'/>
   <xsd:attribute name='request-name' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='field-to-session'>
  <xsd:complexType>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='field-name' type='xsd:string' use='required'/>
   <xsd:attribute name='session-name' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='request-to-field'>
  <xsd:complexType>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='field-name' type='xsd:string' use='required'/>
   <xsd:attribute name='default' type='xsd:string' use='optional'/>
   <xsd:attribute name='request-name' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='request-parameters-to-list'>
  <xsd:complexType>
   <xsd:attribute name='request-name' type='xsd:string' use='required'/>
   <xsd:attribute name='list-name' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='session-to-field'>
  <xsd:complexType>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='field-name' type='xsd:string' use='required'/>
   <xsd:attribute name='default' type='xsd:string' use='optional'/>
   <xsd:attribute name='session-name' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='webapp-property-to-field'>
  <xsd:complexType>
   <xsd:attribute name='resource' type='xsd:string' use='required'/>
   <xsd:attribute name='property' type='xsd:string' use='required'/>
   <xsd:attribute name='default' type='xsd:string' use='optional'/>
   <xsd:attribute name='field-name' type='xsd:string' use='required'/>
   <xsd:attribute name='session-name' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <!-- Service specific operations -->
 <xsd:element name='field-to-result'>
  <xsd:complexType>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='field-name' type='xsd:string' use='required'/>
   <xsd:attribute name='result-name' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <!-- Environment specific operations -->
 <xsd:element name='map-to-map'>
  <xsd:complexType>
   <xsd:attribute name='map-name' type='xsd:string' use='required'/>
   <xsd:attribute name='to-map-name' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='field-to-field'>
  <xsd:complexType>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='field-name' type='xsd:string' use='required'/>
   <xsd:attribute name='to-map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='to-field-name' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='field-to-list'>
  <xsd:complexType>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='field-name' type='xsd:string' use='required'/>
   <xsd:attribute name='list-name' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='list-to-list'>
  <xsd:complexType>
   <xsd:attribute name='list-name' type='xsd:string' use='required'/>
   <xsd:attribute name='to-list-name' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='env-to-env'>
  <xsd:complexType>
   <xsd:attribute name='env-name' type='xsd:string' use='required'/>
   <xsd:attribute name='to-env-name' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='env-to-field'>
  <xsd:complexType>
   <xsd:attribute name='env-name' type='xsd:string' use='required'/>
   <xsd:attribute name='field-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='field-to-env'>
  <xsd:complexType>
   <xsd:attribute name='field-name' type='xsd:string' use='required'/>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='env-name' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <!-- NOTE: the prefix and suffix will only be used IFF the current string and the string to be appended are both not empty -->
 <xsd:element name='string-append'>
  <xsd:complexType>
   <xsd:attribute name='field-name' type='xsd:string' use='required'/>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='string' type='xsd:string' use='required'/>
   <xsd:attribute name='arg-list-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='prefix' type='xsd:string' use='optional'/>
   <xsd:attribute name='suffix' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='string-to-field'>
  <xsd:complexType>
   <xsd:attribute name='string' type='xsd:string' use='required'/>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='field-name' type='xsd:string' use='required'/>
   <xsd:attribute name='arg-list-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='message-field-name' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='string-to-list'>
  <xsd:complexType>
   <xsd:attribute name='string' type='xsd:string' use='required'/>
   <xsd:attribute name='list-name' type='xsd:string' use='required'/>
   <xsd:attribute name='arg-list-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='message-field-name' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='to-string'>
  <xsd:complexType>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='field-name' type='xsd:string' use='required'/>
   <xsd:attribute name='format' type='xsd:string' use='optional'/>
   <xsd:attribute name='numeric-padding' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='clear-field'>
  <xsd:complexType>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='field-name' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='iterate'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='call-map-processor'/>
    <xsd:element ref='set-service-fields'/>
    <xsd:element ref='call-service'/>
    <xsd:element ref='call-service-asynch'/>
    <xsd:element ref='call-bsh'/>
    <xsd:element ref='call-simple-method'/>
    <xsd:element ref='check-errors'/>
    <xsd:element ref='add-error'/>
    <xsd:element ref='return'/>
    <xsd:element ref='call-object-method'/>
    <xsd:element ref='call-class-method'/>
    <xsd:element ref='create-object'/>
    <xsd:element ref='field-to-request'/>
    <xsd:element ref='field-to-session'/>
    <xsd:element ref='request-to-field'/>
    <xsd:element ref='request-parameters-to-list'/>
    <xsd:element ref='session-to-field'/>
    <xsd:element ref='webapp-property-to-field'/>
    <xsd:element ref='field-to-result'/>
    <xsd:element ref='map-to-map'/>
    <xsd:element ref='field-to-field'/>
    <xsd:element ref='field-to-list'/>
    <xsd:element ref='list-to-list'/>
    <xsd:element ref='env-to-env'/>
    <xsd:element ref='env-to-field'/>
    <xsd:element ref='field-to-env'/>
    <xsd:element ref='string-append'/>
    <xsd:element ref='string-to-field'/>
    <xsd:element ref='string-to-list'/>
    <xsd:element ref='to-string'/>
    <xsd:element ref='clear-field'/>
    <xsd:element ref='iterate'/>
    <xsd:element ref='iterate-map'/>
    <xsd:element ref='first-from-list'/>
    <xsd:element ref='now-timestamp-to-env'/>
    <xsd:element ref='now-date-to-env'/>
    <xsd:element ref='sequenced-id-to-env'/>
    <xsd:element ref='make-next-seq-id'/>
    <xsd:element ref='set-current-user-login'/>
    <xsd:element ref='find-by-primary-key'/>
    <xsd:element ref='find-by-and'/>
    <xsd:element ref='entity-one'/>
    <xsd:element ref='entity-and'/>
    <xsd:element ref='entity-condition'/>
    <xsd:element ref='entity-count'/>
    <xsd:element ref='get-related-one'/>
    <xsd:element ref='get-related'/>
    <xsd:element ref='filter-list-by-and'/>
    <xsd:element ref='filter-list-by-date'/>
    <xsd:element ref='order-value-list'/>
    <xsd:element ref='make-value'/>
    <xsd:element ref='clone-value'/>
    <xsd:element ref='create-value'/>
    <xsd:element ref='store-value'/>
    <xsd:element ref='refresh-value'/>
    <xsd:element ref='remove-value'/>
    <xsd:element ref='remove-related'/>
    <xsd:element ref='remove-by-and'/>
    <xsd:element ref='clear-cache-line'/>
    <xsd:element ref='clear-entity-caches'/>
    <xsd:element ref='set-pk-fields'/>
    <xsd:element ref='set-nonpk-fields'/>
    <xsd:element ref='store-list'/>
    <xsd:element ref='remove-list'/>
    <xsd:element ref='transaction-begin'/>
    <xsd:element ref='transaction-commit'/>
    <xsd:element ref='transaction-rollback'/>
    <xsd:element ref='if'/>
    <xsd:element ref='if-validate-method'/>
    <xsd:element ref='if-instance-of'/>
    <xsd:element ref='if-compare'/>
    <xsd:element ref='if-compare-field'/>
    <xsd:element ref='if-regexp'/>
    <xsd:element ref='if-empty'/>
    <xsd:element ref='if-not-empty'/>
    <xsd:element ref='if-has-permission'/>
    <xsd:element ref='check-permission'/>
    <xsd:element ref='check-id'/>
    <xsd:element ref='property-to-field'/>
    <xsd:element ref='log'/>
    <xsd:element ref='calculate'/>
   </xsd:choice>
   <xsd:attribute name='entry-name' type='xsd:string' use='required'/>
   <xsd:attribute name='list-name' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='iterate-map'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='call-map-processor'/>
    <xsd:element ref='set-service-fields'/>
    <xsd:element ref='call-service'/>
    <xsd:element ref='call-service-asynch'/>
    <xsd:element ref='call-bsh'/>
    <xsd:element ref='call-simple-method'/>
    <xsd:element ref='check-errors'/>
    <xsd:element ref='add-error'/>
    <xsd:element ref='return'/>
    <xsd:element ref='call-object-method'/>
    <xsd:element ref='call-class-method'/>
    <xsd:element ref='create-object'/>
    <xsd:element ref='field-to-request'/>
    <xsd:element ref='field-to-session'/>
    <xsd:element ref='request-to-field'/>
    <xsd:element ref='request-parameters-to-list'/>
    <xsd:element ref='session-to-field'/>
    <xsd:element ref='webapp-property-to-field'/>
    <xsd:element ref='field-to-result'/>
    <xsd:element ref='map-to-map'/>
    <xsd:element ref='field-to-field'/>
    <xsd:element ref='field-to-list'/>
    <xsd:element ref='list-to-list'/>
    <xsd:element ref='env-to-env'/>
    <xsd:element ref='env-to-field'/>
    <xsd:element ref='field-to-env'/>
    <xsd:element ref='string-append'/>
    <xsd:element ref='string-to-field'/>
    <xsd:element ref='string-to-list'/>
    <xsd:element ref='to-string'/>
    <xsd:element ref='clear-field'/>
    <xsd:element ref='iterate'/>
    <xsd:element ref='iterate-map'/>
    <xsd:element ref='first-from-list'/>
    <xsd:element ref='now-timestamp-to-env'/>
    <xsd:element ref='now-date-to-env'/>
    <xsd:element ref='sequenced-id-to-env'/>
    <xsd:element ref='make-next-seq-id'/>
    <xsd:element ref='set-current-user-login'/>
    <xsd:element ref='find-by-primary-key'/>
    <xsd:element ref='find-by-and'/>
    <xsd:element ref='entity-one'/>
    <xsd:element ref='entity-and'/>
    <xsd:element ref='entity-condition'/>
    <xsd:element ref='entity-count'/>
    <xsd:element ref='get-related-one'/>
    <xsd:element ref='get-related'/>
    <xsd:element ref='filter-list-by-and'/>
    <xsd:element ref='filter-list-by-date'/>
    <xsd:element ref='order-value-list'/>
    <xsd:element ref='make-value'/>
    <xsd:element ref='clone-value'/>
    <xsd:element ref='create-value'/>
    <xsd:element ref='store-value'/>
    <xsd:element ref='refresh-value'/>
    <xsd:element ref='remove-value'/>
    <xsd:element ref='remove-related'/>
    <xsd:element ref='remove-by-and'/>
    <xsd:element ref='clear-cache-line'/>
    <xsd:element ref='clear-entity-caches'/>
    <xsd:element ref='set-pk-fields'/>
    <xsd:element ref='set-nonpk-fields'/>
    <xsd:element ref='store-list'/>
    <xsd:element ref='remove-list'/>
    <xsd:element ref='transaction-begin'/>
    <xsd:element ref='transaction-commit'/>
    <xsd:element ref='transaction-rollback'/>
    <xsd:element ref='if'/>
    <xsd:element ref='if-validate-method'/>
    <xsd:element ref='if-instance-of'/>
    <xsd:element ref='if-compare'/>
    <xsd:element ref='if-compare-field'/>
    <xsd:element ref='if-regexp'/>
    <xsd:element ref='if-empty'/>
    <xsd:element ref='if-not-empty'/>
    <xsd:element ref='if-has-permission'/>
    <xsd:element ref='check-permission'/>
    <xsd:element ref='check-id'/>
    <xsd:element ref='property-to-field'/>
    <xsd:element ref='log'/>
    <xsd:element ref='calculate'/>
   </xsd:choice>
   <xsd:attribute name='key-name' type='xsd:string' use='required'/>
   <xsd:attribute name='value-name' type='xsd:string' use='required'/>
   <xsd:attribute name='map-name' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='first-from-list'>
  <xsd:complexType>
   <xsd:attribute name='entry-name' type='xsd:string' use='required'/>
   <xsd:attribute name='list-name' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <!--
 These operations are used to interact with a data source through the entity
 engine and facilitate related operations.
 -->
 <xsd:element name='transaction-begin'>
  <xsd:complexType>
   <xsd:attribute name='began-transaction-name' type='xsd:string' default='beganTransaction'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='transaction-commit'>
  <xsd:complexType>
   <xsd:attribute name='began-transaction-name' type='xsd:string' default='beganTransaction'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='transaction-rollback'>
  <xsd:complexType>
   <xsd:attribute name='began-transaction-name' type='xsd:string' default='beganTransaction'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='now-timestamp-to-env'>
  <xsd:complexType>
   <xsd:attribute name='env-name' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='now-date-to-env'>
  <xsd:complexType>
   <xsd:attribute name='env-name' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='sequenced-id-to-env'>
  <xsd:complexType>
   <xsd:attribute name='sequence-name' type='xsd:string' use='required'/>
   <xsd:attribute name='env-name' type='xsd:string' use='required'/>
   <xsd:attribute name='get-long-only' default='false'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='stagger-max' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='make-next-seq-id'>
  <xsd:complexType>
   <xsd:attribute name='value-name' type='xsd:string' use='required'/>
   <xsd:attribute name='seq-field-name' type='xsd:string' use='required'/>
   <xsd:attribute name='numeric-padding' type='xsd:string' default='5'/>
   <xsd:attribute name='increment-by' type='xsd:string' default='1'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='set-current-user-login'>
  <xsd:complexType>
   <xsd:attribute name='value-name' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='find-by-primary-key'>
  <xsd:complexType>
   <xsd:attribute name='entity-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='map-name' type='xsd:string' use='required'/>
   <xsd:attribute name='value-name' type='xsd:string' use='required'/>
   <xsd:attribute name='use-cache' default='false'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='fields-to-select-list' type='xsd:string' use='optional'/>
   <xsd:attribute name='delegator-name' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='find-by-and'>
  <xsd:complexType>
   <xsd:attribute name='entity-name' type='xsd:string' use='required'/>
   <xsd:attribute name='map-name' type='xsd:string' use='required'/>
   <xsd:attribute name='order-by-list-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='delegator-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='use-cache' default='false'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='use-iterator' default='false'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='list-name' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='entity-one'>
  <xsd:complexType>
   <xsd:sequence>
    <xsd:element ref='field-map' minOccurs='0' maxOccurs='unbounded'/>
    <xsd:element ref='select-field' minOccurs='0' maxOccurs='unbounded'/>
   </xsd:sequence>
   <xsd:attribute name='entity-name' type='xsd:string' use='required'/>
   <xsd:attribute name='value-name' type='xsd:string' use='required'/>
   <xsd:attribute name='use-cache' default='false'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='auto-field-map' default='true'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='entity-and'>
  <xsd:complexType>
   <xsd:sequence>
    <xsd:element ref='field-map' maxOccurs='unbounded'/>
    <xsd:element ref='select-field' minOccurs='0' maxOccurs='unbounded'/>
    <xsd:element ref='order-by' minOccurs='0' maxOccurs='unbounded'/>
    <xsd:choice minOccurs='0' maxOccurs='1'>
     <xsd:element ref='limit-range'/>
     <xsd:element ref='limit-view'/>
     <xsd:element ref='use-iterator'/>
    </xsd:choice>
   </xsd:sequence>
   <xsd:attribute name='entity-name' type='xsd:string' use='required'/>
   <xsd:attribute name='use-cache' default='false'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='filter-by-date' default='false'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
      <xsd:enumeration value='by-name'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='list-name' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='entity-condition'>
  <xsd:complexType>
   <xsd:sequence>
    <xsd:choice minOccurs='0' maxOccurs='1'>
     <xsd:element ref='condition-expr'/>
     <xsd:element ref='condition-list'/>
    </xsd:choice>
    <xsd:element ref='having-condition-list' minOccurs='0' maxOccurs='1'/>
    <xsd:element ref='select-field' minOccurs='0' maxOccurs='unbounded'/>
    <xsd:element ref='order-by' minOccurs='0' maxOccurs='unbounded'/>
    <xsd:choice minOccurs='0' maxOccurs='1'>
     <xsd:element ref='limit-range'/>
     <xsd:element ref='limit-view'/>
     <xsd:element ref='use-iterator'/>
    </xsd:choice>
   </xsd:sequence>
   <xsd:attribute name='entity-name' type='xsd:string' use='required'/>
   <xsd:attribute name='use-cache' default='false'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='filter-by-date' default='false'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
      <xsd:enumeration value='by-name'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='distinct' default='false'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='delegator-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='list-name' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='condition-list'>
  <xsd:complexType>
   <xsd:choice maxOccurs='unbounded'>
    <xsd:element ref='condition-expr'/>
    <xsd:element ref='condition-list'/>
   </xsd:choice>
   <xsd:attribute name='combine' default='and'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='and'/>
      <xsd:enumeration value='or'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='having-condition-list'>
  <xsd:complexType>
   <xsd:choice maxOccurs='unbounded'>
    <xsd:element ref='condition-expr'/>
    <xsd:element ref='condition-list'/>
   </xsd:choice>
   <xsd:attribute name='combine' default='and'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='and'/>
      <xsd:enumeration value='or'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='condition-expr'>
  <xsd:complexType>
   <xsd:attribute name='field-name' type='xsd:string' use='required'/>
   <xsd:attribute name='operator' default='equals'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='less'/>
      <xsd:enumeration value='greater'/>
      <xsd:enumeration value='less-equals'/>
      <xsd:enumeration value='greater-equals'/>
      <xsd:enumeration value='equals'/>
      <xsd:enumeration value='not-equals'/>
      <xsd:enumeration value='in'/>
      <xsd:enumeration value='between'/>
      <xsd:enumeration value='like'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='env-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='value' type='xsd:string' use='optional'/>
   <xsd:attribute name='ignore-if-null' default='false'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='ignore-if-empty' default='false'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='select-field'>
  <xsd:complexType>
   <xsd:attribute name='field-name' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='order-by'>
  <xsd:complexType>
   <xsd:attribute name='field-name' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='limit-range'>
  <xsd:complexType>
   <xsd:attribute name='start' type='xsd:string' use='required'/>
   <xsd:attribute name='size' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='limit-view'>
  <xsd:complexType>
   <xsd:attribute name='view-index' type='xsd:string' use='required'/>
   <xsd:attribute name='view-size' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='use-iterator'>
  <xsd:complexType/>
 </xsd:element>

 <xsd:element name='field-map'>
  <xsd:complexType>
   <xsd:attribute name='env-name' type='xsd:string' use='required'/>
   <xsd:attribute name='field-name' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='entity-count'>
  <xsd:complexType>
   <xsd:sequence>
    <xsd:choice>
     <xsd:element ref='condition-expr'/>
     <xsd:element ref='condition-list'/>
    </xsd:choice>
    <xsd:element ref='having-condition-list' minOccurs='0' maxOccurs='1'/>
   </xsd:sequence>
   <xsd:attribute name='entity-name' type='xsd:string' use='required'/>
   <xsd:attribute name='delegator-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='count-name' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='get-related-one'>
  <xsd:complexType>
   <xsd:attribute name='value-name' type='xsd:string' use='required'/>
   <xsd:attribute name='relation-name' type='xsd:string' use='required'/>
   <xsd:attribute name='use-cache' default='false'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='to-value-name' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='get-related'>
  <xsd:complexType>
   <xsd:attribute name='value-name' type='xsd:string' use='required'/>
   <xsd:attribute name='relation-name' type='xsd:string' use='required'/>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='order-by-list-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='use-cache' default='false'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='list-name' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='order-value-list'>
  <xsd:complexType>
   <xsd:attribute name='list-name' type='xsd:string' use='required'/>
   <xsd:attribute name='to-list-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='order-by-list-name' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='filter-list-by-and'>
  <xsd:complexType>
   <xsd:attribute name='list-name' type='xsd:string' use='required'/>
   <xsd:attribute name='to-list-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='filter-list-by-date'>
  <xsd:complexType>
   <xsd:attribute name='list-name' type='xsd:string' use='required'/>
   <xsd:attribute name='to-list-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='valid-date-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='from-field-name' type='xsd:string' default='fromDate'/>
   <xsd:attribute name='thru-field-name' type='xsd:string' default='thruDate'/>
   <xsd:attribute name='all-same' default='true'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='make-value'>
  <xsd:complexType>
   <xsd:attribute name='value-name' type='xsd:string' use='required'/>
   <xsd:attribute name='entity-name' type='xsd:string' use='required'/>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='clone-value'>
  <xsd:complexType>
   <xsd:attribute name='value-name' type='xsd:string' use='required'/>
   <xsd:attribute name='new-value-name' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='create-value'>
  <xsd:complexType>
   <xsd:attribute name='value-name' type='xsd:string' use='required'/>
   <xsd:attribute name='do-cache-clear' default='true'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='store-value'>
  <xsd:complexType>
   <xsd:attribute name='value-name' type='xsd:string' use='required'/>
   <xsd:attribute name='do-cache-clear' default='true'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='refresh-value'>
  <xsd:complexType>
   <xsd:attribute name='value-name' type='xsd:string' use='required'/>
   <xsd:attribute name='do-cache-clear' default='true'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='remove-value'>
  <xsd:complexType>
   <xsd:attribute name='value-name' type='xsd:string' use='required'/>
   <xsd:attribute name='do-cache-clear' default='true'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='remove-related'>
  <xsd:complexType>
   <xsd:attribute name='value-name' type='xsd:string' use='required'/>
   <xsd:attribute name='relation-name' type='xsd:string' use='required'/>
   <xsd:attribute name='do-cache-clear' default='true'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='remove-by-and'>
  <xsd:complexType>
   <xsd:attribute name='entity-name' type='xsd:string' use='required'/>
   <xsd:attribute name='map-name' type='xsd:string' use='required'/>
   <xsd:attribute name='do-cache-clear' default='true'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='clear-cache-line'>
  <xsd:complexType>
   <xsd:attribute name='entity-name' type='xsd:string' use='required'/>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='clear-entity-caches'>
  <xsd:complexType/>
 </xsd:element>

 <xsd:element name='set-pk-fields'>
  <xsd:complexType>
   <xsd:attribute name='value-name' type='xsd:string' use='required'/>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='set-if-null' default='true'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='set-nonpk-fields'>
  <xsd:complexType>
   <xsd:attribute name='value-name' type='xsd:string' use='required'/>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='set-if-null' default='true'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='store-list'>
  <xsd:complexType>
   <xsd:attribute name='list-name' type='xsd:string' use='required'/>
   <xsd:attribute name='do-cache-clear' default='true'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='remove-list'>
  <xsd:complexType>
   <xsd:attribute name='list-name' type='xsd:string' use='required'/>
   <xsd:attribute name='do-cache-clear' default='true'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
  </xsd:complexType>
 </xsd:element>

<!--
Operations that conditionally execute blocks within them; they mimic the
simple-map-processor process operations that validate incoming data
-->

 <!-- note that while the definitions for the if-* operations are used, the tags should be empty because of the differing semantics -->
 <xsd:element name='if'>
  <xsd:complexType>
   <xsd:sequence>
    <xsd:element ref='condition'/>
    <xsd:element ref='then'/>
    <xsd:element ref='else-if' minOccurs='0' maxOccurs='unbounded'/>
    <xsd:element ref='else' minOccurs='0' maxOccurs='1'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='condition'>
  <xsd:complexType>
   <xsd:choice>
    <xsd:element ref='or'/>
    <xsd:element ref='xor'/>
    <xsd:element ref='and'/>
    <xsd:element ref='not'/>
    <xsd:element ref='if-validate-method'/>
    <xsd:element ref='if-instance-of'/>
    <xsd:element ref='if-compare'/>
    <xsd:element ref='if-compare-field'/>
    <xsd:element ref='if-empty'/>
    <xsd:element ref='if-regexp'/>
    <xsd:element ref='if-has-permission'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='then'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='call-map-processor'/>
    <xsd:element ref='set-service-fields'/>
    <xsd:element ref='call-service'/>
    <xsd:element ref='call-service-asynch'/>
    <xsd:element ref='call-bsh'/>
    <xsd:element ref='call-simple-method'/>
    <xsd:element ref='check-errors'/>
    <xsd:element ref='add-error'/>
    <xsd:element ref='return'/>
    <xsd:element ref='call-object-method'/>
    <xsd:element ref='call-class-method'/>
    <xsd:element ref='create-object'/>
    <xsd:element ref='field-to-request'/>
    <xsd:element ref='field-to-session'/>
    <xsd:element ref='request-to-field'/>
    <xsd:element ref='request-parameters-to-list'/>
    <xsd:element ref='session-to-field'/>
    <xsd:element ref='webapp-property-to-field'/>
    <xsd:element ref='field-to-result'/>
    <xsd:element ref='map-to-map'/>
    <xsd:element ref='field-to-field'/>
    <xsd:element ref='field-to-list'/>
    <xsd:element ref='list-to-list'/>
    <xsd:element ref='env-to-env'/>
    <xsd:element ref='env-to-field'/>
    <xsd:element ref='field-to-env'/>
    <xsd:element ref='string-append'/>
    <xsd:element ref='string-to-field'/>
    <xsd:element ref='string-to-list'/>
    <xsd:element ref='to-string'/>
    <xsd:element ref='clear-field'/>
    <xsd:element ref='iterate'/>
    <xsd:element ref='iterate-map'/>
    <xsd:element ref='first-from-list'/>
    <xsd:element ref='now-timestamp-to-env'/>
    <xsd:element ref='now-date-to-env'/>
    <xsd:element ref='sequenced-id-to-env'/>
    <xsd:element ref='make-next-seq-id'/>
    <xsd:element ref='set-current-user-login'/>
    <xsd:element ref='find-by-primary-key'/>
    <xsd:element ref='find-by-and'/>
    <xsd:element ref='entity-one'/>
    <xsd:element ref='entity-and'/>
    <xsd:element ref='entity-condition'/>
    <xsd:element ref='entity-count'/>
    <xsd:element ref='get-related-one'/>
    <xsd:element ref='get-related'/>
    <xsd:element ref='filter-list-by-and'/>
    <xsd:element ref='filter-list-by-date'/>
    <xsd:element ref='order-value-list'/>
    <xsd:element ref='make-value'/>
    <xsd:element ref='clone-value'/>
    <xsd:element ref='create-value'/>
    <xsd:element ref='store-value'/>
    <xsd:element ref='refresh-value'/>
    <xsd:element ref='remove-value'/>
    <xsd:element ref='remove-related'/>
    <xsd:element ref='remove-by-and'/>
    <xsd:element ref='clear-cache-line'/>
    <xsd:element ref='clear-entity-caches'/>
    <xsd:element ref='set-pk-fields'/>
    <xsd:element ref='set-nonpk-fields'/>
    <xsd:element ref='store-list'/>
    <xsd:element ref='remove-list'/>
    <xsd:element ref='transaction-begin'/>
    <xsd:element ref='transaction-commit'/>
    <xsd:element ref='transaction-rollback'/>
    <xsd:element ref='if'/>
    <xsd:element ref='if-validate-method'/>
    <xsd:element ref='if-instance-of'/>
    <xsd:element ref='if-compare'/>
    <xsd:element ref='if-compare-field'/>
    <xsd:element ref='if-regexp'/>
    <xsd:element ref='if-empty'/>
    <xsd:element ref='if-not-empty'/>
    <xsd:element ref='if-has-permission'/>
    <xsd:element ref='check-permission'/>
    <xsd:element ref='check-id'/>
    <xsd:element ref='property-to-field'/>
    <xsd:element ref='log'/>
    <xsd:element ref='calculate'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='else-if'>
  <xsd:complexType>
   <xsd:sequence>
    <xsd:element ref='condition'/>
    <xsd:element ref='then'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='else'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='call-map-processor'/>
    <xsd:element ref='set-service-fields'/>
    <xsd:element ref='call-service'/>
    <xsd:element ref='call-service-asynch'/>
    <xsd:element ref='call-bsh'/>
    <xsd:element ref='call-simple-method'/>
    <xsd:element ref='check-errors'/>
    <xsd:element ref='add-error'/>
    <xsd:element ref='return'/>
    <xsd:element ref='call-object-method'/>
    <xsd:element ref='call-class-method'/>
    <xsd:element ref='create-object'/>
    <xsd:element ref='field-to-request'/>
    <xsd:element ref='field-to-session'/>
    <xsd:element ref='request-to-field'/>
    <xsd:element ref='request-parameters-to-list'/>
    <xsd:element ref='session-to-field'/>
    <xsd:element ref='webapp-property-to-field'/>
    <xsd:element ref='field-to-result'/>
    <xsd:element ref='map-to-map'/>
    <xsd:element ref='field-to-field'/>
    <xsd:element ref='field-to-list'/>
    <xsd:element ref='list-to-list'/>
    <xsd:element ref='env-to-env'/>
    <xsd:element ref='env-to-field'/>
    <xsd:element ref='field-to-env'/>
    <xsd:element ref='string-append'/>
    <xsd:element ref='string-to-field'/>
    <xsd:element ref='string-to-list'/>
    <xsd:element ref='to-string'/>
    <xsd:element ref='clear-field'/>
    <xsd:element ref='iterate'/>
    <xsd:element ref='iterate-map'/>
    <xsd:element ref='first-from-list'/>
    <xsd:element ref='now-timestamp-to-env'/>
    <xsd:element ref='now-date-to-env'/>
    <xsd:element ref='sequenced-id-to-env'/>
    <xsd:element ref='make-next-seq-id'/>
    <xsd:element ref='set-current-user-login'/>
    <xsd:element ref='find-by-primary-key'/>
    <xsd:element ref='find-by-and'/>
    <xsd:element ref='entity-one'/>
    <xsd:element ref='entity-and'/>
    <xsd:element ref='entity-condition'/>
    <xsd:element ref='entity-count'/>
    <xsd:element ref='get-related-one'/>
    <xsd:element ref='get-related'/>
    <xsd:element ref='filter-list-by-and'/>
    <xsd:element ref='filter-list-by-date'/>
    <xsd:element ref='order-value-list'/>
    <xsd:element ref='make-value'/>
    <xsd:element ref='clone-value'/>
    <xsd:element ref='create-value'/>
    <xsd:element ref='store-value'/>
    <xsd:element ref='refresh-value'/>
    <xsd:element ref='remove-value'/>
    <xsd:element ref='remove-related'/>
    <xsd:element ref='remove-by-and'/>
    <xsd:element ref='clear-cache-line'/>
    <xsd:element ref='clear-entity-caches'/>
    <xsd:element ref='set-pk-fields'/>
    <xsd:element ref='set-nonpk-fields'/>
    <xsd:element ref='store-list'/>
    <xsd:element ref='remove-list'/>
    <xsd:element ref='transaction-begin'/>
    <xsd:element ref='transaction-commit'/>
    <xsd:element ref='transaction-rollback'/>
    <xsd:element ref='if'/>
    <xsd:element ref='if-validate-method'/>
    <xsd:element ref='if-instance-of'/>
    <xsd:element ref='if-compare'/>
    <xsd:element ref='if-compare-field'/>
    <xsd:element ref='if-regexp'/>
    <xsd:element ref='if-empty'/>
    <xsd:element ref='if-not-empty'/>
    <xsd:element ref='if-has-permission'/>
    <xsd:element ref='check-permission'/>
    <xsd:element ref='check-id'/>
    <xsd:element ref='property-to-field'/>
    <xsd:element ref='log'/>
    <xsd:element ref='calculate'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='or'>
  <xsd:complexType>
   <xsd:choice maxOccurs='unbounded'>
    <xsd:element ref='or'/>
    <xsd:element ref='xor'/>
    <xsd:element ref='and'/>
    <xsd:element ref='not'/>
    <xsd:element ref='if-validate-method'/>
    <xsd:element ref='if-instance-of'/>
    <xsd:element ref='if-compare'/>
    <xsd:element ref='if-compare-field'/>
    <xsd:element ref='if-empty'/>
    <xsd:element ref='if-regexp'/>
    <xsd:element ref='if-has-permission'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='xor'>
  <xsd:complexType>
   <xsd:choice maxOccurs='unbounded'>
    <xsd:element ref='or'/>
    <xsd:element ref='xor'/>
    <xsd:element ref='and'/>
    <xsd:element ref='not'/>
    <xsd:element ref='if-validate-method'/>
    <xsd:element ref='if-instance-of'/>
    <xsd:element ref='if-compare'/>
    <xsd:element ref='if-compare-field'/>
    <xsd:element ref='if-empty'/>
    <xsd:element ref='if-regexp'/>
    <xsd:element ref='if-has-permission'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='and'>
  <xsd:complexType>
   <xsd:choice maxOccurs='unbounded'>
    <xsd:element ref='or'/>
    <xsd:element ref='xor'/>
    <xsd:element ref='and'/>
    <xsd:element ref='not'/>
    <xsd:element ref='if-validate-method'/>
    <xsd:element ref='if-instance-of'/>
    <xsd:element ref='if-compare'/>
    <xsd:element ref='if-compare-field'/>
    <xsd:element ref='if-empty'/>
    <xsd:element ref='if-regexp'/>
    <xsd:element ref='if-has-permission'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='not'>
  <xsd:complexType>
   <xsd:choice>
    <xsd:element ref='or'/>
    <xsd:element ref='xor'/>
    <xsd:element ref='and'/>
    <xsd:element ref='not'/>
    <xsd:element ref='if-validate-method'/>
    <xsd:element ref='if-instance-of'/>
    <xsd:element ref='if-compare'/>
    <xsd:element ref='if-compare-field'/>
    <xsd:element ref='if-empty'/>
    <xsd:element ref='if-regexp'/>
    <xsd:element ref='if-has-permission'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <!-- if-validate-method calls a static Java method that takes a String and returns a boolean -->
 <xsd:element name='if-validate-method'>
  <xsd:complexType>
   <xsd:sequence>
    <xsd:choice minOccurs='0' maxOccurs='unbounded'>
     <xsd:element ref='call-map-processor'/>
     <xsd:element ref='set-service-fields'/>
     <xsd:element ref='call-service'/>
     <xsd:element ref='call-service-asynch'/>
     <xsd:element ref='call-bsh'/>
     <xsd:element ref='call-simple-method'/>
     <xsd:element ref='check-errors'/>
     <xsd:element ref='add-error'/>
     <xsd:element ref='return'/>
     <xsd:element ref='call-object-method'/>
     <xsd:element ref='call-class-method'/>
     <xsd:element ref='create-object'/>
     <xsd:element ref='field-to-request'/>
     <xsd:element ref='field-to-session'/>
     <xsd:element ref='request-to-field'/>
     <xsd:element ref='request-parameters-to-list'/>
     <xsd:element ref='session-to-field'/>
     <xsd:element ref='webapp-property-to-field'/>
     <xsd:element ref='field-to-result'/>
     <xsd:element ref='map-to-map'/>
     <xsd:element ref='field-to-field'/>
     <xsd:element ref='field-to-list'/>
     <xsd:element ref='list-to-list'/>
     <xsd:element ref='env-to-env'/>
     <xsd:element ref='env-to-field'/>
     <xsd:element ref='field-to-env'/>
     <xsd:element ref='string-append'/>
     <xsd:element ref='string-to-field'/>
     <xsd:element ref='string-to-list'/>
     <xsd:element ref='to-string'/>
     <xsd:element ref='clear-field'/>
     <xsd:element ref='iterate'/>
     <xsd:element ref='iterate-map'/>
     <xsd:element ref='first-from-list'/>
     <xsd:element ref='now-timestamp-to-env'/>
     <xsd:element ref='now-date-to-env'/>
     <xsd:element ref='sequenced-id-to-env'/>
     <xsd:element ref='make-next-seq-id'/>
     <xsd:element ref='set-current-user-login'/>
     <xsd:element ref='find-by-primary-key'/>
     <xsd:element ref='find-by-and'/>
     <xsd:element ref='entity-one'/>
     <xsd:element ref='entity-and'/>
     <xsd:element ref='entity-condition'/>
     <xsd:element ref='entity-count'/>
     <xsd:element ref='get-related-one'/>
     <xsd:element ref='get-related'/>
     <xsd:element ref='filter-list-by-and'/>
     <xsd:element ref='filter-list-by-date'/>
     <xsd:element ref='order-value-list'/>
     <xsd:element ref='make-value'/>
     <xsd:element ref='clone-value'/>
     <xsd:element ref='create-value'/>
     <xsd:element ref='store-value'/>
     <xsd:element ref='refresh-value'/>
     <xsd:element ref='remove-value'/>
     <xsd:element ref='remove-related'/>
     <xsd:element ref='remove-by-and'/>
     <xsd:element ref='clear-cache-line'/>
     <xsd:element ref='clear-entity-caches'/>
     <xsd:element ref='set-pk-fields'/>
     <xsd:element ref='set-nonpk-fields'/>
     <xsd:element ref='store-list'/>
     <xsd:element ref='remove-list'/>
     <xsd:element ref='transaction-begin'/>
     <xsd:element ref='transaction-commit'/>
     <xsd:element ref='transaction-rollback'/>
     <xsd:element ref='if'/>
     <xsd:element ref='if-validate-method'/>
     <xsd:element ref='if-instance-of'/>
     <xsd:element ref='if-compare'/>
     <xsd:element ref='if-compare-field'/>
     <xsd:element ref='if-regexp'/>
     <xsd:element ref='if-empty'/>
     <xsd:element ref='if-not-empty'/>
     <xsd:element ref='if-has-permission'/>
     <xsd:element ref='check-permission'/>
     <xsd:element ref='check-id'/>
     <xsd:element ref='property-to-field'/>
     <xsd:element ref='log'/>
     <xsd:element ref='calculate'/>
    </xsd:choice>
    <xsd:element ref='else' minOccurs='0' maxOccurs='1'/>
   </xsd:sequence>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='field-name' type='xsd:string' use='required'/>
   <xsd:attribute name='method' type='xsd:string' use='required'/>
   <xsd:attribute name='class' type='xsd:string' default='org.ofbiz.base.util.UtilValidate'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='if-instance-of'>
  <xsd:complexType>
   <xsd:sequence>
    <xsd:choice minOccurs='0' maxOccurs='unbounded'>
     <xsd:element ref='call-map-processor'/>
     <xsd:element ref='set-service-fields'/>
     <xsd:element ref='call-service'/>
     <xsd:element ref='call-service-asynch'/>
     <xsd:element ref='call-bsh'/>
     <xsd:element ref='call-simple-method'/>
     <xsd:element ref='check-errors'/>
     <xsd:element ref='add-error'/>
     <xsd:element ref='return'/>
     <xsd:element ref='call-object-method'/>
     <xsd:element ref='call-class-method'/>
     <xsd:element ref='create-object'/>
     <xsd:element ref='field-to-request'/>
     <xsd:element ref='field-to-session'/>
     <xsd:element ref='request-to-field'/>
     <xsd:element ref='request-parameters-to-list'/>
     <xsd:element ref='session-to-field'/>
     <xsd:element ref='webapp-property-to-field'/>
     <xsd:element ref='field-to-result'/>
     <xsd:element ref='map-to-map'/>
     <xsd:element ref='field-to-field'/>
     <xsd:element ref='field-to-list'/>
     <xsd:element ref='list-to-list'/>
     <xsd:element ref='env-to-env'/>
     <xsd:element ref='env-to-field'/>
     <xsd:element ref='field-to-env'/>
     <xsd:element ref='string-append'/>
     <xsd:element ref='string-to-field'/>
     <xsd:element ref='string-to-list'/>
     <xsd:element ref='to-string'/>
     <xsd:element ref='clear-field'/>
     <xsd:element ref='iterate'/>
     <xsd:element ref='iterate-map'/>
     <xsd:element ref='first-from-list'/>
     <xsd:element ref='now-timestamp-to-env'/>
     <xsd:element ref='now-date-to-env'/>
     <xsd:element ref='sequenced-id-to-env'/>
     <xsd:element ref='make-next-seq-id'/>
     <xsd:element ref='set-current-user-login'/>
     <xsd:element ref='find-by-primary-key'/>
     <xsd:element ref='find-by-and'/>
     <xsd:element ref='entity-one'/>
     <xsd:element ref='entity-and'/>
     <xsd:element ref='entity-condition'/>
     <xsd:element ref='entity-count'/>
     <xsd:element ref='get-related-one'/>
     <xsd:element ref='get-related'/>
     <xsd:element ref='filter-list-by-and'/>
     <xsd:element ref='filter-list-by-date'/>
     <xsd:element ref='order-value-list'/>
     <xsd:element ref='make-value'/>
     <xsd:element ref='clone-value'/>
     <xsd:element ref='create-value'/>
     <xsd:element ref='store-value'/>
     <xsd:element ref='refresh-value'/>
     <xsd:element ref='remove-value'/>
     <xsd:element ref='remove-related'/>
     <xsd:element ref='remove-by-and'/>
     <xsd:element ref='clear-cache-line'/>
     <xsd:element ref='clear-entity-caches'/>
     <xsd:element ref='set-pk-fields'/>
     <xsd:element ref='set-nonpk-fields'/>
     <xsd:element ref='store-list'/>
     <xsd:element ref='remove-list'/>
     <xsd:element ref='transaction-begin'/>
     <xsd:element ref='transaction-commit'/>
     <xsd:element ref='transaction-rollback'/>
     <xsd:element ref='if'/>
     <xsd:element ref='if-validate-method'/>
     <xsd:element ref='if-instance-of'/>
     <xsd:element ref='if-compare'/>
     <xsd:element ref='if-compare-field'/>
     <xsd:element ref='if-regexp'/>
     <xsd:element ref='if-empty'/>
     <xsd:element ref='if-not-empty'/>
     <xsd:element ref='if-has-permission'/>
     <xsd:element ref='check-permission'/>
     <xsd:element ref='check-id'/>
     <xsd:element ref='property-to-field'/>
     <xsd:element ref='log'/>
     <xsd:element ref='calculate'/>
    </xsd:choice>
    <xsd:element ref='else' minOccurs='0' maxOccurs='1'/>
   </xsd:sequence>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='field-name' type='xsd:string' use='required'/>
   <xsd:attribute name='class' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='if-compare'>
  <xsd:complexType>
   <xsd:sequence>
    <xsd:choice minOccurs='0' maxOccurs='unbounded'>
     <xsd:element ref='call-map-processor'/>
     <xsd:element ref='set-service-fields'/>
     <xsd:element ref='call-service'/>
     <xsd:element ref='call-service-asynch'/>
     <xsd:element ref='call-bsh'/>
     <xsd:element ref='call-simple-method'/>
     <xsd:element ref='check-errors'/>
     <xsd:element ref='add-error'/>
     <xsd:element ref='return'/>
     <xsd:element ref='call-object-method'/>
     <xsd:element ref='call-class-method'/>
     <xsd:element ref='create-object'/>
     <xsd:element ref='field-to-request'/>
     <xsd:element ref='field-to-session'/>
     <xsd:element ref='request-to-field'/>
     <xsd:element ref='request-parameters-to-list'/>
     <xsd:element ref='session-to-field'/>
     <xsd:element ref='webapp-property-to-field'/>
     <xsd:element ref='field-to-result'/>
     <xsd:element ref='map-to-map'/>
     <xsd:element ref='field-to-field'/>
     <xsd:element ref='field-to-list'/>
     <xsd:element ref='list-to-list'/>
     <xsd:element ref='env-to-env'/>
     <xsd:element ref='env-to-field'/>
     <xsd:element ref='field-to-env'/>
     <xsd:element ref='string-append'/>
     <xsd:element ref='string-to-field'/>
     <xsd:element ref='string-to-list'/>
     <xsd:element ref='to-string'/>
     <xsd:element ref='clear-field'/>
     <xsd:element ref='iterate'/>
     <xsd:element ref='iterate-map'/>
     <xsd:element ref='first-from-list'/>
     <xsd:element ref='now-timestamp-to-env'/>
     <xsd:element ref='now-date-to-env'/>
     <xsd:element ref='sequenced-id-to-env'/>
     <xsd:element ref='make-next-seq-id'/>
     <xsd:element ref='set-current-user-login'/>
     <xsd:element ref='find-by-primary-key'/>
     <xsd:element ref='find-by-and'/>
     <xsd:element ref='entity-one'/>
     <xsd:element ref='entity-and'/>
     <xsd:element ref='entity-condition'/>
     <xsd:element ref='entity-count'/>
     <xsd:element ref='get-related-one'/>
     <xsd:element ref='get-related'/>
     <xsd:element ref='filter-list-by-and'/>
     <xsd:element ref='filter-list-by-date'/>
     <xsd:element ref='order-value-list'/>
     <xsd:element ref='make-value'/>
     <xsd:element ref='clone-value'/>
     <xsd:element ref='create-value'/>
     <xsd:element ref='store-value'/>
     <xsd:element ref='refresh-value'/>
     <xsd:element ref='remove-value'/>
     <xsd:element ref='remove-related'/>
     <xsd:element ref='remove-by-and'/>
     <xsd:element ref='clear-cache-line'/>
     <xsd:element ref='clear-entity-caches'/>
     <xsd:element ref='set-pk-fields'/>
     <xsd:element ref='set-nonpk-fields'/>
     <xsd:element ref='store-list'/>
     <xsd:element ref='remove-list'/>
     <xsd:element ref='transaction-begin'/>
     <xsd:element ref='transaction-commit'/>
     <xsd:element ref='transaction-rollback'/>
     <xsd:element ref='if'/>
     <xsd:element ref='if-validate-method'/>
     <xsd:element ref='if-instance-of'/>
     <xsd:element ref='if-compare'/>
     <xsd:element ref='if-compare-field'/>
     <xsd:element ref='if-regexp'/>
     <xsd:element ref='if-empty'/>
     <xsd:element ref='if-not-empty'/>
     <xsd:element ref='if-has-permission'/>
     <xsd:element ref='check-permission'/>
     <xsd:element ref='check-id'/>
     <xsd:element ref='property-to-field'/>
     <xsd:element ref='log'/>
     <xsd:element ref='calculate'/>
    </xsd:choice>
    <xsd:element ref='else' minOccurs='0' maxOccurs='1'/>
   </xsd:sequence>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='field-name' type='xsd:string' use='required'/>
   <xsd:attribute name='operator' use='required'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='less'/>
      <xsd:enumeration value='greater'/>
      <xsd:enumeration value='less-equals'/>
      <xsd:enumeration value='greater-equals'/>
      <xsd:enumeration value='equals'/>
      <xsd:enumeration value='not-equals'/>
      <xsd:enumeration value='contains'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='value' type='xsd:string' use='required'/>
   <xsd:attribute name='type' default='String'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='PlainString'/>
      <xsd:enumeration value='String'/>
      <xsd:enumeration value='Double'/>
      <xsd:enumeration value='Float'/>
      <xsd:enumeration value='Long'/>
      <xsd:enumeration value='Integer'/>
      <xsd:enumeration value='Date'/>
      <xsd:enumeration value='Time'/>
      <xsd:enumeration value='Timestamp'/>
      <xsd:enumeration value='Boolean'/>
      <xsd:enumeration value='Object'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='format' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='if-compare-field'>
  <xsd:complexType>
   <xsd:sequence>
    <xsd:choice minOccurs='0' maxOccurs='unbounded'>
     <xsd:element ref='call-map-processor'/>
     <xsd:element ref='set-service-fields'/>
     <xsd:element ref='call-service'/>
     <xsd:element ref='call-service-asynch'/>
     <xsd:element ref='call-bsh'/>
     <xsd:element ref='call-simple-method'/>
     <xsd:element ref='check-errors'/>
     <xsd:element ref='add-error'/>
     <xsd:element ref='return'/>
     <xsd:element ref='call-object-method'/>
     <xsd:element ref='call-class-method'/>
     <xsd:element ref='create-object'/>
     <xsd:element ref='field-to-request'/>
     <xsd:element ref='field-to-session'/>
     <xsd:element ref='request-to-field'/>
     <xsd:element ref='request-parameters-to-list'/>
     <xsd:element ref='session-to-field'/>
     <xsd:element ref='webapp-property-to-field'/>
     <xsd:element ref='field-to-result'/>
     <xsd:element ref='map-to-map'/>
     <xsd:element ref='field-to-field'/>
     <xsd:element ref='field-to-list'/>
     <xsd:element ref='list-to-list'/>
     <xsd:element ref='env-to-env'/>
     <xsd:element ref='env-to-field'/>
     <xsd:element ref='field-to-env'/>
     <xsd:element ref='string-append'/>
     <xsd:element ref='string-to-field'/>
     <xsd:element ref='string-to-list'/>
     <xsd:element ref='to-string'/>
     <xsd:element ref='clear-field'/>
     <xsd:element ref='iterate'/>
     <xsd:element ref='iterate-map'/>
     <xsd:element ref='first-from-list'/>
     <xsd:element ref='now-timestamp-to-env'/>
     <xsd:element ref='now-date-to-env'/>
     <xsd:element ref='sequenced-id-to-env'/>
     <xsd:element ref='make-next-seq-id'/>
     <xsd:element ref='set-current-user-login'/>
     <xsd:element ref='find-by-primary-key'/>
     <xsd:element ref='find-by-and'/>
     <xsd:element ref='entity-one'/>
     <xsd:element ref='entity-and'/>
     <xsd:element ref='entity-condition'/>
     <xsd:element ref='entity-count'/>
     <xsd:element ref='get-related-one'/>
     <xsd:element ref='get-related'/>
     <xsd:element ref='filter-list-by-and'/>
     <xsd:element ref='filter-list-by-date'/>
     <xsd:element ref='order-value-list'/>
     <xsd:element ref='make-value'/>
     <xsd:element ref='clone-value'/>
     <xsd:element ref='create-value'/>
     <xsd:element ref='store-value'/>
     <xsd:element ref='refresh-value'/>
     <xsd:element ref='remove-value'/>
     <xsd:element ref='remove-related'/>
     <xsd:element ref='remove-by-and'/>
     <xsd:element ref='clear-cache-line'/>
     <xsd:element ref='clear-entity-caches'/>
     <xsd:element ref='set-pk-fields'/>
     <xsd:element ref='set-nonpk-fields'/>
     <xsd:element ref='store-list'/>
     <xsd:element ref='remove-list'/>
     <xsd:element ref='transaction-begin'/>
     <xsd:element ref='transaction-commit'/>
     <xsd:element ref='transaction-rollback'/>
     <xsd:element ref='if'/>
     <xsd:element ref='if-validate-method'/>
     <xsd:element ref='if-instance-of'/>
     <xsd:element ref='if-compare'/>
     <xsd:element ref='if-compare-field'/>
     <xsd:element ref='if-regexp'/>
     <xsd:element ref='if-empty'/>
     <xsd:element ref='if-not-empty'/>
     <xsd:element ref='if-has-permission'/>
     <xsd:element ref='check-permission'/>
     <xsd:element ref='check-id'/>
     <xsd:element ref='property-to-field'/>
     <xsd:element ref='log'/>
     <xsd:element ref='calculate'/>
    </xsd:choice>
    <xsd:element ref='else' minOccurs='0' maxOccurs='1'/>
   </xsd:sequence>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='field-name' type='xsd:string' use='required'/>
   <xsd:attribute name='operator' use='required'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='less'/>
      <xsd:enumeration value='greater'/>
      <xsd:enumeration value='less-equals'/>
      <xsd:enumeration value='greater-equals'/>
      <xsd:enumeration value='equals'/>
      <xsd:enumeration value='not-equals'/>
      <xsd:enumeration value='contains'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='to-map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='to-field-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='type' default='String'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='PlainString'/>
      <xsd:enumeration value='String'/>
      <xsd:enumeration value='Double'/>
      <xsd:enumeration value='Float'/>
      <xsd:enumeration value='Long'/>
      <xsd:enumeration value='Integer'/>
      <xsd:enumeration value='Date'/>
      <xsd:enumeration value='Time'/>
      <xsd:enumeration value='Timestamp'/>
      <xsd:enumeration value='Boolean'/>
      <xsd:enumeration value='Object'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='format' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='if-regexp'>
  <xsd:complexType>
   <xsd:sequence>
    <xsd:choice minOccurs='0' maxOccurs='unbounded'>
     <xsd:element ref='call-map-processor'/>
     <xsd:element ref='set-service-fields'/>
     <xsd:element ref='call-service'/>
     <xsd:element ref='call-service-asynch'/>
     <xsd:element ref='call-bsh'/>
     <xsd:element ref='call-simple-method'/>
     <xsd:element ref='check-errors'/>
     <xsd:element ref='add-error'/>
     <xsd:element ref='return'/>
     <xsd:element ref='call-object-method'/>
     <xsd:element ref='call-class-method'/>
     <xsd:element ref='create-object'/>
     <xsd:element ref='field-to-request'/>
     <xsd:element ref='field-to-session'/>
     <xsd:element ref='request-to-field'/>
     <xsd:element ref='request-parameters-to-list'/>
     <xsd:element ref='session-to-field'/>
     <xsd:element ref='webapp-property-to-field'/>
     <xsd:element ref='field-to-result'/>
     <xsd:element ref='map-to-map'/>
     <xsd:element ref='field-to-field'/>
     <xsd:element ref='field-to-list'/>
     <xsd:element ref='list-to-list'/>
     <xsd:element ref='env-to-env'/>
     <xsd:element ref='env-to-field'/>
     <xsd:element ref='field-to-env'/>
     <xsd:element ref='string-append'/>
     <xsd:element ref='string-to-field'/>
     <xsd:element ref='string-to-list'/>
     <xsd:element ref='to-string'/>
     <xsd:element ref='clear-field'/>
     <xsd:element ref='iterate'/>
     <xsd:element ref='iterate-map'/>
     <xsd:element ref='first-from-list'/>
     <xsd:element ref='now-timestamp-to-env'/>
     <xsd:element ref='now-date-to-env'/>
     <xsd:element ref='sequenced-id-to-env'/>
     <xsd:element ref='make-next-seq-id'/>
     <xsd:element ref='set-current-user-login'/>
     <xsd:element ref='find-by-primary-key'/>
     <xsd:element ref='find-by-and'/>
     <xsd:element ref='entity-one'/>
     <xsd:element ref='entity-and'/>
     <xsd:element ref='entity-condition'/>
     <xsd:element ref='entity-count'/>
     <xsd:element ref='get-related-one'/>
     <xsd:element ref='get-related'/>
     <xsd:element ref='filter-list-by-and'/>
     <xsd:element ref='filter-list-by-date'/>
     <xsd:element ref='order-value-list'/>
     <xsd:element ref='make-value'/>
     <xsd:element ref='clone-value'/>
     <xsd:element ref='create-value'/>
     <xsd:element ref='store-value'/>
     <xsd:element ref='refresh-value'/>
     <xsd:element ref='remove-value'/>
     <xsd:element ref='remove-related'/>
     <xsd:element ref='remove-by-and'/>
     <xsd:element ref='clear-cache-line'/>
     <xsd:element ref='clear-entity-caches'/>
     <xsd:element ref='set-pk-fields'/>
     <xsd:element ref='set-nonpk-fields'/>
     <xsd:element ref='store-list'/>
     <xsd:element ref='remove-list'/>
     <xsd:element ref='transaction-begin'/>
     <xsd:element ref='transaction-commit'/>
     <xsd:element ref='transaction-rollback'/>
     <xsd:element ref='if'/>
     <xsd:element ref='if-validate-method'/>
     <xsd:element ref='if-instance-of'/>
     <xsd:element ref='if-compare'/>
     <xsd:element ref='if-compare-field'/>
     <xsd:element ref='if-regexp'/>
     <xsd:element ref='if-empty'/>
     <xsd:element ref='if-not-empty'/>
     <xsd:element ref='if-has-permission'/>
     <xsd:element ref='check-permission'/>
     <xsd:element ref='check-id'/>
     <xsd:element ref='property-to-field'/>
     <xsd:element ref='log'/>
     <xsd:element ref='calculate'/>
    </xsd:choice>
    <xsd:element ref='else' minOccurs='0' maxOccurs='1'/>
   </xsd:sequence>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='field-name' type='xsd:string' use='required'/>
   <xsd:attribute name='expr' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='if-empty'>
  <xsd:complexType>
   <xsd:sequence>
    <xsd:choice minOccurs='0' maxOccurs='unbounded'>
     <xsd:element ref='call-map-processor'/>
     <xsd:element ref='set-service-fields'/>
     <xsd:element ref='call-service'/>
     <xsd:element ref='call-service-asynch'/>
     <xsd:element ref='call-bsh'/>
     <xsd:element ref='call-simple-method'/>
     <xsd:element ref='check-errors'/>
     <xsd:element ref='add-error'/>
     <xsd:element ref='return'/>
     <xsd:element ref='call-object-method'/>
     <xsd:element ref='call-class-method'/>
     <xsd:element ref='create-object'/>
     <xsd:element ref='field-to-request'/>
     <xsd:element ref='field-to-session'/>
     <xsd:element ref='request-to-field'/>
     <xsd:element ref='request-parameters-to-list'/>
     <xsd:element ref='session-to-field'/>
     <xsd:element ref='webapp-property-to-field'/>
     <xsd:element ref='field-to-result'/>
     <xsd:element ref='map-to-map'/>
     <xsd:element ref='field-to-field'/>
     <xsd:element ref='field-to-list'/>
     <xsd:element ref='list-to-list'/>
     <xsd:element ref='env-to-env'/>
     <xsd:element ref='env-to-field'/>
     <xsd:element ref='field-to-env'/>
     <xsd:element ref='string-append'/>
     <xsd:element ref='string-to-field'/>
     <xsd:element ref='string-to-list'/>
     <xsd:element ref='to-string'/>
     <xsd:element ref='clear-field'/>
     <xsd:element ref='iterate'/>
     <xsd:element ref='iterate-map'/>
     <xsd:element ref='first-from-list'/>
     <xsd:element ref='now-timestamp-to-env'/>
     <xsd:element ref='now-date-to-env'/>
     <xsd:element ref='sequenced-id-to-env'/>
     <xsd:element ref='make-next-seq-id'/>
     <xsd:element ref='set-current-user-login'/>
     <xsd:element ref='find-by-primary-key'/>
     <xsd:element ref='find-by-and'/>
     <xsd:element ref='entity-one'/>
     <xsd:element ref='entity-and'/>
     <xsd:element ref='entity-condition'/>
     <xsd:element ref='entity-count'/>
     <xsd:element ref='get-related-one'/>
     <xsd:element ref='get-related'/>
     <xsd:element ref='filter-list-by-and'/>
     <xsd:element ref='filter-list-by-date'/>
     <xsd:element ref='order-value-list'/>
     <xsd:element ref='make-value'/>
     <xsd:element ref='clone-value'/>
     <xsd:element ref='create-value'/>
     <xsd:element ref='store-value'/>
     <xsd:element ref='refresh-value'/>
     <xsd:element ref='remove-value'/>
     <xsd:element ref='remove-related'/>
     <xsd:element ref='remove-by-and'/>
     <xsd:element ref='clear-cache-line'/>
     <xsd:element ref='clear-entity-caches'/>
     <xsd:element ref='set-pk-fields'/>
     <xsd:element ref='set-nonpk-fields'/>
     <xsd:element ref='store-list'/>
     <xsd:element ref='remove-list'/>
     <xsd:element ref='transaction-begin'/>
     <xsd:element ref='transaction-commit'/>
     <xsd:element ref='transaction-rollback'/>
     <xsd:element ref='if'/>
     <xsd:element ref='if-validate-method'/>
     <xsd:element ref='if-instance-of'/>
     <xsd:element ref='if-compare'/>
     <xsd:element ref='if-compare-field'/>
     <xsd:element ref='if-regexp'/>
     <xsd:element ref='if-empty'/>
     <xsd:element ref='if-not-empty'/>
     <xsd:element ref='if-has-permission'/>
     <xsd:element ref='check-permission'/>
     <xsd:element ref='check-id'/>
     <xsd:element ref='property-to-field'/>
     <xsd:element ref='log'/>
     <xsd:element ref='calculate'/>
    </xsd:choice>
    <xsd:element ref='else' minOccurs='0' maxOccurs='1'/>
   </xsd:sequence>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='field-name' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='if-not-empty'>
  <xsd:complexType>
   <xsd:sequence>
    <xsd:choice minOccurs='0' maxOccurs='unbounded'>
     <xsd:element ref='call-map-processor'/>
     <xsd:element ref='set-service-fields'/>
     <xsd:element ref='call-service'/>
     <xsd:element ref='call-service-asynch'/>
     <xsd:element ref='call-bsh'/>
     <xsd:element ref='call-simple-method'/>
     <xsd:element ref='check-errors'/>
     <xsd:element ref='add-error'/>
     <xsd:element ref='return'/>
     <xsd:element ref='call-object-method'/>
     <xsd:element ref='call-class-method'/>
     <xsd:element ref='create-object'/>
     <xsd:element ref='field-to-request'/>
     <xsd:element ref='field-to-session'/>
     <xsd:element ref='request-to-field'/>
     <xsd:element ref='request-parameters-to-list'/>
     <xsd:element ref='session-to-field'/>
     <xsd:element ref='webapp-property-to-field'/>
     <xsd:element ref='field-to-result'/>
     <xsd:element ref='map-to-map'/>
     <xsd:element ref='field-to-field'/>
     <xsd:element ref='field-to-list'/>
     <xsd:element ref='list-to-list'/>
     <xsd:element ref='env-to-env'/>
     <xsd:element ref='env-to-field'/>
     <xsd:element ref='field-to-env'/>
     <xsd:element ref='string-append'/>
     <xsd:element ref='string-to-field'/>
     <xsd:element ref='string-to-list'/>
     <xsd:element ref='to-string'/>
     <xsd:element ref='clear-field'/>
     <xsd:element ref='iterate'/>
     <xsd:element ref='iterate-map'/>
     <xsd:element ref='first-from-list'/>
     <xsd:element ref='now-timestamp-to-env'/>
     <xsd:element ref='now-date-to-env'/>
     <xsd:element ref='sequenced-id-to-env'/>
     <xsd:element ref='make-next-seq-id'/>
     <xsd:element ref='set-current-user-login'/>
     <xsd:element ref='find-by-primary-key'/>
     <xsd:element ref='find-by-and'/>
     <xsd:element ref='entity-one'/>
     <xsd:element ref='entity-and'/>
     <xsd:element ref='entity-condition'/>
     <xsd:element ref='entity-count'/>
     <xsd:element ref='get-related-one'/>
     <xsd:element ref='get-related'/>
     <xsd:element ref='filter-list-by-and'/>
     <xsd:element ref='filter-list-by-date'/>
     <xsd:element ref='order-value-list'/>
     <xsd:element ref='make-value'/>
     <xsd:element ref='clone-value'/>
     <xsd:element ref='create-value'/>
     <xsd:element ref='store-value'/>
     <xsd:element ref='refresh-value'/>
     <xsd:element ref='remove-value'/>
     <xsd:element ref='remove-related'/>
     <xsd:element ref='remove-by-and'/>
     <xsd:element ref='clear-cache-line'/>
     <xsd:element ref='clear-entity-caches'/>
     <xsd:element ref='set-pk-fields'/>
     <xsd:element ref='set-nonpk-fields'/>
     <xsd:element ref='store-list'/>
     <xsd:element ref='remove-list'/>
     <xsd:element ref='transaction-begin'/>
     <xsd:element ref='transaction-commit'/>
     <xsd:element ref='transaction-rollback'/>
     <xsd:element ref='if'/>
     <xsd:element ref='if-validate-method'/>
     <xsd:element ref='if-instance-of'/>
     <xsd:element ref='if-compare'/>
     <xsd:element ref='if-compare-field'/>
     <xsd:element ref='if-regexp'/>
     <xsd:element ref='if-empty'/>
     <xsd:element ref='if-not-empty'/>
     <xsd:element ref='if-has-permission'/>
     <xsd:element ref='check-permission'/>
     <xsd:element ref='check-id'/>
     <xsd:element ref='property-to-field'/>
     <xsd:element ref='log'/>
     <xsd:element ref='calculate'/>
    </xsd:choice>
    <xsd:element ref='else' minOccurs='0' maxOccurs='1'/>
   </xsd:sequence>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='field-name' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='if-has-permission'>
  <xsd:complexType>
   <xsd:sequence>
    <xsd:choice minOccurs='0' maxOccurs='unbounded'>
     <xsd:element ref='call-map-processor'/>
     <xsd:element ref='set-service-fields'/>
     <xsd:element ref='call-service'/>
     <xsd:element ref='call-service-asynch'/>
     <xsd:element ref='call-bsh'/>
     <xsd:element ref='call-simple-method'/>
     <xsd:element ref='check-errors'/>
     <xsd:element ref='add-error'/>
     <xsd:element ref='return'/>
     <xsd:element ref='call-object-method'/>
     <xsd:element ref='call-class-method'/>
     <xsd:element ref='create-object'/>
     <xsd:element ref='field-to-request'/>
     <xsd:element ref='field-to-session'/>
     <xsd:element ref='request-to-field'/>
     <xsd:element ref='request-parameters-to-list'/>
     <xsd:element ref='session-to-field'/>
     <xsd:element ref='webapp-property-to-field'/>
     <xsd:element ref='field-to-result'/>
     <xsd:element ref='map-to-map'/>
     <xsd:element ref='field-to-field'/>
     <xsd:element ref='field-to-list'/>
     <xsd:element ref='list-to-list'/>
     <xsd:element ref='env-to-env'/>
     <xsd:element ref='env-to-field'/>
     <xsd:element ref='field-to-env'/>
     <xsd:element ref='string-append'/>
     <xsd:element ref='string-to-field'/>
     <xsd:element ref='string-to-list'/>
     <xsd:element ref='to-string'/>
     <xsd:element ref='clear-field'/>
     <xsd:element ref='iterate'/>
     <xsd:element ref='iterate-map'/>
     <xsd:element ref='first-from-list'/>
     <xsd:element ref='now-timestamp-to-env'/>
     <xsd:element ref='now-date-to-env'/>
     <xsd:element ref='sequenced-id-to-env'/>
     <xsd:element ref='make-next-seq-id'/>
     <xsd:element ref='set-current-user-login'/>
     <xsd:element ref='find-by-primary-key'/>
     <xsd:element ref='find-by-and'/>
     <xsd:element ref='entity-one'/>
     <xsd:element ref='entity-and'/>
     <xsd:element ref='entity-condition'/>
     <xsd:element ref='entity-count'/>
     <xsd:element ref='get-related-one'/>
     <xsd:element ref='get-related'/>
     <xsd:element ref='filter-list-by-and'/>
     <xsd:element ref='filter-list-by-date'/>
     <xsd:element ref='order-value-list'/>
     <xsd:element ref='make-value'/>
     <xsd:element ref='clone-value'/>
     <xsd:element ref='create-value'/>
     <xsd:element ref='store-value'/>
     <xsd:element ref='refresh-value'/>
     <xsd:element ref='remove-value'/>
     <xsd:element ref='remove-related'/>
     <xsd:element ref='remove-by-and'/>
     <xsd:element ref='clear-cache-line'/>
     <xsd:element ref='clear-entity-caches'/>
     <xsd:element ref='set-pk-fields'/>
     <xsd:element ref='set-nonpk-fields'/>
     <xsd:element ref='store-list'/>
     <xsd:element ref='remove-list'/>
     <xsd:element ref='transaction-begin'/>
     <xsd:element ref='transaction-commit'/>
     <xsd:element ref='transaction-rollback'/>
     <xsd:element ref='if'/>
     <xsd:element ref='if-validate-method'/>
     <xsd:element ref='if-instance-of'/>
     <xsd:element ref='if-compare'/>
     <xsd:element ref='if-compare-field'/>
     <xsd:element ref='if-regexp'/>
     <xsd:element ref='if-empty'/>
     <xsd:element ref='if-not-empty'/>
     <xsd:element ref='if-has-permission'/>
     <xsd:element ref='check-permission'/>
     <xsd:element ref='check-id'/>
     <xsd:element ref='property-to-field'/>
     <xsd:element ref='log'/>
     <xsd:element ref='calculate'/>
    </xsd:choice>
    <xsd:element ref='else' minOccurs='0' maxOccurs='1'/>
   </xsd:sequence>
   <xsd:attribute name='permission' type='xsd:string' use='required'/>
   <xsd:attribute name='action' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='check-permission'>
  <xsd:complexType>
   <xsd:sequence>
    <xsd:element ref='alt-permission' minOccurs='0' maxOccurs='unbounded'/>
    <xsd:choice>
     <xsd:element ref='fail-message'/>
     <xsd:element ref='fail-property'/>
    </xsd:choice>
   </xsd:sequence>
   <xsd:attribute name='permission' type='xsd:string' use='required'/>
   <xsd:attribute name='action' type='xsd:string' use='optional'/>
   <xsd:attribute name='error-list-name' type='xsd:string' default='error_list'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='alt-permission'>
  <xsd:complexType>
   <xsd:attribute name='permission' type='xsd:string' use='required'/>
   <xsd:attribute name='action' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='check-id'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='1'>
    <xsd:element ref='fail-message'/>
    <xsd:element ref='fail-property'/>
   </xsd:choice>
   <xsd:attribute name='field-name' type='xsd:string' use='required'/>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='error-list-name' type='xsd:string' default='error_list'/>
  </xsd:complexType>
 </xsd:element>

<!-- the "Other" Operations -->

 <xsd:element name='property-to-field'>
  <xsd:complexType>
   <xsd:attribute name='resource' type='xsd:string' use='required'/>
   <xsd:attribute name='property' type='xsd:string' use='required'/>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='field-name' type='xsd:string' use='required'/>
   <xsd:attribute name='default' type='xsd:string' use='optional'/>
   <xsd:attribute name='no-locale' default='false'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='arg-list-name' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='log'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='field'/>
    <xsd:element ref='string'/>
   </xsd:choice>
   <xsd:attribute name='level' use='required'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='verbose'/>
      <xsd:enumeration value='timing'/>
      <xsd:enumeration value='info'/>
      <xsd:enumeration value='important'/>
      <xsd:enumeration value='warning'/>
      <xsd:enumeration value='error'/>
      <xsd:enumeration value='fatal'/>
      <xsd:enumeration value='always'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='message' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='calculate'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='calcop'/>
    <xsd:element ref='number'/>
   </xsd:choice>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='field-name' type='xsd:string' use='required'/>
   <xsd:attribute name='type' default='Double'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='String'/>
      <xsd:enumeration value='Double'/>
      <xsd:enumeration value='Float'/>
      <xsd:enumeration value='Long'/>
      <xsd:enumeration value='Integer'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='decimal-format' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='calcop'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='calcop'/>
    <xsd:element ref='number'/>
   </xsd:choice>
   <xsd:attribute name='operator' use='required'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='get'/>
      <xsd:enumeration value='add'/>
      <xsd:enumeration value='subtract'/>
      <xsd:enumeration value='multiply'/>
      <xsd:enumeration value='divide'/>
      <xsd:enumeration value='negative'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='map-name' type='xsd:string' use='optional'/>
   <xsd:attribute name='field-name' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='number'>
  <xsd:complexType>
   <xsd:attribute name='value' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

<!--
    ======================================================
    ========== The Simple Map Processor Section ==========
    ======================================================
-->
 <xsd:element name='simple-map-processors'>
  <xsd:complexType>
   <xsd:sequence>
    <xsd:element ref='simple-map-processor' maxOccurs='unbounded'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='simple-map-processor'>
  <xsd:complexType>
   <xsd:sequence>
    <xsd:element ref='make-in-string' minOccurs='0' maxOccurs='unbounded'/>
    <xsd:element ref='process' minOccurs='0' maxOccurs='unbounded'/>
   </xsd:sequence>
   <xsd:attribute name='name' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

<!--
    Make In String & Operations
-->
 <xsd:element name='make-in-string'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='in-field'/>
    <xsd:element ref='property'/>
    <xsd:element ref='constant'/>
   </xsd:choice>
   <xsd:attribute name='field' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='in-field'>
  <xsd:complexType>
   <xsd:attribute name='field' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='property'>
  <xsd:complexType>
   <xsd:attribute name='resource' type='xsd:string' use='required'/>
   <xsd:attribute name='property' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='constant' type='xsd:string'>
 </xsd:element>

<!--
    Field Process & Operations
-->
 <xsd:element name='process'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='validate-method'/>
    <xsd:element ref='compare'/>
    <xsd:element ref='compare-field'/>
    <xsd:element ref='regexp'/>
    <xsd:element ref='not-empty'/>
    <xsd:element ref='copy'/>
    <xsd:element ref='convert'/>
   </xsd:choice>
   <xsd:attribute name='field' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <!-- validate-method calls a static Java method that takes a String and returns a boolean -->
 <xsd:element name='validate-method'>
  <xsd:complexType>
   <xsd:choice>
    <xsd:element ref='fail-message'/>
    <xsd:element ref='fail-property'/>
   </xsd:choice>
   <xsd:attribute name='method' type='xsd:string' use='required'/>
   <xsd:attribute name='class' type='xsd:string' default='org.ofbiz.base.util.UtilValidate'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='compare'>
  <xsd:complexType>
   <xsd:choice>
    <xsd:element ref='fail-message'/>
    <xsd:element ref='fail-property'/>
   </xsd:choice>
   <xsd:attribute name='operator' use='required'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='less'/>
      <xsd:enumeration value='greater'/>
      <xsd:enumeration value='less-equals'/>
      <xsd:enumeration value='greater-equals'/>
      <xsd:enumeration value='equals'/>
      <xsd:enumeration value='not-equals'/>
      <xsd:enumeration value='contains'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='value' type='xsd:string' use='required'/>
   <xsd:attribute name='type' default='String'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='PlainString'/>
      <xsd:enumeration value='String'/>
      <xsd:enumeration value='Double'/>
      <xsd:enumeration value='Float'/>
      <xsd:enumeration value='Long'/>
      <xsd:enumeration value='Integer'/>
      <xsd:enumeration value='Date'/>
      <xsd:enumeration value='Time'/>
      <xsd:enumeration value='Timestamp'/>
      <xsd:enumeration value='Boolean'/>
      <xsd:enumeration value='Object'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='format' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='compare-field'>
  <xsd:complexType>
   <xsd:choice>
    <xsd:element ref='fail-message'/>
    <xsd:element ref='fail-property'/>
   </xsd:choice>
   <xsd:attribute name='operator' use='required'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='less'/>
      <xsd:enumeration value='greater'/>
      <xsd:enumeration value='less-equals'/>
      <xsd:enumeration value='greater-equals'/>
      <xsd:enumeration value='equals'/>
      <xsd:enumeration value='not-equals'/>
      <xsd:enumeration value='contains'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='field' type='xsd:string' use='required'/>
   <xsd:attribute name='type' default='String'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='PlainString'/>
      <xsd:enumeration value='String'/>
      <xsd:enumeration value='Double'/>
      <xsd:enumeration value='Float'/>
      <xsd:enumeration value='Long'/>
      <xsd:enumeration value='Integer'/>
      <xsd:enumeration value='Date'/>
      <xsd:enumeration value='Time'/>
      <xsd:enumeration value='Timestamp'/>
      <xsd:enumeration value='Boolean'/>
      <xsd:enumeration value='Object'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='format' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='regexp'>
  <xsd:complexType>
   <xsd:choice>
    <xsd:element ref='fail-message'/>
    <xsd:element ref='fail-property'/>
   </xsd:choice>
   <xsd:attribute name='expr' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='not-empty'>
  <xsd:complexType>
   <xsd:choice>
    <xsd:element ref='fail-message'/>
    <xsd:element ref='fail-property'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <!-- Copy operation: if no to-field is specified, it is the same as the field on process -->
 <xsd:element name='copy'>
  <xsd:complexType>
   <xsd:attribute name='to-field' type='xsd:string' use='optional'/>
   <xsd:attribute name='replace' default='true'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='set-if-null' default='true'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
  </xsd:complexType>
 </xsd:element>

 <!-- Convert operation: if no to-field is specified, it is the same as the field on process -->
 <xsd:element name='convert'>
  <xsd:complexType>
   <xsd:choice>
    <xsd:element ref='fail-message'/>
    <xsd:element ref='fail-property'/>
   </xsd:choice>
   <xsd:attribute name='to-field' type='xsd:string' use='optional'/>
   <xsd:attribute name='type' use='required'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='PlainString'/>
      <xsd:enumeration value='String'/>
      <xsd:enumeration value='Double'/>
      <xsd:enumeration value='Float'/>
      <xsd:enumeration value='Long'/>
      <xsd:enumeration value='Integer'/>
      <xsd:enumeration value='Date'/>
      <xsd:enumeration value='Time'/>
      <xsd:enumeration value='Timestamp'/>
      <xsd:enumeration value='Boolean'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='replace' default='true'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='set-if-null' default='true'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='format' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

<!--
    Failure stuff: inline message or from a properties file
-->
 <xsd:element name='fail-message'>
  <xsd:complexType>
   <xsd:attribute name='message' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='fail-property'>
  <xsd:complexType>
   <xsd:attribute name='resource' type='xsd:string' use='required'/>
   <xsd:attribute name='property' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>
</xsd:schema>
