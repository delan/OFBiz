<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE simple-methods PUBLIC "-//OFBiz//DTD Simple Methods//EN" "http://www.ofbiz.org/dtds/simple-methods.dtd">

<!--
 *  Copyright (c) 2002 The Open For Business Project - www.ofbiz.org
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a
 *  copy of this software and associated documentation files (the "Software"),
 *  to deal in the Software without restriction, including without limitation
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense,
 *  and/or sell copies of the Software, and to permit persons to whom the
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @author     David E. Jones (jonesde@ofbiz.org)
 * @version    $Rev$
 * @since      2.0
-->

<simple-methods>
    <simple-method method-name="createWorkEffort" short-description="Create Work Effort">
        <make-value value-name="newEntity" entity-name="WorkEffort"/>
        <sequenced-id-to-env sequence-name="WorkEffort" env-name="workEffortId"/>
        <to-string field-name="workEffortId"/>
        <env-to-field env-name="workEffortId" map-name="newEntity"/>
        <field-to-result field-name="workEffortId" result-name="workEffortId"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        
        <now-timestamp-to-env env-name="nowTimestamp"/>
        <env-to-field env-name="nowTimestamp" field-name="lastStatusUpdate" map-name="newEntity"/>
        <env-to-field env-name="nowTimestamp" field-name="lastModifiedDate" map-name="newEntity"/>
        <env-to-field env-name="nowTimestamp" field-name="createdDate" map-name="newEntity"/>
        <calculate field-name="revisionNumber" map-name="newEntity" type="Long"><number value="1"/></calculate>
        <field-to-field field-name="userLoginId" map-name="userLogin" to-field-name="lastModifiedByUserLogin" to-map-name="newEntity"/>
        <field-to-field field-name="userLoginId" map-name="userLogin" to-field-name="createdByUserLogin" to-map-name="newEntity"/>
        <create-value value-name="newEntity"/>
        
        <!-- create new status entry, and set lastStatusUpdate date -->
        <make-value value-name="newWorkEffortStatus" entity-name="WorkEffortStatus"/>
        <field-to-field field-name="workEffortId" map-name="newEntity" to-map-name="newWorkEffortStatus"/>
        <field-to-field field-name="currentStatusId" map-name="newEntity" to-field-name="statusId" to-map-name="newWorkEffortStatus"/>
        <env-to-field env-name="nowTimestamp" field-name="statusDatetime" map-name="newWorkEffortStatus"/>
        <field-to-field field-name="userLoginId" map-name="userLogin" to-field-name="setByUserLogin" to-map-name="newWorkEffortStatus"/>
        <create-value value-name="newWorkEffortStatus"/>
        
        <!-- Attach the workeffort to a requirement if passed -->
        <if-not-empty field-name="requirementId" map-name="parameters">
            <make-value value-name="workFullfillment" entity-name="WorkRequirementFulfillment"/>
            <field-to-field field-name="workEffortId" map-name="newEntity" to-map-name="workFullfillment"/>
            <field-to-field field-name="requirementId" map-name="parameters" to-map-name="workFullfillment"/>
            <create-value value-name="workFullfillment"/>
        </if-not-empty>
    </simple-method>
    <simple-method method-name="updateWorkEffort" short-description="Update Work Effort">
        <!-- check permissions before moving on: if update or delete logged in user must be associated OR have the corresponding UPDATE or DELETE permissions -->
        
        <!-- temporarily commented out, because users assigned to a project or phase should
              have the capability to modify status on sub-tasks, right? Hmmmm.... -->
              
<!--        <field-to-field field-name="workEffortId" map-name="parameters" to-map-name="findWepaMap"/>
        <field-to-field field-name="partyId" map-name="userLogin" to-map-name="findWepaMap"/>
        <find-by-and entity-name="WorkEffortPartyAssignment" map-name="findWepaMap" list-name="wepaList"/>
        <if-empty field-name="wepaList">
            <check-permission permission="WORKEFFORTMGR" action="_UPDATE"><fail-message message="Security Error: to run updateWorkEffort you must have the WORKEFFORTMGR_UPDATE or WORKEFFORTMGR_ADMIN permission"/></check-permission>
            <check-errors/>
        </if-empty>-->
        
        <make-value value-name="lookupPKMap" entity-name="WorkEffort"/>
        <set-pk-fields map-name="parameters" value-name="lookupPKMap"/>
        <find-by-primary-key entity-name="WorkEffort" map-name="lookupPKMap" value-name="lookedUpValue"/>
        <clone-value value-name="lookedUpValue" new-value-name="savedValue"/>
        
        <now-timestamp-to-env env-name="nowTimestamp"/>
        
        <!-- if necessary create new status entry, and set lastStatusUpdate date -->
        <if-compare-field field-name="currentStatusId" map-name="parameters" operator="not-equals" to-field-name="currentStatusId" to-map-name="lookedUpValue">
            <env-to-field env-name="nowTimestamp" field-name="lastStatusUpdate" map-name="lookedUpValue"/>
            <make-value value-name="newWorkEffortStatus" entity-name="WorkEffortStatus"/>
            <field-to-field field-name="workEffortId" map-name="lookedUpValue" to-map-name="newWorkEffortStatus"/>
            <field-to-field field-name="currentStatusId" map-name="lookedUpValue" to-field-name="statusId" to-map-name="newWorkEffortStatus"/>
            <env-to-field env-name="nowTimestamp" field-name="statusDatetime" map-name="newWorkEffortStatus"/>
            <field-to-field field-name="userLoginId" map-name="userLogin" to-field-name="setByUserLogin" to-map-name="newWorkEffortStatus"/>
            <create-value value-name="newWorkEffortStatus"/>
        </if-compare-field>

        <!-- after checking status change, set all parameters -->        
        <set-nonpk-fields map-name="parameters" value-name="lookedUpValue"/>

        <!-- only save if something has changed -->
        <if-compare-field field-name="lookedUpValue" operator="not-equals" to-field-name="savedValue" type="Object">
            <!-- only set lastModifiedDate after comparing new & old to see if anything has changed -->
            <env-to-field env-name="nowTimestamp" field-name="lastModifiedDate" map-name="lookedUpValue"/>
            <field-to-field field-name="userLoginId" map-name="userLogin" to-field-name="lastModifiedByUserLogin" to-map-name="lookedUpValue"/>
            <if-not-empty field-name="revisionNumber" map-name="lookedUpValue">
                <calculate field-name="revisionNumber" map-name="lookedUpValue" type="Long">
                    <calcop operator="get" field-name="revisionNumber" map-name="lookedUpValue"/>
                    <number value="1"/>
                </calculate>
                <else>
                    <calculate field-name="revisionNumber" map-name="lookedUpValue" type="Long"><number value="1"/></calculate>
                </else>
            </if-not-empty>
            <store-value value-name="lookedUpValue"/>
        </if-compare-field>
    </simple-method>
    <simple-method method-name="deleteWorkEffort" short-description="Delete Work Effort">
        <!-- check permissions before moving on: if update or delete logged in user must be associated OR have the corresponding UPDATE or DELETE permissions -->
        <field-to-field field-name="workEffortId" map-name="parameters" to-map-name="findWepaMap"/>
        <field-to-field field-name="partyId" map-name="userLogin" to-map-name="findWepaMap"/>
        <find-by-and entity-name="WorkEffortPartyAssignment" map-name="findWepaMap" list-name="wepaList"/>
        <if-empty field-name="wepaList">
            <check-permission permission="WORKEFFORTMGR" action="_DELETE"><fail-message message="Security Error: to run deleteWorkEffort you must have the WORKEFFORTMGR_DELETE or WORKEFFORTMGR_ADMIN permission"/></check-permission>
            <check-errors/>
        </if-empty>

        <make-value value-name="lookupPKMap" entity-name="WorkEffort"/>
        <set-pk-fields map-name="parameters" value-name="lookupPKMap"/>
        <find-by-primary-key entity-name="WorkEffort" map-name="lookupPKMap" value-name="lookedUpValue"/>

        <!-- Remove associated/dependent entries from other entities here -->
        <remove-related value-name="lookedUpValue" relation-name="WorkEffortAttribute"/>
        <remove-related value-name="lookedUpValue" relation-name="WorkOrderItemFulfillment"/>
        <remove-related value-name="lookedUpValue" relation-name="FromWorkEffortAssoc"/>
        <remove-related value-name="lookedUpValue" relation-name="ToWorkEffortAssoc"/>
        <remove-related value-name="lookedUpValue" relation-name="NoteData"/>
        <remove-related value-name="lookedUpValue" relation-name="RecurrenceInfo"/>
        <remove-related value-name="lookedUpValue" relation-name="RuntimeData"/>
        <remove-related value-name="lookedUpValue" relation-name="WorkEffortPartyAssignment"/>
        <remove-related value-name="lookedUpValue" relation-name="WorkEffortStatus"/>

        <!-- Delete actual main entity last -->
        <remove-value value-name="lookedUpValue"/>
    </simple-method>

    <!-- communication event workeffort -->
    <simple-method method-name="makeCommunicationEventWorkEffort" short-description="Make a Communication Event WorkEffort">
    	<make-value entity-name="CommunicationEventWorkEff" value-name="lookupMap"/>
    	<set-pk-fields map-name="parameters" value-name="lookupMap"/>
    	<find-by-primary-key entity-name="CommunicationEventWorkEff" map-name="lookupMap" value-name="eventWe"/>
    	<if-not-empty field-name="workEffortId" map-name="eventWe">
    		<set-nonpk-fields map-name="parameters" value-name="eventWe"/>
    		<store-value value-name="eventWe"/>
    	</if-not-empty>
    	<if-empty field-name="workEffortId" map-name="eventWe">
    		<set-nonpk-fields map-name="parameters" value-name="lookupMap"/>
    		<create-value value-name="lookupMap"/>
    	</if-empty>
    </simple-method>
    
    <simple-method method-name="createWorkEffortContactMech" short-description="Create a WorkEffortContactMech">
        <check-permission permission="WORKEFFORTMGR" action="_CREATE"><fail-message message="You do not have permission to perform this operation for this work effort."/></check-permission>
        <check-errors/>
        <make-value value-name="newValue" entity-name="WorkEffortContactMech"/>
        <if-empty map-name="parameters" field-name="contactMechId">
            <if-not-empty map-name="parameters" field-name="addToParty">
                <call-map-processor xml-resource="org/ofbiz/party/contact/PartyContactMechMapProcs.xml"
                    processor-name="partyContactMech" in-map-name="parameters" out-map-name="context"/>
                <call-service service-name="createPartyContactMech" in-map-name="context">
                    <default-message>Party Contact Mechanism successfully created.</default-message>
                    <result-to-field result-name="contactMechId" map-name="newValue"/>
                </call-service> 
                <log level="info" message="Party ContactMech created"/>             
                <else>
                    <call-map-processor xml-resource="org/ofbiz/party/contact/ContactMechMapProcs.xml"
                        processor-name="contactMech" in-map-name="parameters" out-map-name="context"/>
                    <call-service service-name="createContactMech" in-map-name="context">
                        <default-message>Contact Mechanism successfully created.</default-message>
                        <result-to-field result-name="contactMechId" map-name="newValue"/>
                    </call-service> 
                    <log level="info" message="ContactMech created"/>
                </else> 
            </if-not-empty>            
            <else>
                <field-to-field field-name="contactMechId" map-name="parameters" to-map-name="newValue"/>
            </else> 
        </if-empty>   
        <log level="info" message="Creating a WorkEffortContactMech"/>
        <field-to-field field-name="workEffortId" map-name="parameters" to-map-name="newValue"/>
        <set-nonpk-fields map-name="parameters" value-name="newValue"/>
        <field-to-result field-name="contactMechId" map-name="newValue"/>
        <field-to-request field-name="contactMechId" map-name="newValue"/>        
        <create-value value-name="newValue"/>
    </simple-method>
    
    <simple-method method-name="updateWorkEffortContactMech" short-description="Update a WorkEffortContactMech">
        <check-permission permission="WORKEFFORTMGR" action="_UPDATE"><fail-message message="You do not have permission to perform this operation for this work effort."/></check-permission>
        <check-errors/>
        <make-value entity-name="WorkEffortContactMech" value-name="newWorkEffortContactMech"/>
        <!-- Find old value -->
        <make-value entity-name="WorkEffortContactMech" value-name="workEffortContactMechMap"/>
        <set-pk-fields value-name="workEffortContactMechMap" map-name="parameters"/>
        <find-by-primary-key entity-name="WorkEffortContactMech" map-name="workEffortContactMechMap" value-name="workEffortContactMech"/>
        <if-empty field-name="workEffortContactMech">
            <add-error><fail-message message="ERROR: Cannot update specified contact info because it does not correspond to the specified work effort"/></add-error>
        </if-empty>
        <check-errors/>
        
        <clone-value value-name="workEffortContactMech" new-value-name="newWorkEffortContactMech"/>
        
        <!-- If we already have a new contactMechId don't update ContactMech -->
        <if-empty map-name="parameters" field-name="newContactMechId">                
            <log level="info" message="Calling map procs"/>
            <call-map-processor xml-resource="org/ofbiz/party/contact/ContactMechMapProcs.xml"
                processor-name="updateContactMech" in-map-name="parameters" out-map-name="context"/>
            <to-string field-name="contactMechId" map-name="context"/>
            <log level="info" message="Calling generic updateContactMech method"/>
            <call-service service-name="updateContactMech" in-map-name="context">
                <default-message>Contact Mechanism successfully updated.</default-message>
                <result-to-field result-name="contactMechId" map-name="newWorkEffortContactMech"/>
            </call-service>
            <else>
                <field-to-field map-name="parameters" to-map-name="newWorkEffortContactMech" field-name="newContactMechId" to-field-name="contactMechId"/>
            </else> 
        </if-empty> 
        
        <if-compare-field field-name="contactMechId" map-name="parameters" to-map-name="newWorkEffortContactMech" operator="not-equals">                
            <set-nonpk-fields value-name="newWorkEffortContactMech" map-name="parameters" set-if-null="false"/>
            <create-value value-name="newWorkEffortContactMech"/>
            <remove-value value-name="workEffortContactMech"/>
        </if-compare-field>
        
        <field-to-result field-name="contactMechId" map-name="newWorkEffortContactMech"/>
        <field-to-request field-name="contactMechId" map-name="newWorkEffortContactMech"/>      
    </simple-method>    
    
    <simple-method method-name="deleteWorkEffortContactMech" short-description="Delete a WorkEffortContactMech">
        <check-permission permission="WORKEFFORTMGR" action="_DELETE"><fail-message message="You do not have permission to perform this operation for this work effort."/></check-permission>
        <check-errors/>
        <!-- Find old value -->
        <make-value entity-name="WorkEffortContactMech" value-name="workEffortContactMechMap"/>
        <set-pk-fields value-name="workEffortContactMechMap" map-name="parameters"/>
        <find-by-primary-key entity-name="WorkEffortContactMech" map-name="workEffortContactMechMap" value-name="workEffortContactMech"/>
        <if-empty field-name="workEffortContactMech">
            <add-error><fail-message message="ERROR: Cannot delete specified contact info because it does not correspond to the specified work effort"/></add-error>
        </if-empty>
        <check-errors/>
        <remove-value value-name="workEffortContactMech"/>          
    </simple-method>
     
    <simple-method method-name="createWorkEffortPostalAddress" short-description="Create a PostalAddress for WorkEffort">
        <make-value entity-name="WorkEffortContactMech" value-name="newValue"/>
        <log level="info" message="Creating postal address"/>
        <if-not-empty map-name="parameters" field-name="addToParty">
            <call-map-processor xml-resource="org/ofbiz/party/contact/PartyContactMechMapProcs.xml"
                processor-name="postalAddress" in-map-name="parameters" out-map-name="context"/>
            <call-service service-name="createPartyPostalAddress" in-map-name="context">
                <default-message>Party Contact Mechanism successfully created.</default-message>
                <result-to-field result-name="contactMechId" map-name="newValue"/>
            </call-service> 
            <log level="info" message="Party ContactMech created"/> 
            <else>
                <call-map-processor xml-resource="org/ofbiz/party/contact/ContactMechMapProcs.xml"
                    processor-name="postalAddress" in-map-name="parameters" out-map-name="context"/>        
                <call-service in-map-name="context" service-name="createPostalAddress">
                    <default-message>Postal Address successfully created</default-message>
                    <result-to-field result-name="contactMechId" map-name="newValue"/>             
                </call-service>
            </else>
        </if-not-empty>
        <log level="info" message="ContactMech for postal address was ${newValue.contactMechId}, now creating work effort contact mech"/>
        <call-map-processor xml-resource="org/ofbiz/workeffort/workeffort/WorkflowMapProcessors.xml"
                processor-name="workEffortContactMech" in-map-name="parameters" out-map-name="context2"/>  
        <field-to-field field-name="contactMechId" map-name="newValue" to-map-name="context2"/> 
        <log level="info" message="Copied id to context2: ${context2.contactMechId}"/>      
        <call-service in-map-name="context2" break-on-error="true" service-name="createWorkEffortContactMech">
            <default-message>WorkEffort Contact Mechanism successfully created</default-message>       
        </call-service>
        <field-to-request field-name="contactMechId" map-name="newValue"/>
        <field-to-result field-name="contactMechId" map-name="newValue"/>
    </simple-method>
    
    <simple-method method-name="updateWorkEffortPostalAddress" short-description="Update a PostalAddress for WorkEffort">
        <make-value entity-name="WorkEffortContactMech" value-name="newValue"/>
        <call-map-processor xml-resource="org/ofbiz/party/contact/ContactMechMapProcs.xml"
                processor-name="postalAddress" in-map-name="parameters" out-map-name="context"/>        
        <call-service in-map-name="context" service-name="updatePostalAddress">
            <default-message>Postal Address successfully updated</default-message>
            <result-to-field result-name="newContactMechId" map-name="newValue" field-name="contactMechId" />             
        </call-service>
        <call-map-processor xml-resource="org/ofbiz/workeffort/workeffort/WorkflowMapProcessors.xml"
                processor-name="workEffortContactMech" in-map-name="parameters" out-map-name="context2"/>  
        <field-to-field map-name="newValue" field-name="contactMechId"  to-map-name="context2" to-field-name="newContactMechId"/>   
        <string-to-field map-name="context2" field-name="contactMechTypeId" string="POSTAL_ADDRESS"/>
        <log level="info" message="Copied id to context2: ${context2.newContactMechId}"/>
        <call-service in-map-name="context2" service-name="updateWorkEffortContactMech">
            <default-message>WorkEffort Contact Mechanism successfully updated</default-message>       
        </call-service>
        <field-to-request field-name="contactMechId" map-name="newValue"/>
        <field-to-result field-name="contactMechId" map-name="newValue"/>                   
    </simple-method>
     
    <simple-method method-name="createWorkEffortTelecomNumber" short-description="Create a TelecomNumber for WorkEffort">
        <make-value entity-name="WorkEffortContactMech" value-name="newValue"/>
        <log level="info" message="Creating telecom number"/>
        <if-not-empty map-name="parameters" field-name="addToParty">
            <call-map-processor xml-resource="org/ofbiz/party/contact/PartyContactMechMapProcs.xml"
                processor-name="telecomNumber" in-map-name="parameters" out-map-name="context"/>
            <call-service service-name="createPartyTelecomNumber" in-map-name="context">
                <default-message>Party Contact Mechanism successfully created.</default-message>
                <result-to-field result-name="contactMechId" map-name="newValue"/>
            </call-service> 
            <log level="info" message="Party ContactMech created"/> 
            <else>
                <call-map-processor xml-resource="org/ofbiz/party/contact/ContactMechMapProcs.xml"
                    processor-name="telecomNumber" in-map-name="parameters" out-map-name="context"/>        
                <call-service in-map-name="context" service-name="createTelecomNumber">
                    <default-message>Telecom number successfully created</default-message>
                    <result-to-field result-name="contactMechId" map-name="newValue"/>             
                </call-service>
            </else>
        </if-not-empty>                
        <call-map-processor xml-resource="org/ofbiz/workeffort/workeffort/WorkflowMapProcessors.xml"
                processor-name="workEffortContactMech" in-map-name="parameters" out-map-name="context2"/>  
        <field-to-field field-name="contactMechId" map-name="newValue" to-map-name="context2"/> 
        <log level="info" message="Copied id to context2: ${context2.contactMechId}"/>      
        <call-service in-map-name="context2" break-on-error="true" service-name="createWorkEffortContactMech">
            <default-message>WorkEffort Contact Mechanism successfully created</default-message>       
        </call-service>
        <field-to-request field-name="contactMechId" map-name="newValue"/>
        <field-to-result field-name="contactMechId" map-name="newValue"/>
    </simple-method>
    
    <simple-method method-name="updateWorkEffortTelecomNumber" short-description="Update a TelecomNumber for WorkEffort">
        <make-value entity-name="WorkEffortContactMech" value-name="newValue"/>
        <call-map-processor xml-resource="org/ofbiz/party/contact/ContactMechMapProcs.xml"
                processor-name="telecomNumber" in-map-name="parameters" out-map-name="context"/>        
        <call-service in-map-name="context" service-name="updateTelecomNumber">
            <default-message>Telecom Number successfully updated</default-message>
            <result-to-field result-name="newContactMechId" map-name="newValue" field-name="contactMechId" />             
        </call-service>
        
        <call-map-processor xml-resource="org/ofbiz/workeffort/workeffort/WorkflowMapProcessors.xml"
                processor-name="workEffortContactMech" in-map-name="parameters" out-map-name="context2"/>  
        <field-to-field map-name="newValue" field-name="contactMechId"  to-map-name="context2" to-field-name="newContactMechId"/>   
        <string-to-field map-name="context2" field-name="contactMechTypeId" string="TELECOM_NUMBER"/>
        <log level="info" message="Copied id to context2: ${context2.newContactMechId}"/>
        <call-service in-map-name="context2" service-name="updateWorkEffortContactMech">
            <default-message>Party Contact Mechanism successfully updated</default-message>       
        </call-service>
        <log level="info" message="Setting result id: ${newValue.contactMechId}"/>
        <field-to-request field-name="contactMechId" map-name="newValue"/>
        <field-to-result field-name="contactMechId" map-name="newValue"/>                   
    </simple-method>  
    
    <simple-method method-name="createWorkEffortEmailAddress" short-description="Create an email address for WorkEffort">
        <call-map-processor xml-resource="org/ofbiz/workeffort/workeffort/WorkflowMapProcessors.xml"
            processor-name="emailAddress" in-map-name="parameters" out-map-name="context"/>
        <check-errors/>
        <string-to-field map-name="context" field-name="contactMechTypeId" string="EMAIL_ADDRESS"/>
        <call-service service-name="createWorkEffortContactMech" in-map-name="context">
            <default-message>WorkEffort Contact Mechanism successfully created.</default-message>
            <result-to-result result-name="contactMechId"/>
            <result-to-request result-name="contactMechId"/>
        </call-service>         
    </simple-method>
    
    <simple-method method-name="updateWorkEffortEmailAddress" short-description="Update an email address for WorkEffort">
        <call-map-processor xml-resource="org/ofbiz/workeffort/workeffort/WorkflowMapProcessors.xml"
            processor-name="emailAddress" in-map-name="parameters" out-map-name="context"/>
        <check-errors/>
        <string-to-field map-name="context" field-name="contactMechTypeId" string="EMAIL_ADDRESS"/>
        <call-service service-name="updateWorkEffortContactMech" in-map-name="context">
            <default-message>WorkEffort Contact Mechanism successfully updated.</default-message>
            <result-to-result result-name="contactMechId"/>
            <result-to-request result-name="contactMechId"/>
        </call-service>         
    </simple-method> 
                
    <simple-method method-name="quickAssignPartyToWorkEffort" short-description="Quick Assign Party To WorkEffort as Owner">
        <if-not-empty field-name="quickAssignPartyId" map-name="parameters">
            <now-timestamp-to-env env-name="nowTimestamp"/>
            <!-- add a party assignment for the creator of the event, use the list method and let the EE do the update or create... -->
            <make-value value-name="newPartyRole" entity-name="PartyRole"/>
            <field-to-field field-name="quickAssignPartyId" map-name="parameters" to-field-name="partyId" to-map-name="newPartyRole"/>
            <string-to-field string="CAL_OWNER" field-name="roleTypeId" map-name="newPartyRole"/>
            <field-to-list field-name="newPartyRole" list-name="newPartyRoleList"/>
            <store-list list-name="newPartyRoleList"/>
            
            <make-value value-name="newWorkEffortPartyAssignment" entity-name="WorkEffortPartyAssignment"/>
            <field-to-field field-name="workEffortId" map-name="parameters" to-map-name="newWorkEffortPartyAssignment"/>
            <field-to-field field-name="quickAssignPartyId" map-name="parameters" to-field-name="partyId" to-map-name="newWorkEffortPartyAssignment"/>
            <string-to-field string="CAL_OWNER" field-name="roleTypeId" map-name="newWorkEffortPartyAssignment"/>
            <string-to-field string="CAL_ACCEPTED" field-name="statusId" map-name="newWorkEffortPartyAssignment"/>
            <env-to-field env-name="nowTimestamp" field-name="fromDate" map-name="newWorkEffortPartyAssignment"/>
            <create-value value-name="newWorkEffortPartyAssignment"/>
        </if-not-empty>
    </simple-method>
    <simple-method method-name="quickAssignPartyToWorkEffortWithRole" short-description="Quick Assign Party To WorkEffort">
        <if-not-empty field-name="quickAssignPartyId" map-name="parameters">
            <now-timestamp-to-env env-name="nowTimestamp"/>
            <!-- add a party assignment for the creator of the event, use the list method and let the EE do the update or create... -->
            <make-value value-name="newPartyRole" entity-name="PartyRole"/>
            <field-to-field field-name="quickAssignPartyId" map-name="parameters" to-field-name="partyId" to-map-name="newPartyRole"/>
            <field-to-field field-name="roleTypeId" map-name="parameters" to-map-name="newPartyRole"/>
            <field-to-list field-name="newPartyRole" list-name="newPartyRoleList"/>
            <store-list list-name="newPartyRoleList"/>
            
            <make-value value-name="newWorkEffortPartyAssignment" entity-name="WorkEffortPartyAssignment"/>
            <field-to-field field-name="workEffortId" map-name="parameters" to-map-name="newWorkEffortPartyAssignment"/>
            <field-to-field field-name="quickAssignPartyId" map-name="parameters" to-field-name="partyId" to-map-name="newWorkEffortPartyAssignment"/>
            <field-to-field field-name="roleTypeId" map-name="parameters" to-map-name="newWorkEffortPartyAssignment"/>
            <string-to-field string="CAL_ACCEPTED" field-name="statusId" map-name="newWorkEffortPartyAssignment"/>
            <env-to-field env-name="nowTimestamp" field-name="fromDate" map-name="newWorkEffortPartyAssignment"/>
            <create-value value-name="newWorkEffortPartyAssignment"/>
        </if-not-empty>
    </simple-method>
    <simple-method method-name="createWorkEffortNote" short-description="Create Work Effort Note">
        <make-value value-name="newEntity" entity-name="NoteData"/>
        <sequenced-id-to-env sequence-name="NoteData" env-name="noteId"/>
        <to-string field-name="noteId"/>
        <env-to-field env-name="noteId" map-name="newEntity"/>
        <field-to-result field-name="noteId" result-name="noteId"/>
        <field-to-field field-name="noteInfo" map-name="parameters" to-map-name="newEntity"/>
        <field-to-field field-name="noteParty" map-name="parameters" to-map-name="newEntity"/>
        <field-to-field field-name="noteName" map-name="parameters" to-map-name="newEntity"/>
        <now-timestamp-to-env env-name="nowTimestamp"/>
        <env-to-field env-name="nowTimestamp" field-name="noteDateTime" map-name="newEntity"/>
        <create-value value-name="newEntity"/>
        
        <!-- create new status entry, and set lastStatusUpdate date -->
        <make-value value-name="newWorkEffortNote" entity-name="WorkEffortNote"/>
        <field-to-field field-name="noteId" map-name="newEntity" to-map-name="newWorkEffortNote"/>
        <field-to-field field-name="workEffortId" map-name="parameters" to-map-name="newWorkEffortNote"/>
        <create-value value-name="newWorkEffortNote"/>
    </simple-method>

    <simple-method method-name="createWorkEffortAssoc" short-description="Create a WorkEffort association">
        <make-value value-name="lookupPKMap" entity-name="WorkEffortAssoc"/>
        <set-pk-fields map-name="parameters" value-name="lookupPKMap"/>
        <if-empty field-name="fromDate" map-name="lookupPKMap">
            <now-timestamp-to-env env-name="nowTimestamp"/>
            <env-to-field env-name="nowTimestamp" field-name="fromDate" map-name="lookupPKMap"/>
        </if-empty>        
        <find-by-primary-key entity-name="WorkEffortAssoc" map-name="lookupPKMap" value-name="newEntity"/>
        <if-not-empty field-name="newEntity">
            <add-error><fail-property resource="WorkEffortUiLabels" property="WorkEffortWorkEffortAssocIdAlreadyExist"/></add-error>
            <check-errors/>
        <else>
            <make-value value-name="newEntity" entity-name="WorkEffortAssoc"/>  
            <set-pk-fields map-name="parameters" value-name="newEntity"/>  
            <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
            <if-empty field-name="sequenceNum" map-name="newEntity">
                <calculate field-name="sequenceNum" map-name="newEntity" type="Long"><number value="0"/></calculate>
            </if-empty>        
            <create-value value-name="newEntity"/>
        </else>
        </if-not-empty>
    </simple-method>
    <simple-method method-name="updateWorkEffortAssoc" short-description="Update a WorkEffort association">
        <make-value value-name="lookupPKMap" entity-name="WorkEffortAssoc"/>
        <set-pk-fields map-name="parameters" value-name="lookupPKMap"/>
        <find-by-primary-key entity-name="WorkEffortAssoc" map-name="lookupPKMap" value-name="lookedUpValue"/>
        <set-nonpk-fields map-name="parameters" value-name="lookedUpValue"/>
        <store-value value-name="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="removeWorkEffortAssoc" short-description="Remove a WorkEffort association">
        <make-value value-name="lookupPKMap" entity-name="WorkEffortAssoc"/>
        <set-pk-fields map-name="parameters" value-name="lookupPKMap"/>
        <find-by-primary-key entity-name="WorkEffortAssoc" map-name="lookupPKMap" value-name="lookedUpValue"/>
        <if-not-empty map-name="lookedUpValue" field-name="workEffortIdFrom">
            <remove-value value-name="lookedUpValue"/>
        </if-not-empty>
    </simple-method>

    <simple-method method-name="createWorkEffortGoodStandard" short-description="Create a link between a WorkEffort and a Product">
        <make-value value-name="lookupPKMap" entity-name="WorkEffortGoodStandard"/>
        <set-pk-fields map-name="parameters" value-name="lookupPKMap"/>
        <find-by-primary-key entity-name="WorkEffortGoodStandard" map-name="lookupPKMap" value-name="newEntity"/>
        <if-not-empty field-name="newEntity">
            <add-error><fail-property resource="WorkEffortUiLabels" property="WorkEffortWorkEffortGoodStandardAlreadyExist"/></add-error>
            <check-errors/>
        <else>
            <make-value value-name="newEntity" entity-name="WorkEffortGoodStandard"/>  
            <set-pk-fields map-name="parameters" value-name="newEntity"/>  
            <if-empty field-name="fromDate" map-name="newEntity">
                <now-timestamp-to-env env-name="nowTimestamp"/>
                <env-to-field env-name="nowTimestamp" field-name="fromDate" map-name="newEntity"/>
            </if-empty>        
            <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
            <create-value value-name="newEntity"/>
        </else>
        </if-not-empty>
    </simple-method>
    <simple-method method-name="updateWorkEffortGoodStandard" short-description="Update a link between a WorkEffort and a Product">
        <make-value value-name="lookupPKMap" entity-name="WorkEffortGoodStandard"/>
        <set-pk-fields map-name="parameters" value-name="lookupPKMap"/>
        <find-by-primary-key entity-name="WorkEffortGoodStandard" map-name="lookupPKMap" value-name="lookedUpValue"/>
        <set-nonpk-fields map-name="parameters" value-name="lookedUpValue"/>
        <store-value value-name="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="removeWorkEffortGoodStandard" short-description="Remove a link between a WorkEffort and a Product">
        <make-value value-name="lookupPKMap" entity-name="WorkEffortGoodStandard"/>
        <set-pk-fields map-name="parameters" value-name="lookupPKMap"/>
        <find-by-primary-key entity-name="WorkEffortGoodStandard" map-name="lookupPKMap" value-name="lookedUpValue"/>
        <if-not-empty map-name="lookedUpValue" field-name="workEffortId">
            <remove-value value-name="lookedUpValue"/>
        </if-not-empty>
    </simple-method>
    <simple-method method-name="createWorkEffortInventoryAssign" short-description="Create WorkEffortInventoryAssign">
        <string-to-field string="Create WorkEffortInventoryAssign" field-name="operationName"/>
        <make-value value-name="newEntity" entity-name="WorkEffortInventoryAssign"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
    </simple-method>
</simple-methods>
