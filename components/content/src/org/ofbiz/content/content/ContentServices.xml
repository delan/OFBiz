<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE simple-methods PUBLIC "-//OFBiz//DTD Simple Methods//EN" "http://www.ofbiz.org/dtds/simple-methods.dtd">

<!--
 * Copyright (c) 2001-2003 The Open For Business Project and repective authors.
 * Permission is hereby granted, free of charge, to any person obtaining a
 *  copy of this software and associated documentation files (the "Software"),
 *  to deal in the Software without restriction, including without limitation
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense,
 *  and/or sell copies of the Software, and to permit persons to whom the
 *  Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 *  in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @author <a href="mailto:jonesde@ofbiz.org">David E. Jones</a>
 * @version 1.0
 * Created on April 2, 2002
 -->
<simple-methods>
    <!-- Methods for Content -->
    <!-- DEPRECATED This simple method has been replaced by a java equivalent in ContentServices.java 
         It will be removed soon. -->
    <simple-method method-name="createContent" short-description="Create a Content">
        <make-value entity-name="Content" value-name="currentContent"/>
        <set-pk-fields map-name="parameters" value-name="currentContent"/>
        <set-nonpk-fields map-name="parameters" value-name="currentContent"/>
        <field-to-env field-name="userLogin" map-name="parameters" env-name="userLogin"/>
        <now-timestamp-to-env env-name="nowTimestamp" />
        <if-empty field-name="createdDate" map-name="currentContent">
            <env-to-field env-name="nowTimestamp" field-name="createdDate" map-name="currentContent" />
        </if-empty>
        <if-empty field-name="lastModifiedDate" map-name="currentContent">
            <env-to-field env-name="nowTimestamp" map-name="currentContent" field-name="lastModifiedDate" />
        </if-empty>
        <if-not-empty field-name="userLogin" >
            <if-empty map-name="currentContent" field-name="createdByUserLogin">
                <field-to-field map-name="userLogin" field-name="userLoginId"
                             to-map-name="currentContent" to-field-name="createdByUserLogin" />
            </if-empty>
            <if-empty map-name="currentContent" field-name="lastModifiedByUserLogin">
                <field-to-field map-name="userLogin" field-name="userLoginId"
                             to-map-name="currentContent" to-field-name="lastModifiedByUserLogin" />
            </if-empty>
        </if-not-empty>
        
        <if-empty field-name="contentId" map-name="currentContent">
          <sequenced-id-to-env env-name="id" sequence-name="Content" to-string="true"/>
          <env-to-field env-name="id" field-name="contentId" map-name="currentContent"/>
        </if-empty>
    
        <if-not-empty map-name="parameters" field-name="contentPurposeTypeId" >
            <field-to-list list-name="contentPurposeList" 
                          map-name="parameters" field-name="contentPurposeTypeId" />
        </if-not-empty>
        <if-empty map-name="parameters" field-name="contentPurposeTypeId" >
            <string-to-list list-name="contentPurposeList" string="ARTICLE"/>
        </if-empty>
        <field-to-field field-name="contentPurposeList" to-map-name="context"/>
    
        <if-empty map-name="parameters" field-name="targetOperationList" >
            <string-to-list list-name="targetOperationList" string="CREATE_CONTENT"/>
        </if-empty>
        <field-to-field field-name="targetOperationList" to-map-name="context"/>
    
        <field-to-field field-name="currentContent" to-map-name="context"/>
        <field-to-field field-name="userLogin" map-name="parameters" to-map-name="context"/>
        <call-service in-map-name="context" service-name="checkContentPermission">
            <result-to-field field-name="permissionStatus" result-name="permissionStatus"/>
            <result-to-field field-name="roleTypeList" result-name="roleTypeList"/>
        </call-service>
        <log level="always" message="permissionStatus:${permissionStatus}"/>
        <if-compare field-name="permissionStatus" operator="not-equals"
          type="String" value="granted">
          <add-error>
            <fail-message message="Permission not granted for creating Content."/>
          </add-error>
        </if-compare>
        <check-errors/>
        <if-compare field-name="permissionStatus" operator="equals" type="String" value="granted">
            <create-value value-name="currentContent"/>
        </if-compare>
        <log level="always" message="currentContent:${currentContent}"/>
        <field-to-field map-name="currentContent" field-name="contentId" to-map-name="parameters"/>
        <field-to-result map-name="currentContent" field-name="contentId" result-name="contentId"/>
        <field-to-result field-name="roleTypeList" result-name="roleTypeList" />
        <log level="always" message="result:${result}"/>
        <log level="always" message="parameters:${parameters}"/>
    </simple-method>
    <simple-method method-name="updateContent" short-description="Update a Content">

        <make-value entity-name="Content" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="Content" map-name="lookupKeyValue" value-name="currentContent"/>
	<to-string map-name="parameters" field-name="locale" />
        <set-nonpk-fields map-name="parameters" value-name="currentContent"/>

        <get-related value-name="currentContent" relation-name="ContentPurpose"
                  list-name="contentPurposeList" />
        <field-to-field field-name="contentPurposeList" to-map-name="context"/>
    
        <if-empty map-name="parameters" field-name="targetOperationList" >
            <string-to-list list-name="targetOperationList" string="UPDATE_CONTENT"/>
        </if-empty>
        <field-to-field field-name="targetOperationList" to-map-name="context"/>
    
        <field-to-field field-name="currentContent" to-map-name="context"/>
        <field-to-field field-name="userLogin" map-name="parameters" to-map-name="context"/>
        <call-service in-map-name="context" service-name="checkContentPermission">
            <result-to-field field-name="permissionStatus" result-name="permissionStatus"/>
            <result-to-field field-name="roleTypeList" result-name="roleTypeList"/>
        </call-service>
        <log level="always" message="permissionStatus:${permissionStatus}"/>
        <if-compare field-name="permissionStatus" operator="not-equals"
          type="String" value="granted">
          <add-error>
            <fail-message message="Permission not granted for creating Content."/>
          </add-error>
        </if-compare>
        <check-errors/>
        <if-compare field-name="permissionStatus" operator="equals" type="String" value="granted">
            <store-value value-name="currentContent"/>
        </if-compare>
    </simple-method>

    <simple-method method-name="deleteContent" short-description="Delete a Content">
        <check-permission permission="CONTENTMGR" action="_DELETE"><fail-message message="Security Error: to run updateContent you must have the CONTENTMGR_DELETE or CONTENTMGR_ADMIN permission"/></check-permission>
        <check-errors/>

        <make-value entity-name="Content" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="Content" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <remove-value value-name="lookedUpValue"/>
    </simple-method>
    
    <!-- Methods for ContentAssoc -->
    <simple-method login-required="true" method-name="assocContent" short-description="Associate Content" >
        <log level="always" message="assocContent, parameters:${parameters}"/>
        <log level="always" message="assocContent, context:${context}"/>
        <call-service in-map-name="parameters" service-name="checkAssocPermission">
            <result-to-field field-name="permissionStatus" result-name="permissionStatus"/>
            <result-to-field field-name="rolesOut" result-name="rolesOut"/>
        </call-service>
        <log level="always" message="permissionStatus:${permissionStatus}"/>


        <field-to-field map-name="parameters" field-name="contentIdTo" 
                     to-map-name="pk" to-field-name="contentId" />
        <field-to-field field-name="currentContent" to-map-name="context"/>

        <field-to-field map-name="parameters" field-name="contentIdFrom" 
                     to-map-name="pk" to-field-name="contentId" />
        <field-to-field field-name="userLogin" map-name="parameters" to-map-name="context"/>
        <find-by-primary-key value-name="currentContent" entity-name="Content" map-name="pk" />
        <find-by-primary-key value-name="fromContent" entity-name="Content" map-name="pk" />

        <if-compare field-name="permissionStatus" operator="equals" type="String" value="granted">
                <make-value entity-name="ContentAssoc" value-name="newContentAssoc"/>
                <field-to-field map-name="parameters" field-name="contentIdTo" 
                         to-map-name="newContentAssoc" to-field-name="contentIdTo" />
                <field-to-field map-name="parameters" field-name="contentIdFrom" 
                         to-map-name="newContentAssoc" to-field-name="contentId" />
                <field-to-field 
                        map-name="parameters" field-name="contentAssocTypeId" 
                        to-map-name="newContentAssoc" to-field-name="contentAssocTypeId" />
                <now-timestamp-to-env env-name="nowTimestamp"/>
                <field-to-field map-name="newUserLogin" field-name="userLoginId"
                    to-field-name="createdByUserLogin" to-map-name="newContentAssoc"/>
                <field-to-field map-name="newUserLogin" field-name="userLoginId"
                    to-field-name="lastModifiedByUserLogin" to-map-name="newContentAssoc"/>
                <env-to-field env-name="nowTimestamp" field-name="createdDate" map-name="newContentAssoc"/>
                <env-to-field env-name="nowTimestamp" field-name="lastModifiedDate" map-name="newContentAssoc"/>
              
                <if-empty map-name="parameters" field-name="fromDate" >
                    <env-to-field env-name="nowTimestamp" field-name="fromDate" map-name="parameters"/>
                    <to-string map-name="parameters" field-name="fromDate" />
                </if-empty>
                <field-to-field map-name="parameters" field-name="fromDate" to-map-name="newContentAssoc"/>
                <if-not-empty map-name="parameters" field-name="thruDate" >
                    <field-to-field map-name="parameters" field-name="thruDate" to-map-name="newContentAssoc"/>
                </if-not-empty>
                <create-value value-name="newContentAssoc" />
        </if-compare>
        <check-errors/>
    </simple-method>

    <simple-method method-name="createContentAssoc" short-description="Create an Content Assoc">
        <check-permission permission="CONTENTMGR" action="_CREATE"><fail-message message="Security Error: to run createContentAssoc you must have the CONTENTMGR_CREATE or CONTENTMGR_ADMIN permission"/></check-permission>
        <check-errors/>

        <make-value entity-name="ContentAssoc" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <if-empty field-name="contentIdTo" map-name="parameters">
            <call-service service-name="createContent">
                <result-to-field result-name="contentId" field-name="contentIdTo" map-name="newEntity"/>
            </call-service>
        </if-empty>
        <if-empty field-name="fromDate" map-name="parameters">
            <now-timestamp-to-env env-name="nowTimestamp"/>
            <env-to-field env-name="nowTimestamp" field-name="fromDate" map-name="newEntity"/>
        </if-empty>
        <create-value value-name="newEntity"/>
        <field-to-result map-name="newEntity" field-name="contentId" result-name="contentId" />
        <field-to-result map-name="newEntity" field-name="contentIdTo" result-name="contentIdTo" />
    </simple-method>
    <simple-method method-name="updateContentAssoc" short-description="Update an Content Assoc">
        <check-permission permission="CONTENTMGR" action="_UPDATE"><fail-message message="Security Error: to run updateContentAssoc you must have the CONTENTMGR_UPDATE or CONTENTMGR_ADMIN permission"/></check-permission>
        <check-errors/>

        <make-value entity-name="ContentAssoc" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentAssoc" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <set-nonpk-fields map-name="parameters" value-name="lookedUpValue"/>
        <store-value value-name="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="removeContentAssoc" short-description="Remove a Content Assoc">
        <check-permission permission="CONTENTMGR" action="_DELETE"><fail-message message="Security Error: to run removeContentAssoc you must have the CONTENTMGR_DELETE or CONTENTMGR_ADMIN permission"/></check-permission>
        <check-errors/>

        <make-value entity-name="ContentAssoc" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentAssoc" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <remove-value value-name="lookedUpValue"/>
    </simple-method>    
    
    <!-- Methods for ContentMetaData -->
    <simple-method method-name="createContentMetaData" short-description="Create Content Meta Data">
        <check-permission permission="CONTENTMGR" action="_CREATE"><fail-message message="Security Error: to run createContentMetaData you must have the CONTENTMGR_CREATE or CONTENTMGR_ADMIN permission"/></check-permission>
        <check-errors/>

        <make-value entity-name="ContentMetaData" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
    </simple-method>
    <simple-method method-name="updateContentMetaData" short-description="Update Content Meta Data">
        <check-permission permission="CONTENTMGR" action="_UPDATE"><fail-message message="Security Error: to run updateContentMetaData you must have the CONTENTMGR_UPDATE or CONTENTMGR_ADMIN permission"/></check-permission>
        <check-errors/>

        <make-value entity-name="ContentMetaData" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentMetaData" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <set-nonpk-fields map-name="parameters" value-name="lookedUpValue"/>
        <store-value value-name="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="removeContentMetaData" short-description="Remove Content Meta Data">
        <check-permission permission="CONTENTMGR" action="_DELETE"><fail-message message="Security Error: to run removeContentMetaData you must have the CONTENTMGR_DELETE or CONTENTMGR_ADMIN permission"/></check-permission>
        <check-errors/>

        <make-value entity-name="ContentMetaData" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentMetaData" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <remove-value value-name="lookedUpValue"/>
    </simple-method>    
    
    <!-- Methods for ContentRole -->
    <simple-method method-name="createContentRole" short-description="Create Content Role">
        <check-permission permission="CONTENTMGR" action="_CREATE"><fail-message message="Security Error: to run createContentRole you must have the CONTENTMGR_CREATE or CONTENTMGR_ADMIN permission"/></check-permission>
        <check-errors/>

        <make-value entity-name="ContentRole" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
    </simple-method>
    <simple-method method-name="updateContentRole" short-description="Update Content Role">
        <check-permission permission="CONTENTMGR" action="_UPDATE"><fail-message message="Security Error: to run updateContentRole you must have the CONTENTMGR_UPDATE or CONTENTMGR_ADMIN permission"/></check-permission>
        <check-errors/>

        <make-value entity-name="ContentRole" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentRole" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <set-nonpk-fields map-name="parameters" value-name="lookedUpValue"/>
        <store-value value-name="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="removeContentRole" short-description="Remove Content Role">
        <check-permission permission="CONTENTMGR" action="_DELETE"><fail-message message="Security Error: to run removeContentRole you must have the CONTENTMGR_DELETE or CONTENTMGR_ADMIN permission"/></check-permission>
        <check-errors/>

        <make-value entity-name="ContentRole" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentRole" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <remove-value value-name="lookedUpValue"/>
    </simple-method>
        
  <!-- Methods for ContentType -->
    <simple-method method-name="createContentType" short-description="Create Content Type">
        <check-permission action="_CREATE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run createContentType you must have the CONTENTMGR_CREATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentType" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
    </simple-method>
    <simple-method method-name="updateContentType" short-description="Update Content Type">
        <check-permission action="_UPDATE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run updateContentType you must have the CONTENTMGR_UPDATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentType" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentType" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <set-nonpk-fields map-name="parameters" value-name="lookedUpValue"/>
        <store-value value-name="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="removeContentType" short-description="Remove Content Type">
        <check-permission action="_DELETE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run removeContentType you must have the CONTENTMGR_DELETE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentType" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentType" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <remove-value value-name="lookedUpValue"/>
    </simple-method>
    
    <!-- Methods for ContentTypeAttr -->
    <simple-method method-name="createContentTypeAttr" short-description="Create Content TypeAttr">
        <check-permission action="_CREATE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run createContentTypeAttr you must have the CONTENTMGR_CREATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentTypeAttr" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
    </simple-method>
    <simple-method method-name="removeContentTypeAttr" short-description="Remove Content TypeAttr">
        <check-permission action="_DELETE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run removeContentTypeAttr you must have the CONTENTMGR_DELETE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentTypeAttr" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentTypeAttr" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <remove-value value-name="lookedUpValue"/>
    </simple-method>
    
    <!-- Methods for ContentAssocType -->
    <simple-method method-name="createContentAssocType" short-description="Create Content AssocType">
        <check-permission action="_CREATE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run createContentAssocType you must have the CONTENTMGR_CREATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentAssocType" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
    </simple-method>
    <simple-method method-name="updateContentAssocType" short-description="Update Content AssocType">
        <check-permission action="_UPDATE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run updateContentAssocType you must have the CONTENTMGR_UPDATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentAssocType" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentAssocType" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <set-nonpk-fields map-name="parameters" value-name="lookedUpValue"/>
        <store-value value-name="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="removeContentAssocType" short-description="Remove Content AssocType">
        <check-permission action="_DELETE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run removeContentAssocType you must have the CONTENTMGR_DELETE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentAssocType" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentAssocType" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <remove-value value-name="lookedUpValue"/>
    </simple-method>
    
    <!-- Methods for ContentPurposeType -->
    <simple-method method-name="createContentPurposeType" short-description="Create Content PurposeType">
        <check-permission action="_CREATE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run createContentPurposeType you must have the CONTENTMGR_CREATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentPurposeType" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
    </simple-method>
    <simple-method method-name="updateContentPurposeType" short-description="Update Content PurposeType">
        <check-permission action="_UPDATE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run updateContentPurposeType you must have the CONTENTMGR_UPDATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentPurposeType" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentPurposeType" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <set-nonpk-fields map-name="parameters" value-name="lookedUpValue"/>
        <store-value value-name="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="removeContentPurposeType" short-description="Remove Content PurposeType">
        <check-permission action="_DELETE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run removeContentPurposeType you must have the CONTENTMGR_DELETE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentPurposeType" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentPurposeType" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <remove-value value-name="lookedUpValue"/>
    </simple-method>
    
    <!-- Methods for ContentRole -->
    <simple-method method-name="createContentRole" short-description="Create Content Role">
        <check-permission action="_CREATE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run createContentRole you must have the CONTENTMGR_CREATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentRole" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
    </simple-method>
    <simple-method method-name="updateContentRole" short-description="Update Content Role">
        <check-permission action="_UPDATE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run updateContentRole you must have the CONTENTMGR_UPDATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentRole" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentRole" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <set-nonpk-fields map-name="parameters" value-name="lookedUpValue"/>
        <store-value value-name="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="removeContentRole" short-description="Remove Content Role">
        <check-permission action="_DELETE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run removeContentRole you must have the CONTENTMGR_DELETE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentRole" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentRole" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <remove-value value-name="lookedUpValue"/>
    </simple-method>
    
    <!-- Methods for ContentAssocPredicate -->
    <simple-method method-name="createContentAssocPredicate" short-description="Create Content AssocPredicate">
        <check-permission action="_CREATE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run createContentAssocPredicate you must have the CONTENTMGR_CREATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentAssocPredicate" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
    </simple-method>
    <simple-method method-name="updateContentAssocPredicate" short-description="Update Content AssocPredicate">
        <check-permission action="_UPDATE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run updateContentAssocPredicate you must have the CONTENTMGR_UPDATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentAssocPredicate" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentAssocPredicate" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <set-nonpk-fields map-name="parameters" value-name="lookedUpValue"/>
        <store-value value-name="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="removeContentAssocPredicate" short-description="Remove Content AssocPredicate">
        <check-permission action="_DELETE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run removeContentAssocPredicate you must have the CONTENTMGR_DELETE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentAssocPredicate" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentAssocPredicate" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <remove-value value-name="lookedUpValue"/>
    </simple-method>
    
    <!-- Methods for ContentPurposeOperation -->
    <simple-method method-name="createContentPurposeOperation" short-description="Create Content PurposeOperation">
        <check-permission action="_CREATE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run createContentPurposeOperation you must have the CONTENTMGR_CREATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentPurposeOperation" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
    </simple-method>
    <simple-method method-name="updateContentPurposeOperation" short-description="Update Content PurposeOperation">
        <check-permission action="_UPDATE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run updateContentPurposeOperation you must have the CONTENTMGR_UPDATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentPurposeOperation" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentPurposeOperation" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <set-nonpk-fields map-name="parameters" value-name="lookedUpValue"/>
        <store-value value-name="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="removeContentPurposeOperation" short-description="Remove Content PurposeOperation">
        <check-permission action="_DELETE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run removeContentPurposeOperation you must have the CONTENTMGR_DELETE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentPurposeOperation" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentPurposeOperation" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <remove-value value-name="lookedUpValue"/>
    </simple-method>
    
    <!-- Methods for ContentPurpose -->
    <simple-method method-name="createContentPurpose" short-description="Create Content Purpose">
        <check-permission action="_CREATE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run createContentPurpose you must have the CONTENTMGR_CREATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentPurpose" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
    </simple-method>
    <simple-method method-name="updateContentPurpose" short-description="Update Content Purpose">
        <check-permission action="_UPDATE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run updateContentPurpose you must have the CONTENTMGR_UPDATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentPurpose" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentPurpose" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <set-nonpk-fields map-name="parameters" value-name="lookedUpValue"/>
        <store-value value-name="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="removeContentPurpose" short-description="Remove Content Purpose">
        <check-permission action="_DELETE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run removeContentPurpose you must have the CONTENTMGR_DELETE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentPurpose" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentPurpose" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <remove-value value-name="lookedUpValue"/>
    </simple-method>
    
    <!-- Methods for ContentOperation -->
    <simple-method method-name="createContentOperation" short-description="Create Content Operation">
        <check-permission action="_CREATE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run createContentOperation you must have the CONTENTMGR_CREATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentOperation" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
    </simple-method>
    <simple-method method-name="updateContentOperation" short-description="Update Content Operation">
        <check-permission action="_UPDATE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run updateContentOperation you must have the CONTENTMGR_UPDATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentOperation" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentOperation" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <set-nonpk-fields map-name="parameters" value-name="lookedUpValue"/>
        <store-value value-name="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="removeContentOperation" short-description="Remove Content Operation">
        <check-permission action="_DELETE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run removeContentOperation you must have the CONTENTMGR_DELETE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentOperation" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentOperation" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <remove-value value-name="lookedUpValue"/>
    </simple-method>
    
    <!-- Methods for ContentPurposeOperation -->
    <simple-method method-name="createContentPurposeOperation" short-description="Create Content PurposeOperation">
        <check-permission action="_CREATE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run createContentPurposeOperation you must have the CONTENTMGR_CREATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentPurposeOperation" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
    </simple-method>
    <simple-method method-name="updateContentPurposeOperation" short-description="Update Content PurposeOperation">
        <check-permission action="_UPDATE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run updateContentPurposeOperation you must have the CONTENTMGR_UPDATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentPurposeOperation" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentPurposeOperation" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <set-nonpk-fields map-name="parameters" value-name="lookedUpValue"/>
        <store-value value-name="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="removeContentPurposeOperation" short-description="Remove Content PurposeOperation">
        <check-permission action="_DELETE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run removeContentPurposeOperation you must have the CONTENTMGR_DELETE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentPurposeOperation" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentPurposeOperation" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <remove-value value-name="lookedUpValue"/>
    </simple-method>
    
    <!-- Methods for ContentAttribute -->
    <simple-method method-name="createContentAttribute" short-description="Create Content Attribute">
        <check-permission action="_CREATE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run createContentAttribute you must have the CONTENTMGR_CREATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentAttribute" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
    </simple-method>
    <simple-method method-name="updateContentAttribute" short-description="Update Content Attribute">
        <check-permission action="_UPDATE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run updateContentAttribute you must have the CONTENTMGR_UPDATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentAttribute" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentAttribute" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <set-nonpk-fields map-name="parameters" value-name="lookedUpValue"/>
        <store-value value-name="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="removeContentAttribute" short-description="Remove Content Attribute">
        <check-permission action="_DELETE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run removeContentAttribute you must have the CONTENTMGR_DELETE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentAttribute" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentAttribute" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <remove-value value-name="lookedUpValue"/>
    </simple-method>
    
    <!-- Methods for ContentMetaData -->
    <simple-method method-name="createContentMetaData" short-description="Create Content MetaData">
        <check-permission action="_CREATE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run createContentMetaData you must have the CONTENTMGR_CREATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentMetaData" value-name="newEntity"/>
        <set-nonpk-fields map-name="parameters" value-name="newEntity"/>
        <set-pk-fields map-name="parameters" value-name="newEntity"/>
        <create-value value-name="newEntity"/>
    </simple-method>
    <simple-method method-name="updateContentMetaData" short-description="Update Content MetaData">
        <check-permission action="_UPDATE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run updateContentMetaData you must have the CONTENTMGR_UPDATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentMetaData" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentMetaData" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <set-nonpk-fields map-name="parameters" value-name="lookedUpValue"/>
        <store-value value-name="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="removeContentMetaData" short-description="Remove Content MetaData">
        <check-permission action="_DELETE" permission="CONTENTMGR">
            <fail-message message="Security Error: to run removeContentMetaData you must have the CONTENTMGR_DELETE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>
        <make-value entity-name="ContentMetaData" value-name="lookupKeyValue"/>
        <set-pk-fields map-name="parameters" value-name="lookupKeyValue"/>
        <find-by-primary-key entity-name="ContentMetaData" map-name="lookupKeyValue" value-name="lookedUpValue"/>
        <remove-value value-name="lookedUpValue"/>
    </simple-method>

    <!-- Util -->
    <simple-method method-name="findAssocContent" short-description="Find associated content">
        <field-to-field field-name="contentId" map-name="parameters" to-map-name="queryMap"/>
        <field-to-env field-name="mapKeys" map-name="parameters"/>
        <field-to-list field-name="mapKey" list-name="mapKeys"/>
        <iterate entry-name="mapKey" list-name="mapKeys">
            <field-to-field field-name="mapKey" to-map-name="queryMap"/>
            <find-by-and list-name="resultMap" entity-name="ContentAssoc" map-name="queryMap"/>
            <filter-list-by-date list-name="resultMap" to-list-name="validContent"/>
            <iterate entry-name="contentAssoc" list-name="validContent">
                <field-to-list field-name="contentAssoc" list-name="result"/>
            </iterate>
        </iterate>
        <if>
            <condition>
                <if-empty field-name="mapKey" map-name="parameters"/>
            </condition>
            <then>
                <field-to-result field-name="result" result-name="contentAssocs"/>
            </then>
            <else>
                <field-to-result field-name="result" result-name="contentAssoc"/>
            </else>
        </if>
    </simple-method>

    <!-- Generic content services -->
    <simple-method method-name="createEmailContent" short-description="Create Email as Content">
        <check-permission permission="CONTENTMGR" action="_CREATE">
            <fail-message message="Security Error: to run createContentEmail you must have the CONTENTMGR_CREATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>

        <!-- Create subject -->
        <set-service-fields service-name="createContent" map-name="parameters" to-map-name="createSubjectContent"/>
        <field-to-field map-name="parameters" field-name="subject" to-map-name="createSubjectEtext" to-field-name="textData"/>
        <call-service service-name="createElectronicText" in-map-name="createSubjectEtext">
            <result-to-field result-name="dataResourceId" map-name="createSubjectContent"/>
        </call-service>
        <call-service service-name="createContent" in-map-name="createSubjectContent">
            <result-to-field result-name="contentId" map-name="createBodyAssoc"/>
        </call-service>

        <!-- Create plain body -->
        <field-to-field map-name="parameters" field-name="plainBody" to-map-name="createPlainBodyEtext" to-field-name="textData"/>
        <call-service service-name="createElectronicText" in-map-name="createPlainBodyEtext">
            <result-to-field result-name="dataResourceId" map-name="createPlainBodyContent"/>
        </call-service>
        <call-service service-name="createContent" in-map-name="createPlainBodyContent">
            <result-to-field result-name="contentId" map-name="createBodyAssoc" field-name="contentIdTo"/>
        </call-service>
        <!-- Create content assoc between subject and plain body -->
        <string-to-field string="TREE_CHILD" field-name="contentAssocTypeId" map-name="createBodyAssoc"/>
        <string-to-field string="plainBody" field-name="mapKey" map-name="createBodyAssoc"/>
        <call-service service-name="createContentAssoc" in-map-name="createBodyAssoc"/>

        <!-- Create HTML body -->
        <field-to-field map-name="parameters"  field-name="htmlBody" to-map-name="createHtmlBodyEtext" to-field-name="textData"/>
        <call-service service-name="createElectronicText" in-map-name="createHtmlBodyEtext">
            <result-to-field result-name="dataResourceId" map-name="createHtmlBodyContent"/>
        </call-service>
        <call-service service-name="createContent" in-map-name="createHtmlBodyContent">
            <result-to-field result-name="contentId" map-name="createBodyAssoc" field-name="contentIdTo"/>
        </call-service>
        <!-- Create content assoc between subject and html body -->
        <string-to-field string="htmlBody" field-name="mapKey" map-name="createBodyAssoc"/>
        <call-service service-name="createContentAssoc" in-map-name="createBodyAssoc"/>

        <field-to-result field-name="contentId" map-name="createBodyAssoc" result-name="contentId"/>
    </simple-method>
    <simple-method method-name="updateEmailContent" short-description="Update Email Content">
        <check-permission permission="CONTENTMGR" action="_UPDATE">
            <fail-message message="Security Error: to run updateContentEmail you must have the CONTENTMGR_UPDATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>

        <if-not-empty field-name="subjectDataResourceId" map-name="parameters">
            <field-to-field field-name="subjectDataResourceId" map-name="parameters" to-field-name="dataResourceId" to-map-name="updateSubjectEt"/>
            <field-to-field field-name="subject" map-name="parameters" to-field-name="textData" to-map-name="updateSubjectEt"/>
            <call-service service-name="updateElectronicText" in-map-name="updateSubjectEt"/>
        </if-not-empty>
        <if-not-empty field-name="plainBodyDataResourceId" map-name="parameters">
            <field-to-field field-name="plainBodyDataResourceId" map-name="parameters" to-field-name="dataResourceId" to-map-name="updatePlainBodyEt"/>
            <field-to-field field-name="plainBody" map-name="parameters" to-field-name="textData" to-map-name="updatePlainBodyEt"/>
            <call-service service-name="updateElectronicText" in-map-name="updatePlainBodyEt"/>
        </if-not-empty>
        <if-not-empty field-name="htmlBodyDataResourceId" map-name="parameters">
            <field-to-field field-name="htmlBodyDataResourceId" map-name="parameters" to-field-name="dataResourceId" to-map-name="updateHtmlBodyEt"/>
            <field-to-field field-name="htmlBody" map-name="parameters" to-field-name="textData" to-map-name="updateHtmlBodyEt"/>
            <call-service service-name="updateElectronicText" in-map-name="updateHtmlBodyEt"/>
        </if-not-empty>
    </simple-method>

    <simple-method method-name="createDownloadContent" short-description="Create Download as Content">
        <check-permission permission="CONTENTMGR" action="_CREATE">
            <fail-message message="Security Error: to run createContentEmail you must have the CONTENTMGR_CREATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>

        <set-service-fields service-name="createContent" map-name="parameters" to-map-name="createDownloadContent"/>
        <field-to-field map-name="parameters" field-name="file" to-map-name="createDownload" to-field-name="dataResourceContent"/>
        <call-service service-name="createOtherDataResource" in-map-name="createDownload">
            <result-to-field result-name="dataResourceId" map-name="createDownloadContent"/>
        </call-service>
        <call-service service-name="createContent" in-map-name="createDownloadContent">
            <result-to-result result-name="contentId"/>
        </call-service>
    </simple-method>
    <simple-method method-name="updateDownloadContent" short-description="Update Download Content">
        <check-permission permission="CONTENTMGR" action="_UPDATE">
            <fail-message message="Security Error: to run updateContentEmail you must have the CONTENTMGR_UPDATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>

        <if-not-empty field-name="fileDataResourceId" map-name="parameters">
            <field-to-field field-name="fileDataResourceId" map-name="parameters" to-field-name="dataResourceId" to-map-name="updateFile"/>
            <field-to-field field-name="file" map-name="parameters" to-field-name="dataResourceContent" to-map-name="updateFile"/>
            <call-service service-name="updateOtherDataResource" in-map-name="updateFile"/>
        </if-not-empty>
    </simple-method>

    <simple-method method-name="createSimpleTextContent" short-description="Create Simple Text Content">
        <check-permission permission="CONTENTMGR" action="_CREATE">
            <fail-message message="Security Error: to run createContentEmail you must have the CONTENTMGR_CREATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>

        <set-service-fields service-name="createContent" map-name="parameters" to-map-name="createSimpleTextContent"/>
        <field-to-field map-name="parameters" field-name="text" to-map-name="createSimpleText" to-field-name="textData"/>
        <call-service service-name="createElectronicText" in-map-name="createSimpleText">
            <result-to-field result-name="dataResourceId" map-name="createSimpleTextContent"/>
        </call-service>
        <call-service service-name="createContent" in-map-name="createSimpleTextContent">
            <result-to-result result-name="contentId"/>
        </call-service>
    </simple-method>
    <simple-method method-name="updateSimpleTextContent" short-description="Update Simple Text Content">
        <check-permission permission="CONTENTMGR" action="_UPDATE">
            <fail-message message="Security Error: to run updateContentEmail you must have the CONTENTMGR_UPDATE or CONTENTMGR_ADMIN permission"/>
        </check-permission>
        <check-errors/>

        <if-not-empty field-name="textDataResourceId" map-name="parameters">
            <field-to-field field-name="textDataResourceId" map-name="parameters" to-field-name="dataResourceId" to-map-name="updateSimpleText"/>
            <field-to-field field-name="text" map-name="parameters" to-field-name="textData" to-map-name="updateSimpleText"/>
            <call-service service-name="updateElectronicText" in-map-name="updateSimpleText"/>
        </if-not-empty>
    </simple-method>

</simple-methods>
