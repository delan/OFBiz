/*
 * $Id: currentvalprep.bsh,v 1.2 2003/08/19 17:45:19 jonesde Exp $
 *
 * Copyright (c) 2001, 2002 The Open For Business Project - www.ofbiz.org
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 * OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 * THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */



import org.ofbiz.content.widget.html.*;
import org.ofbiz.content.widget.form.*;

import org.ofbiz.base.util.*;
import org.ofbiz.entity.*;
import org.ofbiz.security.*;
import org.ofbiz.service.*;
import org.ofbiz.entity.model.*;

import javax.servlet.*;
import javax.servlet.http.*;


LocalDispatcher dispatcher	= (LocalDispatcher)request.getAttribute("dispatcher");
GenericDelegator delegator = (GenericDelegator) request.getAttribute("delegator");

HashMap currentEntityMap = (HashMap)session.getAttribute("currentEntityMap");
if(currentEntityMap == null){
    currentEntityMap     = new HashMap();
    session.setAttribute("currentEntityMap", currentEntityMap);
}
// Get permission from pagedef config file
String entityName		= page.getProperty("entityName");
GenericPK cachedPK = currentEntityMap.get(entityName);

Map paramMap	= UtilHttp.getParameterMap(request);
//org.ofbiz.base.util.Debug.log("entityName:" + entityName);
//org.ofbiz.base.util.Debug.log("paramMap:" + paramMap);
GenericValue v = delegator.makeValue(entityName, null);
v.setPKFields(paramMap);
GenericPK passedPK = v.getPrimaryKey();

boolean pksEqual = true;
if(cachedPK != null ) {
    keyColl = cachedPK.getPrimaryKey().getAllKeys();
    keyIt = keyColl.iterator();
    while(keyIt.hasNext()) {
        String sCached = null;
        String sPassed = null;
        Object oCached = null;
        Object oCached = null;
        String ky = (String)keyIt.next();
        oPassed = passedPK.get(ky);
        if(oPassed != null) {
            sPassed = oPassed.toString();
            if(sPassed == null || sPassed.length() == 0){
                pksEqual = false;
            } else {
                oCached = cachedPK.get(ky);
                if(oCached != null) {
                    sCached = oCached.toString();
                    if(sPassed == null || sPassed.length() == 0){
                        pksEqual = false;
                    } else {
                        if(!sPassed.equals(sCached)) {
                            pksEqual = true;
                        }
                    }
                }
            }
        } else {
            pksEqual = false;
        }
    }
} 

GenericPK currentPK = passedPK;

if(!pksEqual) {
    currentPK = cachedPK;

   // all other condition result in currentPK = passedPK
}
currentEntityMap.put(entityName, currentPK);

