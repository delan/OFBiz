import org.ofbiz.base.util.UtilHttp;
import org.ofbiz.base.util.UtilMisc;
import org.ofbiz.base.util.Debug;
import org.ofbiz.base.util.UtilValidate;
import org.ofbiz.base.util.StringUtil;
import org.ofbiz.content.search.SearchWorker;


import org.apache.lucene.analysis.Analyzer;
import org.apache.lucene.analysis.standard.StandardAnalyzer;
import org.apache.lucene.document.Document;
import org.apache.lucene.search.Searcher;
import org.apache.lucene.search.IndexSearcher;
import org.apache.lucene.search.Query;
import org.apache.lucene.search.Hits;
import org.apache.lucene.queryParser.QueryParser;
import org.ofbiz.content.widget.html.HtmlFormWrapper;

delegator = request.getAttribute("delegator");
paramMap = UtilHttp.getParameterMap(request);
queryLine = paramMap.get("queryLine");
Debug.logInfo("in search, queryLine:" + queryLine, "");

formDefFile		= page.getProperty("formDefFile");

queryFormName		= page.getProperty("queryFormName");
            Debug.logInfo("in search, queryFormName:" + queryFormName, "");
HtmlFormWrapper queryWrapper = new HtmlFormWrapper(formDefFile, queryFormName, request, response);
context.put("queryWrapper", queryWrapper);

listFormName		= page.getProperty("listFormName");
            Debug.logInfo("in search, listFormName:" + listFormName, "");
HtmlFormWrapper listWrapper = new HtmlFormWrapper(formDefFile, listFormName, request, response);
            Debug.logInfo("in search, listWrapper:" + listWrapper, "");
context.put("listWrapper", listWrapper);

        if (UtilValidate.isNotEmpty(queryLine)) {
            indexPath = SearchWorker.getIndexPath(null);
            Searcher searcher = new IndexSearcher(indexPath);
            Analyzer analyzer = new StandardAnalyzer();


            Query query = QueryParser.parse(queryLine, "content", analyzer);

            Hits hits = searcher.search(query);
            Debug.logInfo("in search, hits:" + hits.length(), "");
            List contentList = new ArrayList();
            HashSet hitSet = new HashSet();
            for (int start = 0; start < hits.length(); start++) {
                 doc = hits.doc(start);
                 dataResourceId = doc.get("dataResourceId");
                 Debug.logInfo("in search, dataResourceId:" + dataResourceId, "");
                 if (dataResourceId != null) {
                     contents = delegator.findByAndCache("Content", UtilMisc.toMap("dataResourceId", dataResourceId));
                 Debug.logInfo("in search, contents:" + contents, "");
                     iter = contents.iterator();
                     while (iter.hasNext()) {
                         content = iter.next();
                         contentId = content.getString("contentId");
                         if (!hitSet.contains(contentId)) {
                             contentList.add(content);
                             hitSet.add(content);
                         }
                     }
                 }
            }
                 Debug.logInfo("in search, contentList:" + contentList, "");
            listWrapper.putInContext("queryResults", contentList); 

        } else {
            request.setAttribute("errorMsgReq", "No content ids were specified.");
        }

