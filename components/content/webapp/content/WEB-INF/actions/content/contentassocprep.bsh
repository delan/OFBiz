/*
 * $Id: contentassocprep.bsh,v 1.3 2003/08/20 01:16:28 ajzeneski Exp $
 *
 * Copyright (c) 2001, 2002 The Open For Business Project - www.ofbiz.org
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 * OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 * THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;
import java.sql.Timestamp;

import org.ofbiz.content.widget.html.*;
import org.ofbiz.content.widget.form.*;

import org.ofbiz.base.util.*;
import org.ofbiz.entity.*;
import org.ofbiz.security.*;
import org.ofbiz.service.*;
import org.ofbiz.entity.model.*;

import javax.servlet.*;
import javax.servlet.http.*;
/**
 *
 * @author     <a href="mailto:byersa@automationgroups.com">Al Byers</a>
 * @version    $Revision: 1.3 $
 * @since      2.1

 * This is a crude general script to find entity data based on the primary key.
 * It only works on entities with one primary key field and it relies on that being
 * in the pagedef config file.
 * It could get and interrogate a GenericEntity object
 */

userLogin = session.getAttribute("userLogin");
Timestamp now = UtilDateTime.nowTimestamp();
    
	String formDefFile		= page.getProperty("formDefFile");
	String entityName		= page.getProperty("entityName");
	String innerFtlName		= page.getProperty("innerFtlName");
	context.put("innerFtlName", innerFtlName);
org.ofbiz.base.util.Debug.log("innerFtlName:" + innerFtlName);

	LocalDispatcher dispatcher	= (LocalDispatcher)request.getAttribute("dispatcher");
       	GenericDelegator delegator = (GenericDelegator) request.getAttribute("delegator");

HashMap currentEntityMap = (HashMap)session.getAttribute("currentEntityMap");
if(currentEntityMap == null){
    currentEntityMap     = new HashMap();
    session.setAttribute("currentEntityMap", currentEntityMap);
}

GenericPK currentPK = currentEntityMap.get("Content");
org.ofbiz.base.util.Debug.log("currentPK:" + currentPK);
contentValue = delegator.findByPrimaryKey(currentPK);

org.ofbiz.base.util.Debug.log("currentContent:" + contentValue);
	context.put("contentValue", contentValue);
	toList = contentValue.getRelatedCache("ToContentAssoc");
org.ofbiz.base.util.Debug.log("toList size:" + toList.size());
	context.put("toList", toList);
	fromList = contentValue.getRelatedCache("FromContentAssoc");
	context.put("fromList", fromList);
org.ofbiz.base.util.Debug.log("fromList size:" + fromList.size());

        contentAssocValue = session.getAttribute("ContentAssoc");
	context.put("contentAssocValue", contentAssocValue);
org.ofbiz.base.util.Debug.log("contentAssocValue:" + contentAssocValue);


	HtmlFormWrapper editWrapper = new HtmlFormWrapper(formDefFile, 
					"EditContentAssoc", request, response);
org.ofbiz.base.util.Debug.log("editWrapper:" + editWrapper);
	editWrapper.putInContext("contentAssocValue", contentAssocValue);
	context.put("editWrapper", editWrapper);


	HtmlFormWrapper addWrapper = new HtmlFormWrapper(formDefFile, 
					"AddContentAssoc", request, response);
	addWrapper.putInContext("contentId", contentValue.get("contentId"));
	addWrapper.putInContext("fromDate", now);
	addWrapper.putInContext("createdDate", now);
	addWrapper.putInContext("lastModifiedDate", now);
	addWrapper.putInContext("createdByUserLogin", userLogin.get("userLoginId"));
	addWrapper.putInContext("lastModifiedByUserLogin", userLogin.get("userLoginId"));
org.ofbiz.base.util.Debug.log("addWrapper:" + addWrapper);
	context.put("addWrapper", addWrapper);

	HtmlFormWrapper listToWrapper = new HtmlFormWrapper(formDefFile, 
					"ListContentAssocTo", request, response);
org.ofbiz.base.util.Debug.log("listToWrapper:" + listToWrapper);
	listToWrapper.putInContext("toList", toList);
	context.put("listToWrapper", listToWrapper);

	HtmlFormWrapper listFromWrapper = new HtmlFormWrapper(formDefFile, 
					"ListContentAssocFrom", request, response);
org.ofbiz.base.util.Debug.log("listFromWrapper:" + listFromWrapper);
	listFromWrapper.putInContext("fromList", fromList);
	context.put("listFromWrapper", listFromWrapper);



	return "success";


