/*
 *  Copyright (c) 2003 The Open For Business Project - www.ofbiz.org
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a 
 *  copy of this software and associated documentation files (the "Software"), 
 *  to deal in the Software without restriction, including without limitation 
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense, 
 *  and/or sell copies of the Software, and to permit persons to whom the 
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included 
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS 
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF 
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY 
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT 
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR 
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *@author     Andy Zeneski
 *@author     David E. Jones
 *@version    $Revision: 1.2 $
 *@since      2.2
 */

import java.util.*;
import org.ofbiz.entity.*;
import org.ofbiz.base.util.*;
import org.ofbiz.content.widget.html.*;

externalLoginKey = request.getAttribute("externalLoginKey");
externalKeyParam = (externalLoginKey == null) ? "" : ("&externalLoginKey=" + externalLoginKey);
context.put("externalKeyParam", externalKeyParam);

delegator = request.getAttribute("delegator");
security = request.getAttribute("security");

if (security.hasEntityPermission("PARTYMGR", "_VIEW", session)) {
    context.put("hasViewPermission", true);
} else {
    context.put("hasViewPermission", false);
}
if (security.hasEntityPermission("PARTYMGR", "_CREATE", session)) {
    context.put("hasCreatePermission", true);
} else {
    context.put("hasCreatePermission", false);
}
if (security.hasEntityPermission("PARTYMGR", "_UPDATE", session)) {
    context.put("hasUpdatePermission", true);
} else {
    context.put("hasUpdatePermission", false);
}

partyId = request.getParameter("party_id");
if (partyId == null) partyId = request.getParameter("partyId");
if (partyId == null) partyId = (String) request.getAttribute("partyId");
context.put("partyId", partyId);

party = delegator.findByPrimaryKey("Party", UtilMisc.toMap("partyId", partyId));
vendor = party.getRelatedOne("Vendor");
context.put("party", party);
context.put("lookupPerson", party.getRelatedOne("Person"));
context.put("lookupGroup", party.getRelatedOne("PartyGroup"));
context.put("vendor", vendor);

HtmlFormWrapper editVendorWrapper = new HtmlFormWrapper("/party/PartyForms.xml", "EditVendor", request, response);
editVendorWrapper.putInContext("vendor", vendor);
editVendorWrapper.putInContext("partyId", partyId);
context.put("editVendorWrapper", editVendorWrapper);
