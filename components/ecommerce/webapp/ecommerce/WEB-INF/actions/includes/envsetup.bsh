/*
 *  Copyright (c) 2003-2004 The Open For Business Project - www.ofbiz.org
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a
 *  copy of this software and associated documentation files (the "Software"),
 *  to deal in the Software without restriction, including without limitation
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense,
 *  and/or sell copies of the Software, and to permit persons to whom the
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *@author     David E. Jones (jonesde@ofbiz.org)
 *@version    $Revision: 1.10 $
 *@since      2.1
 */

import java.util.*;
import org.ofbiz.base.util.*;
import org.ofbiz.entity.*;
import org.ofbiz.product.catalog.CatalogWorker;
import org.ofbiz.product.store.ProductStoreWorker;
import org.ofbiz.common.CommonWorkers;
import org.ofbiz.order.shoppingcart.*;
import org.ofbiz.content.webapp.control.*;

userLogin = session.getAttribute("userLogin");

productStore = ProductStoreWorker.getProductStore(request);
context.put("productStore", productStore);

prodCatalog = CatalogWorker.getProdCatalog(request);
if (prodCatalog != null) {
    catalogStyleSheet = prodCatalog.get("styleSheet");
    if (catalogStyleSheet != null) context.put("catalogStyleSheet", catalogStyleSheet);
    catalogHeaderLogo = prodCatalog.get("headerLogo");
    if (catalogHeaderLogo != null) context.put("catalogHeaderLogo", catalogHeaderLogo);
}

context.put("checkLoginUrl", LoginWorker.makeLoginUrl(request, "checkLogin"));
context.put("catalogQuickaddUse", CatalogWorker.getCatalogQuickaddUse(request));

availableLocales = UtilMisc.availableLocales();
request.setAttribute("availableLocales",availableLocales);

locale = UtilHttp.getLocale(request);
request.setAttribute("locale",locale);
uiLabelMap = UtilProperties.getResourceBundleMap("EcommerceUiLabels", locale);
request.setAttribute("uiLabelMap", uiLabelMap);

eventMessageList = new LinkedList();
errorMessageList = new LinkedList();
if (request.getAttribute("_EVENT_MESSAGE_") != null) {
    eventMessageList.add(UtilFormatOut.replaceString(request.getAttribute("_EVENT_MESSAGE_"), "\n", "<br>"));
    request.removeAttribute("_EVENT_MESSAGE_");
}
if (request.getAttribute("_EVENT_MESSAGE_LIST_") != null) {
    eventMessageList.addAll(request.getAttribute("_EVENT_MESSAGE_LIST_"));
    request.removeAttribute("_EVENT_MESSAGE_LIST_");
}
if (request.getAttribute("_ERROR_MESSAGE_") != null) {
    errorMessageList.add(UtilFormatOut.replaceString(request.getAttribute("_ERROR_MESSAGE_"), "\n", "<br>"));
    request.removeAttribute("_ERROR_MESSAGE_");
}
if (session.getAttribute("_ERROR_MESSAGE_") != null) {
    errorMessageList.add(UtilFormatOut.replaceString(session.getAttribute("_ERROR_MESSAGE_"), "\n", "<br>"));
    session.removeAttribute("_ERROR_MESSAGE_");
}
if (request.getAttribute("_ERROR_MESSAGE_LIST_") != null) {
    errorMessageList.addAll(request.getAttribute("_ERROR_MESSAGE_LIST_"));
    request.removeAttribute("_ERROR_MESSAGE_LIST_");
}
request.setAttribute("eventMessageList", eventMessageList);
request.setAttribute("errorMessageList", errorMessageList);

