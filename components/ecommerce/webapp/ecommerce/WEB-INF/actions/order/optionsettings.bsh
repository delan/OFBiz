/*
 *  Copyright (c) 2003 The Open For Business Project - www.ofbiz.org
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a
 *  copy of this software and associated documentation files (the "Software"),
 *  to deal in the Software without restriction, including without limitation
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense,
 *  and/or sell copies of the Software, and to permit persons to whom the
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *@author     Andy Zeneski (jaz@ofbiz.org)
 *@version    $Rev:$
 *@since      2.2
*/

import org.ofbiz.entity.*;
import org.ofbiz.base.util.*;
import org.ofbiz.order.shoppingcart.*;
import org.ofbiz.party.contact.*;
import org.ofbiz.product.store.*;

delegator = request.getAttribute("delegator");
cart = session.getAttribute("shoppingCart");
context.put("cart", cart);
productStoreId = ProductStoreWorker.getProductStoreId(request);

itemSizes = new LinkedList();
featureIdSet = new HashSet();
shipAddress = null;
shipWeight = 0.00;
shipTotal = 0.00;
if (cart != null) {
    shipCmId = cart.getShippingContactMechId();
    if (shipCmId != null) {
        shipAddress = delegator.findByPrimaryKey("PostalAddress", UtilMisc.toMap("contactMechId", shipCmId));
    }
    itemSizes = cart.getShippableSizes();
    featureIdMap = cart.getFeatureIdQtyMap();
    shipWeight = cart.getShippableWeight();
    shipTotal = cart.getShippableTotal();
}

// nuke the event messages
request.removeAttribute("_EVENT_MESSAGE_");

party = null;
partyId = session.getAttribute("orderPartyId");
if (partyId != null) {
    party = delegator.findByPrimaryKey("Party", UtilMisc.toMap("partyId", partyId));
    context.put("party", party);
}

context.put("carrierShipmentMethodList", ProductStoreWorker.getAvailableStoreShippingMethods(delegator, productStoreId, shipAddress, itemSizes, featureIdMap, shipWeight, shipTotal));
context.put("emailList",  ContactHelper.getContactMechByType(party, "EMAIL_ADDRESS", false));

if (cart != null && cart.getShipmentMethodTypeId() != null && cart.getCarrierPartyId() != null) {
    context.put("chosenShippingMethod", cart.getShipmentMethodTypeId() + '@' + cart.getCarrierPartyId());
}
