/*
 *  Copyright (c) 2003 The Open For Business Project - www.ofbiz.org
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a 
 *  copy of this software and associated documentation files (the "Software"), 
 *  to deal in the Software without restriction, including without limitation 
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense, 
 *  and/or sell copies of the Software, and to permit persons to whom the 
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included 
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS 
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF 
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY 
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT 
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR 
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *@author     Andy Zeneski (jaz@ofbiz.org)
 *@version    $Rev:$
 *@since      2.2
*/

import org.ofbiz.entity.*;
import org.ofbiz.base.util.*;
import org.ofbiz.order.shoppingcart.*;
import org.ofbiz.party.contact.*;
import org.ofbiz.product.catalog.*;

delegator = request.getAttribute("delegator");
cart = session.getAttribute("shoppingCart");
partyId = cart.getPartyId();
context.put("cart", cart);

// nuke the event messages
request.removeAttribute("_EVENT_MESSAGE_");

if ("SALES_ORDER".equals(cart.getOrderType())) {
if (partyId != null && !partyId.equals("_NA_")) {
    party = delegator.findByPrimaryKey("Party", UtilMisc.toMap("partyId", partyId));
    if (party != null) {                
        shippingContactMechList = ContactHelper.getContactMech(party, "SHIPPING_LOCATION", "POSTAL_ADDRESS", false);
        person = party.getRelatedOne("Person");
        context.put("party", party);
        context.put("person", person);
        context.put("shippingContactMechList", shippingContactMechList);
    }
}
} else {
    // Purchase order
    if (partyId != null && !partyId.equals("_NA_")) {
        party = delegator.findByPrimaryKey("Party", UtilMisc.toMap("partyId", partyId));
        if (party != null) {
           person = party.getRelatedOne("Person");
           context.put("party", party);
           context.put("person", person);
         }
    }
     String storeId = cart.getProductStoreId();
     GenericValue store = delegator.findByPrimaryKey("ProductStore", UtilMisc.toMap("productStoreId", storeId));
     List facilityContactMechValueMaps = ContactMechWorker.getFacilityContactMechValueMaps(delegator, store.getString("inventoryFacilityId"), false, null);
     context.put("shippingContactMechListF", facilityContactMechValueMaps);
}

