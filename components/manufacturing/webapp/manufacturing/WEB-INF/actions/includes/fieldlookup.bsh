/*
 *  Copyright (c) 2003 The Open For Business Project - www.ofbiz.org
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a 
 *  copy of this software and associated documentation files (the "Software"), 
 *  to deal in the Software without restriction, including without limitation 
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense, 
 *  and/or sell copies of the Software, and to permit persons to whom the 
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included 
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS 
 *  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF 
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY 
 *  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT 
 *  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR 
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *@author     Johan Isacsson
 *@version    $Revision: 1.2 $
 *@since      2.2
 */

import java.util.*;
import org.ofbiz.base.util.UtilMisc;
import org.ofbiz.content.widget.html.*;

formName = request.getParameter("formName");
if (formName == null) formName = request.getAttribute("formName");
uiLabelMap = request.getAttribute("uiLabelMap");
HtmlFormWrapper lookupFieldWrapper = new HtmlFormWrapper("/includes/FieldLookupForms.xml", formName, request, response);
action = request.getParameter("submitButton");
if(uiLabelMap.get("CommonLookup").equals(action)) {
    lookupService = request.getParameter("lookupService");
    dispatcher = request.getAttribute("dispatcher");
 
    serviceCtx = lookupFieldWrapper.getFromContext("parameters");
    serviceCtx.remove("formName");
    serviceCtx.remove("lookupService");
    serviceCtx.remove("submitButton");
    serviceCtx.remove("id");
    serviceCtx.put("userLogin",context.getSession().getAttribute("userLogin"));
    Map result = dispatcher.runSync(lookupService, serviceCtx);
   	if (result.get("lookupResult").size() == 1 && "NO_MATCH".equals(result.get("lookupResult").get(1).get("value")))
    		context.put("noMatch","NO_MATCH");
    context.put("resultList", result.get("lookupResult"));    
}
if ("lookupRoutingTask".equals(formName)) {
	delegator = request.getAttribute("delegator");
	List allMachineGroups = delegator.findByAnd("FixedAsset",UtilMisc.toMap("fixedAssetTypeId", "GROUP_EQUIPMENT"),UtilMisc.toList("fixedAssetName"));
	allMachineGroups.addFirst(UtilMisc.toMap("fixedAssetId","ANY","fixedAssetName","${uiLabelMap.CommonAny}"));
	lookupFieldWrapper.putInContext("allMachineGroups", allMachineGroups);
	context.put("formName", formName);
}
lookupFieldWrapper.putInContext("formName", formName);
lookupFieldWrapper.putInContext("id", request.getParameter("id"));
lookupFieldWrapper.putInContext("uiLabelMap", uiLabelMap);
context.put("lookupFieldWrapper", lookupFieldWrapper);
