import java.util.*;
import org.ofbiz.core.entity.*;
import org.ofbiz.core.util.*;
import org.ofbiz.commonapp.security.login.*;
import org.ofbiz.commonapp.common.*;

import org.ofbiz.commonapp.party.contact.*;
import org.ofbiz.commonapp.party.party.*;
import org.ofbiz.commonapp.accounting.payment.*;
import org.ofbiz.commonapp.security.login.*;

String externalLoginKey = LoginEvents.getExternalLoginKey(request);
String externalKeyParam = externalLoginKey == null ? "" : "&externalLoginKey=" + externalLoginKey;
context.put("externalKeyParam",externalKeyParam);

delegator = request.getAttribute("delegator");

String partyId = request.getParameter("party_id");
if (partyId == null) partyId = (String) request.getAttribute("partyId");
if (partyId == null) partyId = (String) request.getSession().getAttribute("partyId");
else request.getSession().setAttribute("partyId", partyId);
context.put("partyId", partyId);

List userLogins = delegator.findByAnd("UserLogin", UtilMisc.toMap("partyId", partyId));
if (userLogins != null && userLogins.size() > 0) context.put("userLogins", userLogins);

List partyRoles = delegator.findByAnd("RoleTypeAndParty", UtilMisc.toMap("partyId", partyId));
if (partyRoles != null && partyRoles.size() > 0) context.put("partyRoles", partyRoles);

List roles = delegator.findAll("RoleType", UtilMisc.toList("description", "roleTypeId"));
if (roles != null) context.put("roles", roles);

List relateTypes = delegator.findAll("PartyRelationshipType", UtilMisc.toList("description", "partyRelationshipTypeId"));
if (relateTypes != null) context.put("relateTypes", relateTypes);

List notes = delegator.findByAnd("PartyNoteView", UtilMisc.toMap("targetPartyId", partyId), UtilMisc.toList("-noteDateTime"));
if (notes != null && notes.size() > 0) context.put("notes", notes);

GenericValue avsOverride = delegator.findByPrimaryKey("PartyIcsAvsOverride", UtilMisc.toMap("partyId", partyId));
if (avsOverride != null) context.put("avsOverride", avsOverride);
    
List visits = delegator.findByAnd("Visit", UtilMisc.toMap("partyId", partyId), UtilMisc.toList("-fromDate"));
if (visits != null) context.put("visits", visits);

Map otherValues = PartyWorker.getPartyOtherValues(request, partyId, "party", "lookupPerson", "lookupGroup");
context.put("party",otherValues.get("party"));
context.put("lookupPerson",otherValues.get("lookupPerson"));
context.put("lookupGroup",otherValues.get("lookupGroup"));

boolean showOld = "true".equals(request.getParameter("SHOW_OLD"));
context.put("showOld", new Boolean(showOld));

List partyContactMechValueMaps = ContactMechWorker.getPartyContactMechValueMaps(delegator, partyId, showOld);
context.put("contactMeches", partyContactMechValueMaps);

List paymentMethodValueMaps = PaymentWorker.getPartyPaymentMethodValueMaps(delegator, partyId, showOld);
context.put("paymentMethodValueMaps", paymentMethodValueMaps);
 
context.put("nowStr", UtilDateTime.nowTimestamp().toString());    

    


